diff --git a/usr/palm/applications/com.palm.app.messaging/app/controllers/chatview-assistant.js b/usr/palm/applications/com.palm.app.messaging/app/controllers/chatview-assistant.js
index 84e13e3..ad7a496 100644
--- a/usr/palm/applications/com.palm.app.messaging/app/controllers/chatview-assistant.js
+++ b/usr/palm/applications/com.palm.app.messaging/app/controllers/chatview-assistant.js
@@ -117,7 +117,7 @@ var ChatviewAssistant = Class.create({
 		this.handleCancelAttachment = this.resetTextBox.bind(this, false);
 		this.handleTextAreaChange = this.handleTextAreaChange.bind(this);
 		this.handleTextAreaKeyDown = this.handleTextAreaKeyDown.bind(this);
-		this.handleTextAreaKeyUp = this.handleTextAreaKeyUp.bind(this);
+		// this.handleTextAreaKeyUp = this.handleTextAreaKeyUp.bind(this);
 		this.handleScreenStateChange = this.handleScreenStateChange.bind(this);
 		this.handleStageFocus = this.handleStageFocus.bind(this);
 		this.handleStageBlur = this.handleStageBlur.bind(this);
@@ -134,7 +134,7 @@ var ChatviewAssistant = Class.create({
 			hintText: $L('Enter message here...'),
 			multiline: true,
 			focus: false,
-			enterSubmits: true,
+			enterSubmits: false,
 			textFieldName: "messageTextElement",
 			className: " ",
 			changeOnKeyPress: true
@@ -182,7 +182,7 @@ var ChatviewAssistant = Class.create({
 		this.cancelAttachment.observe(Mojo.Event.tap, this.handleCancelAttachment);
 	
 		this.messageTextElement.observe('keydown', this.handleTextAreaKeyDown);
-		this.messageTextElement.observe('keyup', this.handleTextAreaKeyUp);
+		// this.messageTextElement.observe('keyup', this.handleTextAreaKeyUp);
 		this.messageTextWidget.observe(Mojo.Event.propertyChange, this.handleTextAreaChange);
 
 		// observe keydown/keyup on the text field WIDGET to handle height changes due to text forcing it to resize
@@ -247,7 +247,7 @@ var ChatviewAssistant = Class.create({
 		this.messageTextWidget.stopObserving('keyup', this.handleTextFieldResize);
 		this.messageTextWidget.stopObserving(Mojo.Event.propertyChange, this.handleTextAreaChange);
 		this.messageTextElement.stopObserving('keydown', this.handleTextAreaKeyDown);
-		this.messageTextElement.stopObserving('keyup', this.handleTextAreaKeyUp);
+		// this.messageTextElement.stopObserving('keyup', this.handleTextAreaKeyUp);
 		this.Messaging.DisplayState.stopObserving(this.handleScreenStateChange);
 		this.controller.document.removeEventListener(Mojo.Event.stageActivate, this.handleStageFocus, false);
 		this.controller.document.removeEventListener(Mojo.Event.stageDeactivate, this.handleStageBlur, false);
@@ -2371,7 +2371,7 @@ var ChatviewAssistant = Class.create({
 		}
 	},
 
-	handleTextAreaKeyUp: function(event) {
+	/* handleTextAreaKeyUp: function(event) {
 		if (event && Mojo.Char.isEnterKey(event.keyCode)) {
 			this.considerForSend();
 			Event.stop(event);
@@ -2379,7 +2379,7 @@ var ChatviewAssistant = Class.create({
 			// Remove highlight that was added on keydown.
 			this.sendButton.removeClassName('selected');
 		}
-	},
+	}, */
 
 	handleTextAreaChange: function() {
 		if (this.messageTextElement && this.messageTextElement.value == '') {
diff --git a/usr/palm/applications/com.palm.app.messaging/app/controllers/compose-assistant.js b/usr/palm/applications/com.palm.app.messaging/app/controllers/compose-assistant.js
index 8f9b17e..e0fddef 100644
--- a/usr/palm/applications/com.palm.app.messaging/app/controllers/compose-assistant.js
+++ b/usr/palm/applications/com.palm.app.messaging/app/controllers/compose-assistant.js
@@ -80,7 +80,7 @@ var ComposeAssistant = Class.create({
 		this.considerForSend = this.considerForSend.bind(this);
 		this.attachFilePicker = this.attachFilePicker.bind(this);
 		this.handleTextAreaChange = this.handleTextAreaChange.bind(this);
-		this.handleTextAreaKeyUp = this.handleTextAreaKeyUp.bind(this);
+		// this.handleTextAreaKeyUp = this.handleTextAreaKeyUp.bind(this);
 		this.handleCancelAttachment = this.resetTextBox.bind(this,false);		
 		this.handleRecipientsChanged = this.handleRecipientsChanged.bind(this);
 
@@ -120,7 +120,7 @@ var ComposeAssistant = Class.create({
 	    hintText: $L('Enter message here...'),
 	    multiline: true,
 	    focus: false,
-	    enterSubmits: true,
+	    enterSubmits: false,
 		requiresEnterKey: true,
 	    modelProperty: "value",
 		changeOnKeyPress: true
@@ -147,7 +147,7 @@ var ComposeAssistant = Class.create({
 //	}); 
 	
 	
-	this.messageTextElement.observe('keyup', this.handleTextAreaKeyUp);
+	// this.messageTextElement.observe('keyup', this.handleTextAreaKeyUp);
 	this.messageTextWidget.observe(Mojo.Event.propertyChange, this.handleTextAreaChange);
 	
     // Observe add/delete to the addressing widget
@@ -326,12 +326,12 @@ var ComposeAssistant = Class.create({
 		} 
 	},
 
-	handleTextAreaKeyUp: function(event) {
+	/* handleTextAreaKeyUp: function(event) {
 		if (event && Mojo.Char.isEnterKey(event.keyCode)) {
 			this.considerForSend();
 			Event.stop(event);
 		}		
-	},
+	}, */
 
 	handleTextAreaChange: function() {
 		if (this.messageTextElement && this.messageTextElement.value == '') {
@@ -462,7 +462,7 @@ var ComposeAssistant = Class.create({
       that.controller.stopListening('searchList',event,that.handleRecipientsChanged);
     });
 	
-	this.messageTextElement.stopObserving('keyup', this.handleTextAreaKeyUp);
+	// this.messageTextElement.stopObserving('keyup', this.handleTextAreaKeyUp);
 	this.messageTextWidget.stopObserving(Mojo.Event.propertyChange, this.handleTextAreaChange);
 	
 	this.characterCounter.destroy();
