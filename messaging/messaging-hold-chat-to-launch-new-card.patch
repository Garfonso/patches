Name: Hold Chat To Launch New Card
Version: 1.3.5-1
Author: Fritos1406
Description: 

this add the feature to hold on a chat and will launch in a new card
its pretty much alike as the launch in new card
but this will launch a new only if u hold
while still keeping the tap to view in same card as well
(buggy since 1.3.5 update)

--- .orig/usr/palm/applications/com.palm.app.messaging/app/controllers/listview-assistant.js
+++ /usr/palm/applications/com.palm.app.messaging/app/controllers/listview-assistant.js
@@ -151,6 +151,8 @@
 		this.filter = this.filter.bind(this);
 		this.handleHistoryListTap = this.handleHistoryListTap.bindAsEventListener(this);
 		this.handleHistoryListDelete = this.handleHistoryListDelete.bindAsEventListener(this);
+        this.handleHistoryListHold = this.handleHistoryListHold.bindAsEventListener(this);
+        this.handleBuddyListHold = this.handleBuddyListHold.bindAsEventListener(this);		
 		this.handleBuddyListTap = this.handleBuddyListTap.bindAsEventListener(this);
 		this.handleAvailabilityPickerTap = this.handleAvailabilityPickerTap.bindAsEventListener(this);
 		this.customMessageUpdate = this.customMessageUpdate.bind(this);
@@ -281,6 +283,8 @@
 
 		// observe clicks on the buddy list & history list
 		this.historyListWidget.observe(Mojo.Event.listTap, this.handleHistoryListTap);
+	    this.historyListWidget.observe(Mojo.Event.hold, this.handleHistoryListHold);
+    	this.BuddyListWidget.observe(Mojo.Event.hold, this.handleBuddyListHold);		
 		// observe swipe to delete on the history list
 		this.historyListWidget.observe(Mojo.Event.listDelete, this.handleHistoryListDelete);
 		this.buddyListWidget.observe(Mojo.Event.listTap, this.handleBuddyListTap);
@@ -310,6 +314,12 @@
 		MessagingMojoService.deleteChatThread(this.controller, chatThreadId);
 	},
 	
+	handleHistoryListHold: function(e) {
+	    MessagingUtils.simpleListClick(this.controller.get(e.target),"historyRow",this.launchChatInNewCard.bind(this),true);
+	},
+	handleBuddyListHold: function(e) {
+	    MessagingUtils.simpleListClick(this.controller.get(e.target),"buddyList",this.launchChatInNewCard.bind(this),true);
+	},	
 	handleBuddyListTap: function(e) {
 		this.launchChatView(e.item.chatId, { selectIMTransport: true });
 	},
@@ -1070,6 +1080,26 @@
 			popScenesTo: CONSTANTS.SCENE_ID_ACCOUNT_SUMMARY
 		});
 	},
+
+  launchChatInNewCard: function(chatThreadId) {
+	var stageController = Mojo.Controller.appController.getStageController("messaging"+chatThreadId);
+		if (stageController) {
+			stageController.activate();
+			return;
+		}
+
+	var params = {name: 'messaging' + chatThreadId,
+			lightweight: Mojo.Controller.appInfo.lwStages
+	};
+
+	var callback = function(controller) {
+		controller.pushScene('chatview',chatThreadId,{
+					focusWindow: true
+				});		
+	};
+
+	Mojo.Controller.getAppController().createStageWithCallback(params, callback);
+  },
 	
 	launchChatView: function(chatThreadId, params) {
 		if (params === undefined) {
@@ -1102,6 +1132,8 @@
 		this.filterField.stopObserving(Mojo.Event.filter, this.filter);
 		this.historyListWidget.stopObserving(Mojo.Event.listTap, this.handleHistoryListTap);
 		this.historyListWidget.stopObserving(Mojo.Event.listDelete, this.handleHistoryListDelete);
+    	this.historyListWidget.stopObserving(Mojo.Event.hold, this.handleHistoryListHold);	
+	 	this.buddyListWidget.stopObserving(Mojo.Event.hold, this.handleBuddyListHold);
 		this.buddyListWidget.stopObserving(Mojo.Event.listTap, this.handleBuddyListTap);
 		this.customMessageField.stopObserving('blur', this.customMessageUpdate);
 		this.customMessageField.stopObserving('keyup', this.handleCustomMessageFieldKeyUp);
