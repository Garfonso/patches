--- .orig/etc/palm/persistentWindows.conf
+++ /etc/palm/persistentWindows.conf
@@ -1,6 +1,8 @@
 {
 		"com.palm.systemui": [
-			"DeviceMenu"
+			"DeviceMenu",
+			"TodayMenu",
+			"StatusMenu"
 		],
 
 		"com.palm.app.phone": [
--- .orig/usr/palm/frameworks/mojo/submissions/367/stylesheets/global-menus.css
+++ /usr/palm/frameworks/mojo/submissions/367/stylesheets/global-menus.css
@@ -626,9 +626,11 @@
   padding-top: 28px;
 }
 
-/* Application and Device Menus */
+/* Status, Today, Device and Application Menus */
 
 #palm-app-menu.palm-popup-container,
+#palm-status-menu.palm-popup-container,
+#palm-today-menu.palm-popup-container,
 #palm-device-menu.palm-popup-container {
   font-family: "Prelude" !important;
   text-align: left !important;
@@ -648,6 +650,8 @@
 }
 
 #palm-app-menu.palm-popup-container.palm-touch-rows-7,
+#palm-status-menu.palm-popup-container.palm-touch-rows-7,
+#palm-today-menu.palm-popup-container.palm-touch-rows-7,
 #palm-device-menu.palm-popup-container.palm-touch-rows-7 {
   -webkit-border-image: url(../images/system-menu-background-solid.png) 30 28 35 28 repeat repeat;
 }
@@ -655,24 +659,48 @@
 #palm-app-menu.palm-popup-container {
   top: -2px;
   left: -6px;
-  min-width: 278px;
+  min-width: 306px;
+  max-width: 306px;
+  max-height: 413px;
+}
+
+#palm-status-menu.palm-popup-container {
+  top: -2px;
+  left: -6px;
+  min-width: 306px;
+  max-width: 306px;
+  max-height: 413px;
+}
+
+#palm-today-menu.palm-popup-container {
+  top: -2px;
+  left: 8px;
+  min-width: 306px;
+  max-width: 306px;
   max-height: 413px;
 }
 
 #palm-device-menu.palm-popup-container {
   top: -2px;
   right: -6px;
-  min-width: 278px;
+  min-width: 306px;
+  max-width: 306px;
   max-height: 413px;
 }
 
 #palm-app-menu > .palm-popup-wrapper,
+#palm-status-menu > .palm-popup-wrapper,
+#palm-today-menu > .palm-popup-wrapper,
 #palm-device-menu > .palm-popup-wrapper {
   margin: -58px -21px -48px -52px;
 }
 
 #palm-app-menu .palm-popup-fade-top,
 #palm-app-menu .palm-popup-fade-bottom,
+#palm-status-menu .palm-popup-fade-top,
+#palm-status-menu .palm-popup-fade-bottom,
+#palm-today-menu .palm-popup-fade-top,
+#palm-today-menu .palm-popup-fade-bottom,
 #palm-device-menu .palm-popup-fade-top,
 #palm-device-menu .palm-popup-fade-bottom {
   margin-right: 9px;
@@ -687,6 +715,25 @@
   left: -32px;
   bottom: -24px;
 }
+
+#palm-status-menu .palm-popup-fade-top {
+  left: -32px;
+  top: -27px;
+}
+#palm-status-menu .palm-popup-fade-bottom {
+  left: -32px;
+  bottom: -24px;
+}
+
+#palm-today-menu .palm-popup-fade-top {
+  left: -32px;
+  top: -27px;
+}
+#palm-today-menu .palm-popup-fade-bottom {
+  left: -32px;
+  bottom: -24px;
+}
+
 #palm-device-menu .palm-popup-fade-top {
   left: -33px;
   top: -27px;
@@ -698,50 +745,72 @@
 
 
 #palm-app-menu .palm-popup-fade-top > .fade-background,
+#palm-status-menu .palm-popup-fade-top > .fade-background,
+#palm-today-menu .palm-popup-fade-top > .fade-background,
 #palm-device-menu .palm-popup-fade-top > .fade-background {
   -webkit-border-image: url(../images/system-menu-fade-top.png) 0 24 0 24 repeat repeat;
 }
 #palm-app-menu .palm-popup-fade-top > .fade-arrow,
+#palm-status-menu .palm-popup-fade-top > .fade-arrow,
+#palm-today-menu .palm-popup-fade-top > .fade-arrow,
 #palm-device-menu .palm-popup-fade-top > .fade-arrow {
   background: url(../images/palm-popup-fade-arrow-up-dark.png) center center no-repeat;
 }
 #palm-app-menu .palm-popup-fade-bottom > .fade-background,
+#palm-status-menu .palm-popup-fade-bottom > .fade-background,
+#palm-today-menu .palm-popup-fade-bottom > .fade-background,
 #palm-device-menu .palm-popup-fade-bottom > .fade-background {
   -webkit-border-image: url(../images/system-menu-fade-bottom.png) 0 24 0 24 repeat repeat;
 }
 #palm-app-menu .palm-popup-fade-bottom > .fade-arrow,
+#palm-status-menu .palm-popup-fade-bottom > .fade-arrow,
+#palm-today-menu .palm-popup-fade-bottom > .fade-arrow,
 #palm-device-menu .palm-popup-fade-bottom > .fade-arrow {
   background: url(../images/palm-popup-fade-arrow-down-dark.png) center center no-repeat;
 }
 
 #palm-app-menu.palm-touch-rows-7 .palm-popup-fade-top > .fade-background,
+#palm-status-menu.palm-touch-rows-7 .palm-popup-fade-top > .fade-background,
+#palm-today-menu.palm-touch-rows-7 .palm-popup-fade-top > .fade-background,
 #palm-device-menu.palm-touch-rows-7 .palm-popup-fade-top > .fade-background {
   -webkit-border-image: url(../images/system-menu-fade-top-solid.png) 0 24 0 24 repeat repeat;
 }
 #palm-app-menu.palm-touch-rows-7 .palm-popup-fade-bottom > .fade-background,
+#palm-status-menu.palm-touch-rows-7 .palm-popup-fade-bottom > .fade-background,
+#palm-today-menu.palm-touch-rows-7 .palm-popup-fade-bottom > .fade-background,
 #palm-device-menu.palm-touch-rows-7 .palm-popup-fade-bottom > .fade-background {
   -webkit-border-image: url(../images/system-menu-fade-bottom-solid.png) 0 24 0 24 repeat repeat;
 }
 
 #palm-app-menu .palm-popup-content,
+#palm-status-menu .palm-popup-content,
+#palm-today-menu .palm-popup-content,
 #palm-device-menu .palm-popup-content {
   margin: 31px 0 26px 31px;
 }
 
 #palm-app-menu .palm-row,
+#palm-status-menu .palm-row,
+#palm-today-menu .palm-row,
 #palm-device-menu .palm-row {
   background: url(../images/list-separator-dark-taper.png) bottom left no-repeat;
 }
 
 #palm-app-menu .palm-row.single,
+#palm-status-menu .palm-row.single,
+#palm-today-menu .palm-row.single,
 #palm-device-menu .palm-row.single,
 #palm-app-menu .palm-row.last,
+#palm-status-menu .palm-row.last,
+#palm-today-menu .palm-row.last,
 #palm-device-menu .palm-row.last {
   background: none;
   -webkit-border-image: none;
 }
 
 #palm-app-menu .label,
+#palm-status-menu .label,
+#palm-today-menu .label,
 #palm-device-menu .label {
   color: #AAA;
   text-shadow: #333 0 -1px 0;
@@ -760,14 +829,20 @@
 }
 
 #palm-app-menu .palm-row.selected,
+#palm-status-menu .palm-row.selected,
+#palm-today-menu .palm-row.selected,
 #palm-device-menu .palm-row.selected,
 #palm-app-menu .palm-row.selected.submenu-group,
+#palm-status-menu .palm-row.selected.submenu-group,
+#palm-today-menu .palm-row.selected.submenu-group,
 #palm-device-menu .palm-row.selected.submenu-group {
   background: none;
   -webkit-border-image: url(../images/system-menu-selection-gradient-default.png) 24 20 24 20 repeat repeat;
 }
 
 #palm-app-menu .palm-popup-content > .palm-list > .menu-start.selected,
+#palm-status-menu .palm-popup-content > .palm-list > .menu-start.selected,
+#palm-today-menu .palm-popup-content > .palm-list > .menu-start.selected,
 #palm-device-menu .palm-popup-content > .palm-list > .menu-start.selected,
 #palm-app-menu .palm-row.first.selected.submenu-group {
   background: none;
@@ -775,18 +850,24 @@
 }
 
 #palm-app-menu .palm-popup-content > .palm-list > .menu-end.selected,
+#palm-status-menu .palm-popup-content > .palm-list > .menu-end.selected,
+#palm-today-menu .palm-popup-content > .palm-list > .menu-end.selected,
 #palm-device-menu .palm-popup-content > .palm-list > .menu-end.selected {
   background: none;
   -webkit-border-image: url(../images/system-menu-selection-gradient-last.png) 24 20 24 20 repeat repeat;
 }
 
 #palm-app-menu .palm-row.submenu-group,
+#palm-status-menu .palm-row.submenu-group,
+#palm-today-menu .palm-row.submenu-group,
 #palm-device-menu .palm-row.submenu-group {
   -webkit-border-image: none;
   background: url(../images/system-menu-section-divider.png) bottom left no-repeat;
 }
 
 #palm-app-menu .palm-drawer-container,
+#palm-status-menu .palm-drawer-container,
+#palm-today-menu .palm-drawer-container,
 #palm-device-menu .palm-drawer-container {
   position: relative;
   top: 0px;
@@ -797,6 +878,8 @@
 }
 
 #palm-app-menu .palm-drawer-contents,
+#palm-status-menu .palm-drawer-contents,
+#palm-today-menu .palm-drawer-contents,
 #palm-device-menu .palm-drawer-contents {
   margin: 0;
   position: relative;
@@ -804,16 +887,22 @@
 }
 
 #palm-app-menu .palm-drawer-contents .palm-row .title,
+#palm-status-menu .palm-drawer-contents .palm-row .title,
+#palm-today-menu .palm-drawer-contents .palm-row .title,
 #palm-device-menu .palm-drawer-contents .palm-row .title {
   margin-left: 14px;
 }
 
 #palm-app-menu .palm-row .title.dim,
+#palm-status-menu .palm-row .title.dim,
+#palm-today-menu .palm-row .title.dim,
 #palm-device-menu .palm-row .title.dim {
   color: #BBB;
 }
 
 #palm-app-menu .palm-drawer-contents .palm-row .label,
+#palm-status-menu .palm-drawer-contents .palm-row .label,
+#palm-today-menu .palm-drawer-contents .palm-row .label,
 #palm-device-menu .palm-drawer-contents .palm-row .label {
   margin-right: 24px;
 }
--- .orig/usr/palm/frameworks/mojo2/submissions/98/stylesheets/global-menus.css
+++ /usr/palm/frameworks/mojo2/submissions/98/stylesheets/global-menus.css
@@ -626,9 +626,11 @@
   padding-top: 28px;
 }
 
-/* Application and Device Menus */
+/* Status, Today, Device and Application Menus */
 
 #palm-app-menu.palm-popup-container,
+#palm-status-menu.palm-popup-container,
+#palm-today-menu.palm-popup-container,
 #palm-device-menu.palm-popup-container {
   font-family: "Prelude" !important;
   text-align: left !important;
@@ -648,6 +650,8 @@
 }
 
 #palm-app-menu.palm-popup-container.palm-touch-rows-7,
+#palm-status-menu.palm-popup-container.palm-touch-rows-7,
+#palm-today-menu.palm-popup-container.palm-touch-rows-7,
 #palm-device-menu.palm-popup-container.palm-touch-rows-7 {
   -webkit-border-image: url(../images/system-menu-background-solid.png) 30 28 35 28 repeat repeat;
 }
@@ -655,24 +659,48 @@
 #palm-app-menu.palm-popup-container {
   top: -2px;
   left: -6px;
-  min-width: 278px;
+  min-width: 306px;
+  max-width: 306px;
+  max-height: 413px;
+}
+
+#palm-status-menu.palm-popup-container {
+  top: -2px;
+  left: -6px;
+  min-width: 306px;
+  max-width: 306px;
+  max-height: 413px;
+}
+
+#palm-today-menu.palm-popup-container {
+  top: -2px;
+  left: 8px;
+  min-width: 306px;
+  max-width: 306px;
   max-height: 413px;
 }
 
 #palm-device-menu.palm-popup-container {
   top: -2px;
   right: -6px;
-  min-width: 278px;
+  min-width: 306px;
+  max-width: 306px;
   max-height: 413px;
 }
 
 #palm-app-menu > .palm-popup-wrapper,
+#palm-status-menu > .palm-popup-wrapper,
+#palm-today-menu > .palm-popup-wrapper,
 #palm-device-menu > .palm-popup-wrapper {
   margin: -58px -21px -48px -52px;
 }
 
 #palm-app-menu .palm-popup-fade-top,
 #palm-app-menu .palm-popup-fade-bottom,
+#palm-status-menu .palm-popup-fade-top,
+#palm-status-menu .palm-popup-fade-bottom,
+#palm-today-menu .palm-popup-fade-top,
+#palm-today-menu .palm-popup-fade-bottom,
 #palm-device-menu .palm-popup-fade-top,
 #palm-device-menu .palm-popup-fade-bottom {
   margin-right: 9px;
@@ -687,6 +715,25 @@
   left: -32px;
   bottom: -24px;
 }
+
+#palm-status-menu .palm-popup-fade-top {
+  left: -32px;
+  top: -27px;
+}
+#palm-status-menu .palm-popup-fade-bottom {
+  left: -32px;
+  bottom: -24px;
+}
+
+#palm-today-menu .palm-popup-fade-top {
+  left: -32px;
+  top: -27px;
+}
+#palm-today-menu .palm-popup-fade-bottom {
+  left: -32px;
+  bottom: -24px;
+}
+
 #palm-device-menu .palm-popup-fade-top {
   left: -33px;
   top: -27px;
@@ -698,50 +745,72 @@
 
 
 #palm-app-menu .palm-popup-fade-top > .fade-background,
+#palm-status-menu .palm-popup-fade-top > .fade-background,
+#palm-today-menu .palm-popup-fade-top > .fade-background,
 #palm-device-menu .palm-popup-fade-top > .fade-background {
   -webkit-border-image: url(../images/system-menu-fade-top.png) 0 24 0 24 repeat repeat;
 }
 #palm-app-menu .palm-popup-fade-top > .fade-arrow,
+#palm-status-menu .palm-popup-fade-top > .fade-arrow,
+#palm-today-menu .palm-popup-fade-top > .fade-arrow,
 #palm-device-menu .palm-popup-fade-top > .fade-arrow {
   background: url(../images/palm-popup-fade-arrow-up-dark.png) center center no-repeat;
 }
 #palm-app-menu .palm-popup-fade-bottom > .fade-background,
+#palm-status-menu .palm-popup-fade-bottom > .fade-background,
+#palm-today-menu .palm-popup-fade-bottom > .fade-background,
 #palm-device-menu .palm-popup-fade-bottom > .fade-background {
   -webkit-border-image: url(../images/system-menu-fade-bottom.png) 0 24 0 24 repeat repeat;
 }
 #palm-app-menu .palm-popup-fade-bottom > .fade-arrow,
+#palm-status-menu .palm-popup-fade-bottom > .fade-arrow,
+#palm-today-menu .palm-popup-fade-bottom > .fade-arrow,
 #palm-device-menu .palm-popup-fade-bottom > .fade-arrow {
   background: url(../images/palm-popup-fade-arrow-down-dark.png) center center no-repeat;
 }
 
 #palm-app-menu.palm-touch-rows-7 .palm-popup-fade-top > .fade-background,
+#palm-status-menu.palm-touch-rows-7 .palm-popup-fade-top > .fade-background,
+#palm-today-menu.palm-touch-rows-7 .palm-popup-fade-top > .fade-background,
 #palm-device-menu.palm-touch-rows-7 .palm-popup-fade-top > .fade-background {
   -webkit-border-image: url(../images/system-menu-fade-top-solid.png) 0 24 0 24 repeat repeat;
 }
 #palm-app-menu.palm-touch-rows-7 .palm-popup-fade-bottom > .fade-background,
+#palm-status-menu.palm-touch-rows-7 .palm-popup-fade-bottom > .fade-background,
+#palm-today-menu.palm-touch-rows-7 .palm-popup-fade-bottom > .fade-background,
 #palm-device-menu.palm-touch-rows-7 .palm-popup-fade-bottom > .fade-background {
   -webkit-border-image: url(../images/system-menu-fade-bottom-solid.png) 0 24 0 24 repeat repeat;
 }
 
 #palm-app-menu .palm-popup-content,
+#palm-status-menu .palm-popup-content,
+#palm-today-menu .palm-popup-content,
 #palm-device-menu .palm-popup-content {
   margin: 31px 0 26px 31px;
 }
 
 #palm-app-menu .palm-row,
+#palm-status-menu .palm-row,
+#palm-today-menu .palm-row,
 #palm-device-menu .palm-row {
   background: url(../images/list-separator-dark-taper.png) bottom left no-repeat;
 }
 
 #palm-app-menu .palm-row.single,
+#palm-status-menu .palm-row.single,
+#palm-today-menu .palm-row.single,
 #palm-device-menu .palm-row.single,
 #palm-app-menu .palm-row.last,
+#palm-status-menu .palm-row.last,
+#palm-today-menu .palm-row.last,
 #palm-device-menu .palm-row.last {
   background: none;
   -webkit-border-image: none;
 }
 
 #palm-app-menu .label,
+#palm-status-menu .label,
+#palm-today-menu .label,
 #palm-device-menu .label {
   color: #AAA;
   text-shadow: #333 0 -1px 0;
@@ -760,14 +829,20 @@
 }
 
 #palm-app-menu .palm-row.selected,
+#palm-status-menu .palm-row.selected,
+#palm-today-menu .palm-row.selected,
 #palm-device-menu .palm-row.selected,
 #palm-app-menu .palm-row.selected.submenu-group,
+#palm-status-menu .palm-row.selected.submenu-group,
+#palm-today-menu .palm-row.selected.submenu-group,
 #palm-device-menu .palm-row.selected.submenu-group {
   background: none;
   -webkit-border-image: url(../images/system-menu-selection-gradient-default.png) 24 20 24 20 repeat repeat;
 }
 
 #palm-app-menu .palm-popup-content > .palm-list > .menu-start.selected,
+#palm-status-menu .palm-popup-content > .palm-list > .menu-start.selected,
+#palm-today-menu .palm-popup-content > .palm-list > .menu-start.selected,
 #palm-device-menu .palm-popup-content > .palm-list > .menu-start.selected,
 #palm-app-menu .palm-row.first.selected.submenu-group {
   background: none;
@@ -775,24 +850,32 @@
 }
 
 #palm-app-menu .palm-popup-content > .palm-list > .menu-end.selected,
+#palm-status-menu .palm-popup-content > .palm-list > .menu-end.selected,
+#palm-today-menu .palm-popup-content > .palm-list > .menu-end.selected,
 #palm-device-menu .palm-popup-content > .palm-list > .menu-end.selected {
   background: none;
   -webkit-border-image: url(../images/system-menu-selection-gradient-last.png) 24 20 24 20 repeat repeat;
 }
 
 #palm-app-menu .palm-popup-content > .palm-list > .single.selected,
+#palm-status-menu .palm-popup-content > .palm-list > .single.selected,
+#palm-today-menu .palm-popup-content > .palm-list > .single.selected,
 #palm-device-menu .palm-popup-content > .palm-list > .single.selected {
   background: none;
   -webkit-border-image: url(../images/system-menu-selection-gradient-single.png) 24 20 24 20 repeat repeat;
 }
 
 #palm-app-menu .palm-row.submenu-group,
+#palm-status-menu .palm-row.submenu-group,
+#palm-today-menu .palm-row.submenu-group,
 #palm-device-menu .palm-row.submenu-group {
   -webkit-border-image: none;
   background: url(../images/system-menu-section-divider.png) bottom left no-repeat;
 }
 
 #palm-app-menu .palm-drawer-container,
+#palm-status-menu .palm-drawer-container,
+#palm-today-menu .palm-drawer-container,
 #palm-device-menu .palm-drawer-container {
   position: relative;
   top: 0px;
@@ -803,6 +886,8 @@
 }
 
 #palm-app-menu .palm-drawer-contents,
+#palm-status-menu .palm-drawer-contents,
+#palm-today-menu .palm-drawer-contents,
 #palm-device-menu .palm-drawer-contents {
   margin: 0;
   position: relative;
@@ -810,16 +895,22 @@
 }
 
 #palm-app-menu .palm-drawer-contents .palm-row .title,
+#palm-status-menu .palm-drawer-contents .palm-row .title,
+#palm-today-menu .palm-drawer-contents .palm-row .title,
 #palm-device-menu .palm-drawer-contents .palm-row .title {
   margin-left: 14px;
 }
 
 #palm-app-menu .palm-row .title.dim,
+#palm-status-menu .palm-row .title.dim,
+#palm-today-menu .palm-row .title.dim,
 #palm-device-menu .palm-row .title.dim {
   color: #BBB;
 }
 
 #palm-app-menu .palm-drawer-contents .palm-row .label,
+#palm-status-menu .palm-drawer-contents .palm-row .label,
+#palm-today-menu .palm-drawer-contents .palm-row .label,
 #palm-device-menu .palm-drawer-contents .palm-row .label {
   margin-right: 24px;
 }
--- .orig/usr/palm/applications/com.palm.app.screenlock/app/controllers/app-assistant.js
+++ /usr/palm/applications/com.palm.app.screenlock/app/controllers/app-assistant.js
@@ -6,8 +6,26 @@
 
 function StageAssistant(stageController) {
   this.stageController = stageController
-  this.stageController.pushScene('securityconfig')
+//  this.stageController.pushScene('securityconfig')
 }
 
+StageAssistant.prototype.initialize = function() {
+}
 
+StageAssistant.prototype.setup = function() {
+	var params = Mojo.getLaunchParameters();
+	
+	if((params) && (params.mode)) {
+		if(params.mode == "none")
+			this.stageController.pushScene('securityconfig', "none");
+		else if(params.mode == "pin")
+			this.stageController.pushScene('securityconfig', "pin");
+		else if(params.mode == "password")
+			this.stageController.pushScene('securityconfig', "password");
+		else
+			this.stageController.pushScene('securityconfig');
+	}
+	else
+		this.stageController.pushScene('securityconfig');
+}
 
--- .orig/usr/palm/applications/com.palm.app.screenlock/app/controllers/securityconfig-assistant.js
+++ /usr/palm/applications/com.palm.app.screenlock/app/controllers/securityconfig-assistant.js
@@ -1,7 +1,9 @@
 /* Copyright 2009 Palm, Inc.  All rights reserved. */
 
 var SecurityconfigAssistant = Class.create({
-	initialize: function() {
+	initialize: function(mode) {
+		this.mode = mode;
+
 		this.switchAppOnInfo = $L("Swiping the entire length of the gesture area will switch to the next or previous app.");
 		this.switchAppOffInfo = $L("Any right to left swipe on the gesture area will perform the back gesture.");
 		this.newSecurity = '';	
@@ -48,6 +50,8 @@
   	},
 		
 	setup: function(){
+		if(this.mode)
+			this.controller.get('main').hide();
 		
 		//this.controller.get('fixedtimerrow').hide();
 			
@@ -163,6 +167,27 @@
 		this.currentSecurity = payload.lockMode || 'none';
 		this.showModifyRow();
 		this.revertChanges();
+
+		if(this.mode) {
+			for(var i = 0; i < this.availableSecurity.length; i++) {
+				if(this.availableSecurity[i].value == this.mode) {
+					this.newSecurity = this.mode;	
+
+					if((this.currentSecurity === this.mode) && (this.mode === 'pin'))
+						this.controller.stageController.pushScene({name: "pin", automaticFocusAdvance: false},"changePin",this);
+					else if((this.currentSecurity === this.mode) && (this.mode === 'password'))
+						this.controller.stageController.pushScene({name: "password", automaticFocusAdvance: false},"changePassword",this);
+					else if(this.currentSecurity === 'none')
+						this.changeSecureLock(this.mode,false);
+					else if(this.currentSecurity === 'pin') 
+						this.askPin();
+					else if(this.currentSecurity === 'password')
+						this.askPassword();
+
+					return;
+				}
+			}
+		}
 	},
 	
 	handleSystemlockValue: function(payload) {
@@ -371,7 +396,8 @@
 			this.controller.stageController.pushScene({name: "pin", automaticFocusAdvance: false},"changePin",this);
 		}
 		else if(this.currentSecurity == 'password') {
-			this.askPassword();
+//			this.askPassword();
+			this.controller.stageController.pushScene({name: "password", automaticFocusAdvance: false},"changePassword",this);
 			this.newSecurity = "password";
 		}			
 	},
@@ -432,16 +458,20 @@
 		if(pinCorrect)
 			this.changeSecureLock(this.newSecurity,true);
 		else {
+			if(this.mode)
+				this.controller.window.close();
+
 			Mojo.Log.info("Pin was wrong");
 			this.revertChanges();
 		}
 	},
 	
 	askPassword: function() {
-		this.dialogBox = this.controller.showDialog({
-			template: 'template/password-box',			
-			assistant: new VerifyPasswordAssistant(this,this.systemlockValue),			
-		});
+//		this.dialogBox = this.controller.showDialog({
+//			template: 'template/password-box',			
+//			assistant: new VerifyPasswordAssistant(this,this.systemlockValue),			
+//		});
+		this.controller.stageController.pushScene({name: "password", automaticFocusAdvance: false},"askPassword",this);
 	},
 	
 	passwordVerified: function(passwordCorrect) {
@@ -449,6 +479,9 @@
 			this.changeSecureLock(this.newSecurity,false);
 		}
 		else {
+			if(this.mode)
+				this.controller.window.close();
+
 			Mojo.Log.info("Password was wrong");
 			this.revertChanges();
 			
@@ -457,23 +490,37 @@
 	
 	changeSecureLock: function(newSetting,setFocus) {
 		if(newSetting == 'pin') {
-			this.showPINDialogBox();				
+			if(this.currentSecurity == 'password')
+				this.showPINDialogBox.bind(this).delay(1);
+			else
+				this.showPINDialogBox();
 		}
 		else if (newSetting == 'password') {
-			this.showPasswordDialogBox(setFocus);				
+			if(this.currentSecurity == 'pin')
+				this.showPasswordDialogBox.bind(this, setFocus).delay(1);
+			else
+				this.showPasswordDialogBox(setFocus);
 		}
 		else {
 			Mojo.Log.info("Security is Off");
 			this.currentSecurity = 'none';
 			$('lockImg').hide();
-			this.setSystemlockModeReq = SystemService.setSystemlockValue('none','');
+			this.setSystemlockModeReq = SystemService.setSystemlockValue('none','', this.changedSystemlockValue.bind(this));
 			this.showModifyRow();
 		}	
 	},
 	
+	changedSystemlockValue: function() {
+		if(this.mode)
+			this.controller.window.close();
+	},
+
 	setPinCode: function(pincode) {
 		
 		if(pincode === '') {
+			if(this.mode)
+				this.controller.window.close();
+
 			Mojo.Log.info("PIN code is Emplty");
 			this.revertChanges();
 			return;
@@ -483,6 +530,10 @@
 	
 	handleSetPasscodeResponse: function(response) {
 		Mojo.Log.error("Response "+ Object.toJSON(response));
+
+		if(this.mode)
+			this.controller.window.close();
+
 		if(response.returnValue) {
 			this.currentSecurity = 'pin';
 			$('lockImg').show();
@@ -494,6 +545,9 @@
 	},
 	
 	pinAlreadySet: function() {
+		if(this.mode)
+			this.controller.window.close();
+
 		this.currentSecurity = 'pin';
 		$('lockImg').show();
 		this.policyEnforced = true;
@@ -505,6 +559,9 @@
 	},
 	
 	setPassword: function(password) {
+		if(this.mode)
+			this.controller.window.close();
+
 		Mojo.Log.info("Entered Password "+ password);
 		if(password === '') {
 			Mojo.Log.info("Password is Emplty");
@@ -519,6 +576,9 @@
 	},
 	
 	passwordAlreadySet: function(password) {
+		if(this.mode)
+			this.controller.window.close();
+
 		this.currentSecurity = 'password';
 		this.systemlockValue = password;
 		this.policyEnforced = true;
@@ -528,10 +588,11 @@
 	
 	
 	showPasswordDialogBox: function(setFocus) {		
-		this.dialogBox = this.controller.showDialog({
-			template: 'template/security-password-box',
-			assistant: new PasswordAssistant(this,setFocus),			
-		});		
+//		this.dialogBox = this.controller.showDialog({
+//			template: 'template/security-password-box',
+//			assistant: new PasswordAssistant(this,setFocus),			
+//		});		
+		this.controller.stageController.pushScene({name: "password", automaticFocusAdvance: false},"enterPassword",this,setFocus);
 	},
 
 	revertChanges: function() {
@@ -679,7 +740,7 @@
 	}
 });
 
-
+/*
 var VerifyPasswordAssistant = Class.create({
 	
 	initialize: function(sceneAssistant) {
@@ -954,5 +1015,5 @@
 		}
 	}		
 	
-});
+}); */
 
--- .orig/usr/lib/luna/system/luna-systemui/app/controllers/bar-assistant.js
+++ /usr/lib/luna/system/luna-systemui/app/controllers/bar-assistant.js
@@ -18,6 +18,7 @@
 		
 		this.bluetoothState = 'Off';
 		this.wifiState = 'Off';	
+		this.gpsState = 'Off';
 		this.wifiRadio = false;
 		this.dualRSSI = false;
 		this.ruim = false;
@@ -25,6 +26,8 @@
 		this.hideDataIcon = false;
 
 		this.appMenuModels = {};
+		this.appMenuConfig = null;
+		this.appMenuCookie = null;
 		
 		Mojo.Dom.get('rssi').className = 'nobars';
 		Mojo.Dom.get('ev1x').className = 'nobars';
@@ -32,15 +35,24 @@
 		Mojo.Dom.get('datanet').className = 'off';
 		Mojo.Dom.get('wifi').className = 'off';
 		Mojo.Dom.get('bluetooth').className = 'off';
+		Mojo.Dom.get('gps').className = 'off';
+		Mojo.Dom.get('ringer').className = 'off';
+		Mojo.Dom.get('devicemenu').className = "";
 		Mojo.Dom.get('roaming').hide();
 		Mojo.Dom.get('tty').hide();
 		Mojo.Dom.get('hac').hide();
 		Mojo.Dom.get('callforward').hide();
 		Mojo.Dom.get('vpn').hide();
+		Mojo.Dom.get('appmenu').hide();
 
 		
 		this.delayedOpenSearchEngineAvailable = Mojo.Function.debounce(undefined, this.handleOpenSearchEngineAvailable.bind(this), 10, this.controller.window);
-		this.showDeviceMenuFn = Mojo.Function.debounce(undefined, this.showDeviceMenu.bind(this), .10, this.controller.window);
+		this.showDeviceMenuFn = Mojo.Function.debounce(undefined, this.showDeviceMenu.bind(this, false), .10, this.controller.window);
+		this.showTodayMenuFn = Mojo.Function.debounce(undefined, this.showTodayMenu.bind(this, false), .10, this.controller.window);
+		this.showStatusMenuFn = Mojo.Function.debounce(undefined, this.showStatusMenu.bind(this, false), .10, this.controller.window);
+		this.editDeviceMenuFn = Mojo.Function.debounce(undefined, this.showDeviceMenu.bind(this, true), .10, this.controller.window);
+		this.editTodayMenuFn = Mojo.Function.debounce(undefined, this.showTodayMenu.bind(this, true), .10, this.controller.window);
+		this.editStatusMenuFn = Mojo.Function.debounce(undefined, this.showStatusMenu.bind(this, true), .10, this.controller.window);
 		
 		this.uiAlertsMethods["subscribeToBackupStatus"] = this.handleBackupStatusNotifications.bind(this);
 		this.uiAlertsMethods["registerForLocationServiceNotifications"] = this.handleLocationServiceNotifications.bind(this);
@@ -57,9 +69,9 @@
 	
 		this.getBuildName();
 		
-		//Create the Device Menu Window. But do not do this if this is a frist use run.
+		//Create the System Menu Windows. But do not do this if this is a frist use run.
 		if(!PalmSystem.isMinimal){
-			this.showDeviceMenu();
+			this.initSystemMenus();
 		}	
 						
 		// Initialize the Battery Power Nofication and get the initial value
@@ -74,6 +86,9 @@
 		//Get the Carrier Name by querying the Carrier DB
 		this.getCarrierName();
 		
+		// Initialize the Gps icon once the service is running
+		this.initOnServerStart("com.palm.location", this.gpsInit.bind(this), this.gpsDeinit.bind(this));
+
 		// Initialize the Bluetooth icon once the service is running
 		this.initOnServerStart("com.palm.btmonitor", this.btMonitorInit.bind(this), this.btMonitorDeinit.bind(this));
 		this.initOnServerStart("com.palm.bluetooth", this.btInit.bind(this), this.btDeInit.bind(this));
@@ -106,6 +121,9 @@
 		//Subscribe to Powerd Notification.
 		this.powerInit();
 		
+		//Subscribe for Ringer Switch Status
+		this.ringerSwitchInit();
+
 		//Subscribe to Application Manager 
 		this.initOnServerStart("com.palm.applicationManager", this.appMgrInit.bind(this));
 		
@@ -120,10 +138,69 @@
 
 		// Subscribe to mojodb
 		this.initOnServerStart("com.palm.db", this.dbServiceInit.bind(this));
+
+		this.batteryIconMode = "icon";
+		this.batteryIconClass = "";
+		this.powerIconClass = "";
+
+		this.getTweaksPrefs = new Mojo.Service.Request("palm://org.webosinternals.tweaks.prefs/", {
+			method: 'get', parameters: {'owner': "org.webosinternals.patches.advanced-system-menus-framework", 
+			keys: ["batteryIconMode","showGPSIcon","showRingerIcon","showRoamingIcon"]}, 
+			onSuccess: function(response) {
+				if(response) {
+					if(response.batteryIconMode != undefined) {
+						this.batteryIconMode = response.batteryIconMode;
+
+						if(this.batteryIconMode == "icon") {
+							Mojo.Dom.get('power').style.display = "block";
+							Mojo.Dom.get('battery').style.display = "none";
+							this.powerIconClass = "";
+						}
+						else if(this.batteryIconMode == "value") {
+							Mojo.Dom.get('power').style.display = "none";
+							Mojo.Dom.get('battery').style.display = "block";
+							this.batteryIconClass = "";
+						}
+						else {
+							Mojo.Dom.get('power').style.display = "block";
+							Mojo.Dom.get('battery').style.display = "block";
+							Mojo.Dom.get('battery').className = "small";
+							this.powerIconClass = "rotated ";
+							this.batteryIconClass = "small ";
+						}
+
+						//Get the Battery Level
+						this.queryBatteryStatus.delay(2);
+					}
+
+					if(response.showGPSIcon == false)
+						Mojo.Dom.get('gps').style.display = 'none';
+					if(response.showRingerIcon == false)
+						Mojo.Dom.get('ringer').style.display = 'none';
+					if(response.showRoamingIcon == false)
+						Mojo.Dom.get('roaming').style.display = 'none';
+				}
+			}.bind(this)});
+
+		this.appMenuCookie = new Mojo.Model.Cookie("appMenu");
+
+		this.appMenuConfig = this.appMenuCookie.get();
+
+		if(!this.appMenuConfig)
+			this.appMenuConfig = {fullwidth: true};
+
+		if(this.appMenuConfig.fullwidth)
+			Mojo.Dom.get('appmenu').className = "fullwidth";
 				
-		Mojo.Event.listen(Mojo.Dom.get('appmenu'),'mojo-tap', this.appMenuHandleTap.bindAsEventListener(this));
-		Mojo.Event.listen(Mojo.Dom.get('devicemenu'),'mojo-tap', this.deviceMenuHandleTap.bindAsEventListener(this));
-						
+		Mojo.Event.listen(Mojo.Dom.get('appmenu'),'mojo-tap', this.appMenuHandleTap.bindAsEventListener(this, false));
+		Mojo.Event.listen(Mojo.Dom.get('appmenu'),'mojo-hold', this.appMenuHandleTap.bindAsEventListener(this, true));
+		Mojo.Event.listen(Mojo.Dom.get('devicemenu'),'mojo-tap', this.deviceMenuHandleTap.bindAsEventListener(this, false));
+		Mojo.Event.listen(Mojo.Dom.get('devicemenu'),'mojo-hold', this.deviceMenuHandleTap.bindAsEventListener(this, true));
+		Mojo.Event.listen(Mojo.Dom.get('todaymenu'),'mojo-tap', this.todayMenuHandleTap.bindAsEventListener(this, false));
+		Mojo.Event.listen(Mojo.Dom.get('todaymenu'),'mojo-hold', this.todayMenuHandleTap.bindAsEventListener(this, true));
+		Mojo.Event.listen(Mojo.Dom.get('statusmenu'),'mojo-tap', this.statusMenuHandleTap.bindAsEventListener(this, false));
+		Mojo.Event.listen(Mojo.Dom.get('statusmenu'),'mojo-hold', this.statusMenuHandleTap.bindAsEventListener(this, true));
+
 		this.registerForeGroundApp();
 		this.registerStatusSettings();	
 		
@@ -329,8 +406,9 @@
 	//If it is First Use, Do not change the App Name.
 	if(PalmSystem.isMinimal) {
 		this.foregroundAppID = payload.id;
-		Mojo.Dom.get('appname').hide();
+		Mojo.Dom.get('appmenu').hide();
 		Mojo.Dom.get('carrier').show();
+		Mojo.Dom.get('devicemenu').className = "";
 		return;
 	}
 	
@@ -363,7 +441,8 @@
 		
 		if (!this.deviceLocked) {
 			Mojo.Dom.get('carrier').hide();
-			Mojo.Dom.get('appname').show();
+			Mojo.Dom.get('appmenu').show();
+			Mojo.Dom.get('devicemenu').className = "devicemenu-appmenu";
 		}
 		this.foregroundAppID = payload.id;
 		
@@ -372,8 +451,9 @@
 			this.closeTutorialDashboard();
 	}
 	else{
-		Mojo.Dom.get('appname').hide();
+		Mojo.Dom.get('appmenu').hide();
 		Mojo.Dom.get('carrier').show();
+		Mojo.Dom.get('devicemenu').className = "";
 		this.foregroundAppID=null;
 	}
 },
@@ -460,11 +540,13 @@
 		}
 		if (payload.locked || this.foregroundAppID == null) {
 			Mojo.Dom.get('carrier').show();
-			Mojo.Dom.get('appname').hide();
+			Mojo.Dom.get('appmenu').hide();
+			Mojo.Dom.get('devicemenu').className = "";
 		}
 		else {
 			Mojo.Dom.get('carrier').hide();
-			Mojo.Dom.get('appname').show();
+			Mojo.Dom.get('appmenu').show();
+			Mojo.Dom.get('devicemenu').className = "devicemenu-appmenu";
 		}
 	}	
 	
@@ -490,11 +572,30 @@
 	return false;
 },
 
-appMenuHandleTap: function(event) { //make service call here to show app's menu
+appMenuHandleTap: function(event, toggle) { //make service call here to show app's menu
 	//No App Menu for FirstUse.
 	if(PalmSystem.isMinimal)
 		return;
 
+	if(toggle) {
+		event.stop();
+
+		if(this.appMenuConfig.fullwidth) {
+			this.appMenuConfig.fullwidth = false;
+
+			Mojo.Dom.get('appmenu').className = "";
+		}
+		else{
+			this.appMenuConfig.fullwidth = true;
+
+			Mojo.Dom.get('appmenu').className = "fullwidth";
+		}
+
+		this.appMenuCookie.put(this.appMenuConfig);
+
+		return;
+	}
+
 	var appMenuModel = this.appMenuModels[this.foregroundAppID];
 	var target = event.target;
 	while(target) {
@@ -537,7 +638,136 @@
 	}
 },
 
-deviceMenuHandleTap: function(event){//show/hide devicemenu
+// System menus
+
+initSystemMenus: function() {
+	this.showStatusMenu();
+	this.showTodayMenu();
+	this.showDeviceMenu();
+},
+
+closeSystemMenus: function(skip) {
+	if(skip != "status") {
+		var statusStageController = Mojo.Controller.getAppController().getStageController("StatusMenu");
+
+		if(statusStageController)
+			statusStageController.delegateToSceneAssistant("close");
+	}
+
+	if(skip != "today") {
+		var todayStageController = Mojo.Controller.getAppController().getStageController("TodayMenu");
+
+		if(todayStageController)
+			todayStageController.delegateToSceneAssistant("close");
+	}
+
+	if(skip != "device") {
+		var deviceStageController = Mojo.Controller.getAppController().getStageController("DeviceMenu");
+
+		if(deviceStageController)
+			deviceStageController.delegateToSceneAssistant("close");
+	}
+},
+
+// Status menu
+
+statusMenuHandleTap: function(event, edit) { //show/hide statusmenu
+	// Ignore the notification if it's in First Use.
+
+	if(edit)
+		event.stop();
+
+	if(PalmSystem.isMinimal)
+		return;
+
+	var target = event.target;
+	var i = 0;
+	var level = 2;
+
+	while((target.getAttribute('id') != 'statusmenu') && (i < level)) {
+		target = target.up();
+		i++;
+	}
+
+	if(target) {
+		if(target.getAttribute('id') == 'statusmenu') {
+			if((edit) || ((event.up) && (event.up.altKey)))
+				this.editStatusMenuFn();
+			else
+				this.showStatusMenuFn();
+		}
+	}
+},
+
+showStatusMenu: function(edit) {
+	var stageController = Mojo.Controller.getAppController().getStageController("StatusMenu");
+	if (stageController) {
+		this.closeSystemMenus("status");
+
+		stageController.delegateToSceneAssistant("toggleStatusMenu", edit);
+	} else {
+		this.statusMenuCreatedHandler = this.statusMenuCreated.bind(this);
+		Mojo.Controller.getAppController().createStageWithCallback({name:"StatusMenu",lightweight: true}, 
+			this.statusMenuCreatedHandler, "menu");
+	}
+},
+
+statusMenuCreated: function(stageController) {
+	stageController.pushScene('statusmenu',this);
+},
+
+// Today menu
+
+todayMenuHandleTap: function(event, edit) { //show/hide todaymenu
+	//Ignore the notification if it's in First Use.
+
+	if(edit)
+		event.stop();
+
+	if(PalmSystem.isMinimal)
+		return;
+
+	var target = event.target;
+	var i = 0;
+	var level = 2;
+
+	while((target.getAttribute('id') != 'todaymenu') && (i < level)) {
+		target = target.up();
+		i++;
+	}
+
+	if(target) {
+		if(target.getAttribute('id') == 'todaymenu') {
+			if((edit) || ((event.up) && (event.up.altKey)))
+				this.editTodayMenuFn();
+			else
+				this.showTodayMenuFn();
+		}     			
+	}
+},
+
+showTodayMenu: function(edit) {
+	var stageController = Mojo.Controller.getAppController().getStageController("TodayMenu");
+	if (stageController) {
+		this.closeSystemMenus("today");
+
+		stageController.delegateToSceneAssistant("toggleTodayMenu", edit);
+	} else {
+		this.todayMenuCreatedHandler = this.todayMenuCreated.bind(this);
+		Mojo.Controller.getAppController().createStageWithCallback({name:"TodayMenu",lightweight: true}, 
+			this.todayMenuCreatedHandler, "menu");
+	}
+},
+
+todayMenuCreated: function(stageController) {
+	stageController.pushScene('todaymenu',this);
+},
+
+// Device menu
+
+deviceMenuHandleTap: function(event, edit){//show/hide devicemenu
+	if(edit)
+		event.stop();
 	
 	//Ignore the notification if it's in First Use.
 	if(PalmSystem.isMinimal)
@@ -554,16 +784,21 @@
 		i++;
 	}
 	if (target) {
-		if(target.getAttribute('id') == 'devicemenu'){//show/hide deviceMenu
-			this.showDeviceMenuFn();
+		if(target.getAttribute('id') == 'devicemenu') {
+			if((edit) || ((event.up) && (event.up.altKey)))
+				this.editDeviceMenuFn();
+			else
+	 			this.showDeviceMenuFn();
 		}
 	}
 },
 
-showDeviceMenu: function() {
+showDeviceMenu: function(edit) {
 		var stageController = Mojo.Controller.getAppController().getStageController("DeviceMenu");
 		if (stageController) {
-			stageController.delegateToSceneAssistant("toggleDeviceMenu");
+			this.closeSystemMenus("device");
+
+			stageController.delegateToSceneAssistant("toggleDeviceMenu", edit);
 		} else {
 			this.deviceMenuCreatedHandler = this.deviceMenuCreated.bind(this);
 			Mojo.Controller.getAppController().createStageWithCallback({
@@ -701,6 +936,13 @@
 				this.callForwardNotificationSession = null;	
 			}
 		}
+
+		var stageController = Mojo.Controller.getAppController().getStageController("DeviceMenu");
+
+		if (stageController) {
+			stageController.delegateToSceneAssistant("updatePhoneState");
+		}
+
 		this.updatePhoneAppName();
 	}
 },
@@ -835,6 +1077,13 @@
 			Mojo.Dom.get('roaming').hide();
 			break;			
 	}
+
+	var stageController = Mojo.Controller.getAppController().getStageController("DeviceMenu");
+
+	if (stageController) {
+		stageController.delegateToSceneAssistant("updatePhoneState");
+	}
+
 	this.updatePhoneAppName();
 	this.handleNetworkStatus.cancel();
 },
@@ -901,7 +1150,12 @@
 			this.updatePhoneAppName();
 			break;
 	}	
-  	
+
+	var stageController = Mojo.Controller.getAppController().getStageController("DeviceMenu");
+
+	if (stageController) {
+		stageController.delegateToSceneAssistant("updatePhoneState");
+	}
 },
 
 handleSignalStrengthQueryNotification: function(payload) {
@@ -1428,6 +1682,13 @@
 		} 		
 		
 	}
+
+	var stageController = Mojo.Controller.getAppController().getStageController("DeviceMenu");
+
+	if (stageController) {
+		stageController.delegateToSceneAssistant("updatePhoneState");
+	}
+
 	this.updatePhoneAppName();
 },
 
@@ -1825,6 +2086,51 @@
 },
 
 /*
+* Initialize GPS status on device menu
+*/
+
+gpsInit:function(payload) {
+	// Initial value
+	this.gpsState = 'Off';
+
+	this.gpsGetRadioStatus();
+},
+
+gpsGetRadioStatus:function() {
+	if(this.gpsRadioStatusRequest) {
+		this.gpsRadioStatusRequest.cancel();
+	}
+
+	this.gpsRadioStatusRequest = new Mojo.Service.Request('palm://com.palm.location/',{
+		method:'getUseGps', parameters: {},
+		onSuccess: this.gpsHandleRadioStatus.bind(this)
+	});
+},
+
+gpsHandleRadioStatus:function(payload) {
+	if (payload.useGps != undefined) {
+		if(payload.useGps) {
+			this.gpsState = 'On';
+			Mojo.Dom.get('gps').className = 'on';
+		}
+		else {
+			this.gpsState = 'Off';
+			Mojo.Dom.get('gps').className = 'off';
+		}
+
+		// Update the Device Menu
+		var stageController = Mojo.Controller.getAppController().getStageController("DeviceMenu");
+
+		if (stageController) {
+			stageController.delegateToSceneAssistant("updateGPSState");
+		}
+	}
+},
+
+gpsDeinit:function(payload) {
+},
+
+/*
  * Initialize Bluetooth icon on status bar 
  */
 btInit:function(payload){
@@ -2037,6 +2343,8 @@
  * Handle power and charging notifications
  */
 handlePowerNotifications: function(payload) {
+
+	this.gpsGetRadioStatus();
 	
 	Mojo.Log.info("SystemUI Power Payload "+ Object.toJSON(payload));
 	if(!this.powerdServiceUp) {
@@ -2047,6 +2355,10 @@
 		this.queryBatteryStatusReq.cancel();
 		this.queryBatteryStatusReq = undefined;
 	}	
+	// Is the temperature info provided?
+	if(payload.temperature_C) {
+		this.batteryTemp = payload.temperature_C;
+	}
 	// Is the battery level provided?
 	if (payload.percent_ui != undefined) {
 		
@@ -2064,7 +2376,11 @@
 			// Show the battery level if not charging
 			if (!this.isCharging) {
 				Mojo.Log.info("SystemUI- Is Charging "+ this.isCharging + " Battery level "+ i);
-				Mojo.Dom.get('power').className = 'battery-' + i;
+				Mojo.Dom.get('power').className = this.powerIconClass + 'battery-' + i;
+				if(this.batteryIconMode != "icon") {
+					Mojo.Dom.get('battery').className = this.batteryIconClass + this.getBatteryLevelColor();
+					Mojo.Dom.get('battery').innerHTML = this.batteryLevel + unescape('%');
+				}
 				
 				//Show Banner Message if the Battery level is below 20%
 				var batteryalert = $L("#{percent_ui}% battery remaining").interpolate(payload);	
@@ -2099,10 +2415,14 @@
 			else {
 				Mojo.Log.info("SystemUI- Is Charging "+ this.isCharging );
 				if(payload.percent_ui == 100)
-					Mojo.Dom.get('power').className = 'battery-charged';
+					Mojo.Dom.get('power').className = this.powerIconClass + 'battery-charged';
 				else
-					Mojo.Dom.get('power').className = 'battery-charging-' + i;
+					Mojo.Dom.get('power').className = this.powerIconClass + 'battery-charging-' + i;
 					
+				if(this.batteryIconMode != "icon") {
+					Mojo.Dom.get('battery').className = this.batteryIconClass + this.getBatteryLevelColor();
+					Mojo.Dom.get('battery').innerHTML = this.batteryLevel + unescape('%');
+				}
 			}
 			
 			if(this.batteryLevel > 5 && this.batteryLevel <= 10) {				
@@ -2117,7 +2437,10 @@
 			//Update the System Menu
 			var stageController = Mojo.Controller.getAppController().getStageController("DeviceMenu");
 			if (stageController) {
-				stageController.delegateToSceneAssistant("updateBatteryLevel", this.batteryLevel);			
+				if(this.isCharging)
+					stageController.delegateToSceneAssistant("updateBatteryLevel", this.batteryLevel, "Charging");
+				else
+					stageController.delegateToSceneAssistant("updateBatteryLevel", this.batteryLevel, "Discharging");
 			}
 			
 			 //Update the Software Update Alert
@@ -2147,9 +2470,14 @@
 		if (this.isCharging) {
 			Mojo.Log.info("SystemUI- Charger Notification "+ this.isCharging + " Last battery level "+ this.lastBatteryLevel);
 			if(this.batteryLevel == 100)
-				Mojo.Dom.get('power').className = 'battery-charged';
+				Mojo.Dom.get('power').className = this.powerIconClass + 'battery-charged';
 			else
-				Mojo.Dom.get('power').className = 'battery-charging-' + this.lastBatteryLevel;
+				Mojo.Dom.get('power').className = this.powerIconClass + 'battery-charging-' + this.lastBatteryLevel;
+
+			if(this.batteryIconMode != "icon") {
+				Mojo.Dom.get('battery').className = this.batteryIconClass + this.getBatteryLevelColor();
+				Mojo.Dom.get('battery').innerHTML = this.batteryLevel + unescape('%');
+			}
 						
 			var stageController = Mojo.Controller.getAppController().getStageController("LowBatteryAlert");
 			if (stageController) {
@@ -2173,7 +2501,13 @@
 		else {
 			this.chargingBannerShown = false;			
 			Mojo.Log.info("SystemUI- Charger Notification "+ this.isCharging + " Last battery level "+ this.lastBatteryLevel);
-			Mojo.Dom.get('power').className = 'battery-' + this.lastBatteryLevel;	
+			Mojo.Dom.get('power').className = this.powerIconClass + 'battery-' + this.lastBatteryLevel;
+
+			if(this.batteryIconMode != "icon") {
+				Mojo.Dom.get('battery').className = this.batteryIconClass + this.getBatteryLevelColor();
+				Mojo.Dom.get('battery').innerHTML = this.batteryLevel + unescape('%');
+			}
+
 			Mojo.Controller.getAppController().removeBanner('chargingAlert');	
 			if (this.batteryLevel < this.minBatThresholdForUpdate) {
 				Mojo.Log.info("SystemUI - OTA - Closing All Update Alerts due to battery level dropped below threshold level and charger disconnected.");
@@ -2225,6 +2559,36 @@
 	return this.batteryLevel;
 },
 
+getBatteryState: function() {
+	if(this.isCharging)
+		return "Charging";
+	else
+		return "Discharging";
+},
+
+getBatteryLevelColor: function() {
+	var levelColor = "";
+
+	if(this.batteryIconMode.indexOf("icon") == -1) {
+		if(this.isCharging)
+			levelColor = "charging";
+		else if(this.batteryLevel >= 70) 
+			levelColor = "full";
+		else if(this.batteryLevel < 70 && this.batteryLevel >= 45) 
+			levelColor = "medium";
+		else if(this.batteryLevel < 45 && this.batteryLevel >= 20)
+			levelColor = "low";
+		else if(this.batteryLevel < 20)
+			levelColor = "critical";
+	}
+
+	return levelColor;
+},
+
+getBatteryTemp: function() {
+	return this.batteryTemp;
+},
+
 queryBatteryStatus: function() {
 	this.queryBatteryStatusReq = new Mojo.Service.Request('palm://com.palm.power/com/palm/power/', {
 		method: 'batteryStatusQuery',});
@@ -2238,6 +2602,7 @@
 	this.lastBatteryLevel = 0;
 	this.chargingBannerShown = false;
 	this.batteryLevel = 0;
+	this.batteryTemp = 0;
 	// Subscribe to Battery Power Notifications
 	this.powerNotificationSession = new Mojo.Service.Request('palm://com.palm.bus/signal/', {
 		method: 'addmatch',
@@ -2274,7 +2639,7 @@
 
 powerDeInit: function() {
 	Mojo.Log.error("SystemUI - Power service not available on the bus!");
-	Mojo.Dom.get('power').className = 'error';
+	Mojo.Dom.get('power').className = this.powerIconClass + 'error';
 	this.powerSource['usb'] = false;
 	this.powerSource['inductive'] = false;
 	this.powerdServiceUp = false;
@@ -2287,6 +2652,27 @@
 },
 
 /*
+ * Initialize ringer switch
+ */
+
+ringerSwitchInit: function() {
+	this.controller.serviceRequest('palm://com.palm.keys/switches', {
+		method:'status', parameters: {"subscribe":true},
+		onSuccess: function(payload) {
+			this.controller.serviceRequest('palm://com.palm.audio/media', {
+				method:'status',
+				onSuccess: function(response) {
+					if(!response['ringer switch'])
+						Mojo.Dom.get('ringer').className = 'off';
+					else
+						Mojo.Dom.get('ringer').className = 'on';
+				}.bind(this)
+			});
+		}.bind(this)
+	});
+},
+
+/*
  * Handle WAN notifications
  */
 handleWANNotifications: function(payload) {
@@ -2296,6 +2682,22 @@
 	 if(payload.returnValue != undefined && payload.returnValue)
 	 	return;
 		
+	 if(payload.disablewan === 'on')
+	 	this.dataConnState = false;
+	 else if(payload.disablewan === 'off')
+	 	this.dataConnState = true;
+
+	var stageController = Mojo.Controller.getAppController().getStageController("DeviceMenu");
+		
+	if (stageController) {
+		stageController.delegateToSceneAssistant("updateDataState");
+	}
+
+	 if(payload.roamGuard === 'disable')
+	 	this.dataRoamState = true;
+	 else if(payload.roamGuard === 'enable')
+	 	this.dataRoamState = false;
+
 	 var mipFailureCode, causeCode;	
 			
 	 if (payload.networkstatus == "attached" && payload.connectedservices && payload.connectedservices.length > 0) { 
@@ -3023,6 +3425,10 @@
 		if (stageController) {
 			stageController.delegateToSceneAssistant("updateAirplaneModeProgress");
 		}	
+		var stageController2 = Mojo.Controller.getAppController().getStageController("StatusMenu");
+		if (stageController2) {
+			stageController2.delegateToSceneAssistant("updateAirplaneModeProgress");
+		}
 		if (this.airplaneMode === false) 
 			this.disableFlightMode();
 		else {
@@ -3034,6 +3440,10 @@
 		if (stageController) {
 			stageController.delegateToSceneAssistant("updateAirplaneModeSettings");
 		}
+		var stageController2 = Mojo.Controller.getAppController().getStageController("StatusMenu");
+		if (stageController2) {
+			stageController2.delegateToSceneAssistant("updateAirplaneModeSettings");
+		}
 	}  	
 	this.airplaneModeInitialQueryDone = true;
 	if(this.telephonyPowerQueryPayload) {
@@ -3057,6 +3467,14 @@
 		});	
 },
 
+getAirplaneModeInProgress: function() {
+	return this.apModeInProgress;
+},
+
+setAirplaneModeInProgress: function(inprogress) {
+	this.apModeInProgress = inprogress;
+},
+
 //Disable Airplane Mode by turning on Phone and other radios.
 disableFlightMode: function() {
 	Mojo.Log.info("System UI - Disabling Airplane Mode");
@@ -3192,6 +3610,12 @@
 		this.airplaneModeTriggered = false;
 		stageController.delegateToSceneAssistant("updateAirplaneModeSettings");
 	}	
+
+	var stageController2 = Mojo.Controller.getAppController().getStageController("StatusMenu");
+
+	if (apModeDone && stageController2) {
+		stageController2.delegateToSceneAssistant("updateAirplaneModeProgress");
+	}
 },
 
 //Clear the Hash before enable / disable the Airplane mode
@@ -3312,6 +3736,51 @@
 			
 },
 
+getCurrentPhoneState: function() {
+	if(this.phoneRadioState) {
+		if((this.carrierText.length > 0) &&
+			(this.currentCarrierText != "Network search...") &&
+			(this.currentCarrierText != "Searching...") &&
+			(this.currentCarrierText != "Airplane Mode") &&
+			(this.currentCarrierText != "Phone offline") &&
+			(this.currentCarrierText != "SIM lock") &&
+			(this.currentCarrierText != "Check SIM") &&
+			(this.currentCarrierText != "No service") &&
+			(this.currentCarrierText != "Check SIM-SOS only") &&
+			(this.currentCarrierText != "SIM lock-SOS only") &&
+			(this.currentCarrierText != "SOS Only"))
+		{
+			return this.carrierText;
+		}
+		else
+			return 'On';
+	}
+	else
+		return 'Off';
+},
+
+getCurrentDataState: function() {
+	if(this.dataConnState) {
+		if(this.carrierText.length > 0)
+			return this.carrierText;
+		else
+			return 'On';
+	}
+	else
+		return 'Off';
+},
+
+getRoamingDataState: function() {	
+	if(this.dataRoamState)
+		return 'On';
+	else
+		return 'Off';
+},
+
+getCurrentGpsState: function() {
+	return this.gpsState;
+},
+
 getCurrentBluetoothState: function() {
 	return this.bluetoothState;
 },
@@ -4731,6 +5200,8 @@
 	// Telephony Variables
 	phoneType: null,
 	phoneRadioState: null,
+	dataConnState: null,
+	dataRoamState: null,
  	phoneRadioNotificationSession: null,
 	signalNotificationSession: null,
 	networkNotificationSession: null,
--- .orig/usr/lib/luna/system/luna-systemui/app/views/bar/bar-scene.html
+++ /usr/lib/luna/system/luna-systemui/app/views/bar/bar-scene.html
@@ -5,15 +5,11 @@
 			<span id="today"></span> 
 		</div>
 	</div>
-	<div id="appmenu">
-		<div id="carrier" class="carrier-wrapper truncating-text"></div>
-		<div class="appname-container">
-   			<div id="appname" class="appname-wrapper truncating-text"></div>
-		</div>
-	</div>
 
 	<div id="devicemenu">
+		<span id="battery" style="display:none;"></span>
 		<div id="power"></div>
+		<div id="ringer"></div>
 		<div id="rssi"></div>
 		<div id="ev1x">
 			<div id="rssi-ev"></div>
@@ -24,8 +20,21 @@
 		<div id="wifi"></div>
 		<div id="vpn"></div>
 		<div id="bluetooth"></div>
+		<div id="gps"></div>
 		<div id="tty"></div>
 		<div id="callforward"></div>
 		<div id="hac"></div>
 	</div>
-</div>
\ No newline at end of file
+
+	<div id="statusmenu">
+		<div id="carrier" class="carrier-wrapper truncating-text"></div>
+	</div>
+	
+	<div id="todaymenu"></div>
+	
+	<div id="appmenu">
+		<div class="appname-container">
+			<div id="appname" class="appname-wrapper truncating-text"></div>
+		</div>
+	</div>
+</div>
--- .orig/usr/lib/luna/system/luna-systemui/stylesheets/systemui.css
+++ /usr/lib/luna/system/luna-systemui/stylesheets/systemui.css
@@ -120,6 +120,7 @@
 
 /* device menu icons */
 
+#battery,
 #power,
 #rssi,
 #roaming,
@@ -130,6 +131,7 @@
 #tty,
 #hac,
 #callforward,
+#ringer,
 #gps,
 #ev1x {
 	float: right;
@@ -141,11 +143,63 @@
 	background-repeat: no-repeat;
 }
 
+#battery { 
+	margin-left: 2px;
+	position: relative;
+	bottom: 3px;
+	font-size: 16px;
+	margin-right: 2px;
+	padding-top: 1px;
+	min-width: 22px;
+	text-align: center;
+}
+
+#battery.small { 
+ 	margin-left: 2px;
+	position: relative;
+	bottom: 11px;
+	font-size: 10px;
+	margin-right: 2px;
+	min-width: 22px;
+	text-align: center;
+}
+
+#battery.charging {
+	color: #33CCFF;
+}
+
+#battery.full {
+	color: #33FF33;
+}
+
+#battery.medium {
+	color: #FFFF33;
+}
+
+#battery.low {
+	color: #FFCC00;
+}
+
+#battery.critical {
+	color: #FF0000;
+}
+
 #power {
 	margin-left: 2px;
 	width: 17px;		
 }
 
+#power.rotated {
+	position:absolute;
+	right: 2px;
+	top: 9px;
+	margin-top: 0px;
+	margin-right: 1px;
+	height: 20px;
+	width: 20px;
+	-webkit-transform: rotate(270deg);
+}
+
 #power.error { background-image: url(../images/battery-error.png); }
 #power.battery-0 { background-image: url(../images/battery-0.png); }
 #power.battery-1 { background-image: url(../images/battery-1.png); }
@@ -174,6 +228,18 @@
 #power.battery-charging-11 { background-image: url(../images/battery-charging-11.png); }
 #power.battery-charged { background-image: url(../images/battery-charged.png); }
 
+#ringer {
+	width: 20px;
+}
+
+#ringer.off {
+	background: url(../../../../../palm/applications/com.palm.app.soundsandalerts/images/prefs-mute.png) center left no-repeat;
+}
+
+#ringer.on {
+	display: none;
+}
+
 #rssi {
 	width: 19px;
 }
@@ -274,6 +340,18 @@
 #bluetooth.connecting { background-image: url(../images/bluetooth-connecting.png); }
 #bluetooth.connected { background-image: url(../images/bluetooth-connected.png); }
 
+#gps.off {
+	display: none;
+}
+
+#gps.on {
+	background: url(../images/gps-on.png) center center no-repeat;
+}
+
+#gps.active{
+	background: url(../images/gps-active.png) center center no-repeat;
+}
+
 #tty {
 	width: 16px;
 	background-image: url(../images/tty.png);
@@ -309,3 +387,27 @@
 .in-drawer-list .palm-row.last {
 	background: url(../images/list-separator-dark-taper.png) bottom left no-repeat !important;
 }
+
+#statusmenu {
+	color: #fff;
+	position: fixed;
+	margin: 0;
+	top: 0;
+	left: 0;
+	height: 28px;
+	width: 110px;
+	padding: 0;
+}
+
+#todaymenu {
+	color: #fff;
+	position: fixed;
+	margin: 0;
+	top: 0;
+	left: 110px;
+	right: 110px;
+	height: 28px;
+	width: 100px;
+	padding: 0;
+}
+
--- .orig/usr/palm/applications/com.palm.app.screenlock/resources/de/strings.json
+++ /usr/palm/applications/com.palm.app.screenlock/resources/de/strings.json
@@ -66,5 +66,9 @@
 	"Wallpaper": "Hintergrund",
 	"Zero": "Null",
 	"confirm password...": "Kennwort bestätigen…",
-	"enter password...": "Kennwort eingeben…"
+	"enter password...": "Kennwort eingeben…",
+	"Enter Password": "Kennwort eingeben",
+	"Enter New Password": "Neues Kennwort eingeben",
+	"Password...": "Kennwort...",
+	"Password Again...": "Kennwort bestätigen..."
 }
--- .orig/usr/palm/applications/com.palm.app.screenlock/resources/es/strings.json
+++ /usr/palm/applications/com.palm.app.screenlock/resources/es/strings.json
@@ -67,5 +67,9 @@
 	"Wallpaper": "Imagen de fondo",
 	"Zero": "Cero",
 	"confirm password...": "confirmar contraseña…",
-	"enter password...": "introducir contraseña…"
+	"enter password...": "introducir contraseña…",
+	"Enter Password": "Introducir contraseña",
+	"Enter New Password": "Introducir nueva contraseña",
+	"Password...": "Contraseña...",
+	"Password Again...": "Repita contraseña..."
 }
--- .orig/usr/palm/applications/com.palm.app.screenlock/resources/fr/strings.json
+++ /usr/palm/applications/com.palm.app.screenlock/resources/fr/strings.json
@@ -62,5 +62,9 @@
 	"Wallpaper": "fond d'écran",
 	"Zero": "Zéro",
 	"confirm password...": "confirmer le mot de passe…",
-	"enter password...": "entrer le mot de passe…"
+	"enter password...": "entrer le mot de passe…",
+	"Enter Password": "Entrer mot de passe",
+	"Enter New Password": "Entrer nouveau mot de passe",
+	"Password...": "Mot de passe...",
+	"Password Again...": "Confirmer mot de passe..."
 }
--- .orig/usr/palm/applications/com.palm.app.screenlock/resources/it/strings.json
+++ /usr/palm/applications/com.palm.app.screenlock/resources/it/strings.json
@@ -64,5 +64,9 @@
 	"Unlock": "Sblocca",
 	"Wallpaper": "Sfondo",
 	"confirm password...": "confermare la password…",
-	"enter password...": "inserire la password…"
+	"enter password...": "inserire la password…",
+	"Enter Password": "Inserire la password",
+	"Enter New Password": "Inserire la nuova password",
+	"Password...": "Password...",
+	"Password Again...": "Password di nuovo..."
 }
