--- .orig/usr/palm/applications/com.palm.app.calculator/calculator.js
+++ /usr/palm/applications/com.palm.app.calculator/calculator.js
@@ -18,6 +18,15 @@
 		this.memory = this.getMemDbValue();	
 		this.clear();
 		this.decimalChar = resources.$L('.');
+
+		this.hapticFeedback = false;
+
+		this.hapticFeedbackRequest = new Mojo.Service.Request("palm://com.palm.systemservice/", {
+			method: 'getPreferences', parameters: {"keys": ["hapticFeedback"], "subscribe": true},
+			onSuccess: function(response) {
+				if ((response) && (response.hapticFeedback != undefined))
+					this.hapticFeedback = response.hapticFeedback;
+			}.bind(this)});
 	},
 	
 	
--- .orig/usr/palm/applications/com.palm.app.calculator/calculator-app.js
+++ /usr/palm/applications/com.palm.app.calculator/calculator-app.js
@@ -222,6 +222,8 @@
 		clearOperatorHighlight();
 		calculator.enterDigit(number);
 		updateResults();
+		if(calculator.hapticFeedback)
+			new Mojo.Service.Request("palm://com.palm.vibrate/", {method: 'vibrate', parameters: {'period': 0,'duration': 50}});
 		event.stop();
 	}
 
@@ -229,6 +231,8 @@
 		clearOperatorHighlight();
 		calculator.enterDecimal();
 		updateResults();
+		if(calculator.hapticFeedback)
+			new Mojo.Service.Request("palm://com.palm.vibrate/", {method: 'vibrate', parameters: {'period': 0,'duration': 50}});
 		event.stop();
 	}
 
@@ -242,6 +246,8 @@
 			calculator.multiply();
 		}
 		updateResults();
+		if(calculator.hapticFeedback)
+			new Mojo.Service.Request("palm://com.palm.vibrate/", {method: 'vibrate', parameters: {'period': 0,'duration': 50}});
 		event.stop();
 	}
 
@@ -255,6 +261,8 @@
 			calculator.subtract();
 		}
 		updateResults();
+		if(calculator.hapticFeedback)
+			new Mojo.Service.Request("palm://com.palm.vibrate/", {method: 'vibrate', parameters: {'period': 0,'duration': 50}});
 		event.stop();
 	}
 
@@ -268,6 +276,8 @@
 			calculator.add();
 		}
 		updateResults();
+		if(calculator.hapticFeedback)
+			new Mojo.Service.Request("palm://com.palm.vibrate/", {method: 'vibrate', parameters: {'period': 0,'duration': 50}});
 		event.stop();
 	}
 
@@ -275,6 +285,8 @@
 		clearOperatorHighlight();
 		calculator.equals();
 		updateResults();
+		if(calculator.hapticFeedback)
+			new Mojo.Service.Request("palm://com.palm.vibrate/", {method: 'vibrate', parameters: {'period': 0,'duration': 50}});
 		event.stop();
 	}
 
@@ -282,6 +294,8 @@
 		clearOperatorHighlight();
 		calculator.clear();
 		updateResults();
+		if(calculator.hapticFeedback)
+			new Mojo.Service.Request("palm://com.palm.vibrate/", {method: 'vibrate', parameters: {'period': 0,'duration': 50}});
 		event.stop();
 	}
 
@@ -289,6 +303,8 @@
 		calculator.memPlus();
 		showMemoryIndicator();
 		updateResults();
+		if(calculator.hapticFeedback)
+			new Mojo.Service.Request("palm://com.palm.vibrate/", {method: 'vibrate', parameters: {'period': 0,'duration': 50}});
 		event.stop();
 	}
 
@@ -296,12 +312,16 @@
 		clearOperatorHighlight();
 		calculator.memRecall();
 		updateResults();
+		if(calculator.hapticFeedback)
+			new Mojo.Service.Request("palm://com.palm.vibrate/", {method: 'vibrate', parameters: {'period': 0,'duration': 50}});
 		event.stop();
 	}
 
 	function onBackspacePress(event) {
 		calculator.backspace();
 		updateResults();
+		if(calculator.hapticFeedback)
+			new Mojo.Service.Request("palm://com.palm.vibrate/", {method: 'vibrate', parameters: {'period': 0,'duration': 50}});
 		event.stop();
 	}
 
@@ -309,6 +329,8 @@
 		calculator.memClear();
 		hideMemoryIndicator();
 		updateResults();
+		if(calculator.hapticFeedback)
+			new Mojo.Service.Request("palm://com.palm.vibrate/", {method: 'vibrate', parameters: {'period': 0,'duration': 50}});
 		event.stop();
 	}
 
@@ -334,6 +356,8 @@
 			calculator.divide();
 		}
 		updateResults();
+		if(calculator.hapticFeedback)
+			new Mojo.Service.Request("palm://com.palm.vibrate/", {method: 'vibrate', parameters: {'period': 0,'duration': 50}});
 		event.stop();
 	}
 
--- .orig/usr/palm/applications/com.palm.app.calculator/index.html
+++ /usr/palm/applications/com.palm.app.calculator/index.html
@@ -5,6 +5,7 @@
 <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
 <head>
 	<title>Calculator</title> 
+	<script src="/usr/palm/frameworks/mojo2/mojo.js" x-mojo-version="1" type="text/javascript"></script>
 	<script src="/usr/palm/frameworks/mojo-core.js" type="text/javascript"></script>
 	<script src="/usr/palm/frameworks/prototype/prototype_1603.js" type="text/javascript"></script>
 	<script src="calculator.js" type="text/javascript"></script>
--- .orig/usr/palm/applications/com.palm.app.location/app/controllers/app-assistant.js
+++ /usr/palm/applications/com.palm.app.location/app/controllers/app-assistant.js
@@ -51,11 +51,13 @@
 }
 
 AppAssistant.prototype.readLocationServicePrefs = function(stageController, response) {
-		if (response && !response.useGoogle && !response.useGps) {
+/*		if (response && !response.useGoogle && !response.useGps) {
 			stageController.swapScene("gpsoff", response);
 		} else {
 			stageController.swapScene("main", response);
 		}
+*/
+		stageController.swapScene("main", response);
 	},
 	
 AppAssistant.prototype.errorLocationServicePrefs = function(response) {
--- .orig/usr/palm/applications/com.palm.app.location/app/controllers/main-assistant.js
+++ /usr/palm/applications/com.palm.app.location/app/controllers/main-assistant.js
@@ -77,6 +77,11 @@
 			disabled : false
 	    };
 		
+	   this.locSrvOnOffModel = {
+	   	value: true, 
+	   	disabled: false
+	    };
+		
 	   this.prefData = prefData;
 	
 	},
@@ -130,6 +135,9 @@
                 }],
 	
 	setup: function() {
+		this.controller.setupWidget('gpsonoff', {}, this.locSrvOnOffModel);
+		this.controller.get('gpsonoff').observe('mojo-property-change', this.locSrvOnOffHandler.bind(this));
+	
 		//for app locate preferences
 		var autoLocateSelections = {
 			modelProperty: 'value',
@@ -187,6 +195,43 @@
 		this.readLocationServicePrefs(this.prefData);
 	},
 	
+	locSrvOnOffHandler: function(event){
+		if(event.value) {
+			this.controller.get("turnedofftext").hide();
+			this.controller.get("siteLocatePrefs").show();
+			this.controller.get("sitelocationOffMessage").show();
+			this.controller.get("locationOffMessage").show();
+			this.controller.get("autoLocatePrefs").show();
+			this.controller.get("geotagPhotosPrefs").show();
+			this.controller.get("dataPrefs").show();
+
+			this.prefData.useGps = true;
+			this.prefData.useGoogle = true;
+
+			LocationService.setUseGps(true, null, null, this.controller);
+			LocationService.setUseGoogle(true, null, null, this.controller);
+		}
+		else {
+			this.controller.get("turnedofftext").show();
+			this.controller.get("siteLocatePrefs").hide();
+			this.controller.get("sitelocationOffMessage").hide();
+			this.controller.get("sitelocationOnMessage").hide();
+			this.controller.get("locationOffMessage").hide();
+			this.controller.get("locationOnMessage").hide();
+			this.controller.get("autoLocatePrefs").hide();
+			this.controller.get("geotagPhotosPrefs").hide();
+			this.controller.get("dataPrefs").hide();
+
+			this.prefData.useGps = false;
+			this.prefData.useGoogle = false;
+
+			LocationService.setUseGps(false, null, null, this.controller);
+			LocationService.setUseGoogle(false, null, null, this.controller);
+		}
+		
+		this.toggleLocationMenu();
+	},
+	
 	toggleLocationMenu: function(){
 		if (!this.prefData.useGps && !this.prefData.useGoogle) {
 			Mojo.Log.info("**** sssssssssss both GPS and Google are OFF");
@@ -214,11 +259,13 @@
 	
 	handleSetGpsLocateSuccess: function(result) {
 		Mojo.Log.info("------------------- Set gps -----------------%j", $H(result));
-		if (result && !result.useGps && !result.useGoogle) {
+/*		if (result && !result.useGps && !result.useGoogle) {
 			this.controller.stageController.swapScene("gpsoff", result);
 		} else {
 			this.controller.stageController.swapScene("main", result);
 		} 	
+*/
+		this.controller.stageController.swapScene("main", result);
 	},
 	
 	errorSetGpsPreference: function (response) {
@@ -235,7 +282,7 @@
 		if (result && result.useGoogle && !result.isTermsOfUseAccepted) {
 			this.controller.stageController.swapScene("terms", "com.palm.app.location");	
 		} else if (result && !result.useGps && !result.useGoogle) {
-			this.controller.stageController.swapScene("gpsoff", result);
+			this.controller.stageController.swapScene("main", result);
 		} else {
 			if (result.useGoogle) {
 							this.readUseBackgroundDataCollection(result);
@@ -349,6 +396,20 @@
 			this.readUseGeotagPhotos(response);
 		}
 		this.toggleLocationMenu();
+
+		if (response && !response.useGoogle && !response.useGps) {
+			this.controller.get("turnedofftext").show();
+			this.controller.get("siteLocatePrefs").hide();
+			this.controller.get("sitelocationOffMessage").hide();
+			this.controller.get("sitelocationOnMessage").hide();
+			this.controller.get("locationOffMessage").hide();
+			this.controller.get("locationOnMessage").hide();
+			this.controller.get("autoLocatePrefs").hide();
+			this.controller.get("geotagPhotosPrefs").hide();
+			this.controller.get("dataPrefs").hide();
+			this.locSrvOnOffModel.value = false;
+			this.controller.modelChanged(this.locSrvOnOffModel);
+		}
 	},
 	
 
@@ -439,13 +500,15 @@
 		this.controller.get('locationOnMessage').show();
 		this.controller.get('locationOffMessage').hide();
 		if (isInit) {
-			this.controller.get('geotagPhotosPrefs').show();
+			if((this.prefData.useGoogle) || (this.prefData.useGps))
+				this.controller.get('geotagPhotosPrefs').show();
 		}
 	},
 	
 	handleGetGeotagPhotosPref: function(response) {
 		this.readUseGeotagPhotos(response);
-		this.controller.get('geotagPhotosPrefs').show();
+		if((this.prefData.useGoogle) || (this.prefData.useGps))
+			this.controller.get('geotagPhotosPrefs').show();
 	},
 	
 	successSetUseLocationServices: function (isEnabled,response) {
--- .orig/usr/palm/applications/com.palm.app.location/app/views/main/main-scene.html
+++ /usr/palm/applications/com.palm.app.location/app/views/main/main-scene.html
@@ -4,6 +4,13 @@
 		<div class="header-text">
 			<span x-mojo-loc=''>Location services</span>
 		</div>
+		<div class="header-sliding-toggle">
+	    	<div x-mojo-element="ToggleButton" id="gpsonoff" class="header-toggle-button"></div>                               
+		</div>                                                                                     
+	</div>
+	
+	<div id="turnedofftext" class="palm-body-text" style="display:none;">
+		<div class="section" style="text-align:justify;" x-mojo-loc=''>You have turned off all location data sources. No location data will be provided to applications that request your location.</div>
 	</div>
 	<div id='siteLocatePrefs' class="palm-group">
 		<div class="palm-group-title" x-mojo-loc="">
--- .orig/usr/palm/applications/com.palm.app.phoneprefs/appinfo.json
+++ /usr/palm/applications/com.palm.app.phoneprefs/appinfo.json
@@ -1,11 +1,11 @@
 {
-	"title": "Phone Prefs",
+	"title": "Network Services",
 	"type": "web",
 	"main": "index.html",
 	"id": "com.palm.app.phoneprefs",
 	"icon": "icon.png",
 	"splashicon": "icon-256x256.png",
-	"visible": false,
+	"visible": true,
 	"version": "1.0.0",
 	"vendor": "Palm"
 }
--- .orig/usr/palm/applications/com.palm.app.phoneprefs/app/controllers/preflist-assistant.js
+++ /usr/palm/applications/com.palm.app.phoneprefs/app/controllers/preflist-assistant.js
@@ -75,6 +75,14 @@
 			this.accountsListWidget.mojo.addAccount();
 		}.bind(this));
 		
+		this.phoneRadioOnOffModel = {
+	   	value: true, 
+	   	disabled: false
+	   };
+		
+		this.controller.setupWidget('phoneradioonoff', {}, this.phoneRadioOnOffModel);
+		this.controller.get('phoneradioonoff').observe('mojo-property-change', this.phoneRadioOnOffHandler.bind(this));
+		
 		this.controller.setupWidget('voicemailclear', this.buttonAttributes, this.voicemailbuttonModel);
 		this.controller.listen('voicemailclear', Mojo.Event.tap, this.handleTapOnVoicemailReset.bind(this));
 
@@ -166,10 +174,10 @@
 		$('showOutgoingCallerIDRowStatus').hide();
 				
 		
-        this.showContactMatchModel = {
+/*        this.showContactMatchModel = {
 			value: true
 		};
-		       
+*/		       
         this.callFwdModel = {
 			value: false
 		};
@@ -207,11 +215,11 @@
 			value: false
 		};
 		
-		this.controller.setupWidget('showContactMatch', {
+/*		this.controller.setupWidget('showContactMatch', {
             modelProperty: 'value'
         }, this.showContactMatchModel);
         this.controller.get('showContactMatch').addEventListener(Mojo.Event.propertyChange, this.doPropertyChanged.bindAsEventListener(this, 'showContactMatch'));
-
+*/
 		this.controller.setupWidget('callfwd', {
             modelProperty: 'value'
         }, this.callFwdModel);
@@ -259,6 +267,7 @@
 		this.controller.get('vmList').hide();
 		
 		this.controller.setupWidget('dtmfSelector', {
+            label: $L("DTMF Tones"),
             choices: this.dtmfTones,
             modelProperty: 'currentTone'
         }, this.dtmfTonesModel);
@@ -315,6 +324,7 @@
 		
 		this.voiceRoamingChoices =  [
 			{label: this.carrierOnlyLabel,value: "homeonly"},
+			{label : $L("Roam Only"),value: "roamonly"},
 			{label : $L("Automatic"),value: "any"}
 		];
 	
@@ -411,11 +421,53 @@
 			this.handleExternalLaunch(this.args,true);
 		}
 		
+		this.handlePower = new Mojo.Service.Request('palm://com.palm.telephony/', {
+			method: 'powerQuery',
+			onSuccess: this.handlePowerQueryNotifications.bind(this)});	
+		
 		this.styleList('accessibility');
 		this.styleList('network');
 		this.styleList("calls");
     },	
 	
+	handlePowerQueryNotifications: function(response){
+		if (response.returnValue && response.extended) {
+			if (response.extended.powerState && response.extended.powerState == 'on') {
+				this.phoneRadioOnOffModel.value = true;
+				this.controller.modelChanged(this.phoneRadioOnOffModel);
+
+				this.controller.get("turnedofftext").hide();
+				this.controller.get("phonepref").show();
+			}
+			else {
+				this.phoneRadioOnOffModel.value = false;
+				this.controller.modelChanged(this.phoneRadioOnOffModel);
+
+				this.controller.get("turnedofftext").show();
+				this.controller.get("phonepref").hide();
+			}
+		}
+
+		this.handlePower.cancel();
+	},							
+	
+	phoneRadioOnOffHandler: function(event){
+		if(event.value) {
+			this.controller.get("turnedofftext").hide();
+			this.controller.get("phonepref").show();
+			
+			this.controller.serviceRequest("palm://com.palm.telephony", {'method': "powerSet", 
+				'parameters': {'state': "on"}});
+		}
+		else {
+			this.controller.get("turnedofftext").show();
+			this.controller.get("phonepref").hide();
+			
+			this.controller.serviceRequest("palm://com.palm.telephony", {'method': "powerSet", 
+				'parameters': {'state': "off"}});
+		}
+	},
+	
 	setupPreferredCallService: function() {
 		this.controller.setupWidget('preferredCallService', {
 			labelPlacement: Mojo.Widget.labelPlacementLeft,
@@ -620,7 +672,7 @@
 		this.getSystemPreferencesServiceReq = SystemService.getSystemPreferencesService(
 			['phoneInternationalDialingActive', 'phoneInternationalDialingRegionId'],this.updateInternationalDialingSettings.bind(this));
 		this.networkStatusQueryReq = TelephonyService.networkStatusQuery(this.updateNetworkname.bind(this));
-        this.getSystemPreferencesServiceShowcontactmatchReq = SystemService.getSystemPreferencesService('showcontactmatch',this.updateShowcontactmatch.bind(this));
+//        this.getSystemPreferencesServiceShowcontactmatchReq = SystemService.getSystemPreferencesService('showcontactmatch',this.updateShowcontactmatch.bind(this));
 		this.updateManualDataSettingsReq = SystemService.getManualDataSettings(this.updateManualDataSettings.bind(this));
 		this.getVoiceNumberEditableReq = SystemService.getSystemPreferencesService('allowEditVoicemail',this.updateVoicenumberEditableQueryDone.bind(this));
 		this.getBandSelectionAllowed = SystemService.getSystemPreferencesService('hideRatSelection',this.updateRatSelection.bind(this));
@@ -1495,14 +1547,14 @@
 	},
 	    
 	//Showcontactmatch
-    updateShowcontactmatch: function(payload){
+/*    updateShowcontactmatch: function(payload){
 		if(payload.showcontactmatch == undefined)
 			return;
         this.showContactMatchModel.value = payload.showcontactmatch;
         this.controller.modelChanged(this.showContactMatchModel);
         
     },
-	
+*/	
 	
 	
 	//DTMF
@@ -2049,17 +2101,20 @@
 			// if update happens while we are open and band selection
 			// was previously allowed (assuming based on choices == 3)
 			// put things back
-			if (this.voiceRoamingChoices.length == 3) {
+/*			if (this.voiceRoamingChoices.length == 3) {
 				this.voiceRoamingChoices[1] = {
 					label: $L("Automatic"),
 					value: "any"	
 				};
 				this.voiceRoamingChoices.pop();
 			}
-			
+*/			
 			if (payload.extended.mode == 'any') {
 				this.voiceRoamingModel.currentVoiceRoaming = "any";
 				$('dataroamingrow').show();
+			} else if(payload.extended.mode == 'roamonly') {
+				this.voiceRoamingModel.currentVoiceRoaming = "roamonly";
+				$('dataroamingrow').show();
 			} else {
 				this.voiceRoamingModel.currentVoiceRoaming = "homeonly";
 				$('dataroamingrow').hide();
@@ -2667,9 +2722,10 @@
         var value = propertyChange.value;
         
         switch (id) {
-			case 'showContactMatch':
+/*			case 'showContactMatch':
    	            this.setSystemPreferencesServiceReq = SystemService.setSystemPreferencesService('showcontactmatch',value,null);
 				break;
+*/
             case 'showOutgoingCallerID':
                 this.clirSetReq = TelephonyService.clirSet(!value, this.handleError.bind(this));
             	break;            
--- .orig/usr/palm/applications/com.palm.app.phoneprefs/app/views/preflist/preflist-scene.html
+++ /usr/palm/applications/com.palm.app.phoneprefs/app/views/preflist/preflist-scene.html
@@ -1,13 +1,19 @@
 
-	  <div class="palm-page-header multi-line">
+	  <div class="palm-page-header">
 		<div class="palm-page-header-wrapper">
 	   	 <div class="icon phone"></div>
    	      <div class="title" x-mojo-loc=''>
-		 	 Phone Preferences      
+		 	 Network Services
           </div>
+	    	<div class="header-sliding-toggle">
+		    	<div x-mojo-element="ToggleButton" id="phoneradioonoff" class="header-toggle-button"></div>                               
+			</div> 
     	</div>
 	  </div>
 	
+	<div id="turnedofftext" class="palm-body-text" style="display:none;">
+		<div class="section" style="padding-top:10px;text-align:justify;" x-mojo-loc=''>You have turned off network services. Phone radio is also turned off so all phone activity is disabled.</div>
+	</div>
 	
   <div id='phonepref' style='display:none'>
 
@@ -26,7 +32,7 @@
     	</div>
 	</div>
 
-    <div class="palm-group">
+<!--    <div class="palm-group">
         <div x-mojo-loc="" class="palm-group-title">
             When typing in dialpad
         </div>
@@ -41,7 +47,7 @@
             </div>
         </div>
     </div>
-
+-->
     <div class="palm-group" id="xxcallforwarding">
         <div x-mojo-loc="" class="palm-group-title">
             CALL FORWARDING
@@ -214,11 +220,7 @@
 		<div class="palm-list">
 			<div class="palm-row">
 				<div class="palm-row-wrapper">
-					<div id="dtmfSelector" class='spinner' x-mojo-element="ListSelector">
-                	</div>
-            		<div x-mojo-loc="" class="left label">
-	                   	 DTMF tones
-	               	</div>
+					<div id="dtmfSelector" x-mojo-element="ListSelector" class="right"></div>
 				</div>
 			</div>
 		</div>
@@ -419,7 +421,6 @@
 		</div>
 	</div> 
 	<div id="voicemailclear" x-mojo-element="Button" ></div>  
-</div>
 
 
 <div id="phoneOffText" class="info-text" style='display:none'>
@@ -431,4 +432,5 @@
 		<center><div x-mojo-element="Spinner" id="initial-query-spinner"></div></center>
 	</div>	
 </div>
+</div>
 
--- .orig/usr/palm/applications/com.palm.app.screenlock/app/controllers/securityconfig-assistant.js
+++ /usr/palm/applications/com.palm.app.screenlock/app/controllers/securityconfig-assistant.js
@@ -31,6 +31,12 @@
 		 value: false,
 	},
 	
+	hapticFeedbackToggleModel: {
+ 		 value: false,
+ 	},
+
+	brightnessPresets: [{label: $L('Maximum'), value: 100},{label: $L('Minimum'), value: 0}],
+
 	voiceDialToggleModel: {
 		 value: false,
 	},
@@ -38,8 +44,8 @@
 	sliderattributes: {
 			modelProperty: 'value',
 			maxValue: 100,
-			minValue: 10,
-			round: false,
+			minValue: 0,
+			round: true,
 			updateInterval: 0.1
 	},	
 				
@@ -51,6 +57,9 @@
 		
 		//this.controller.get('fixedtimerrow').hide();
 			
+		this.controller.setupWidget('hapticFeedback', this.onOffToggleOpt, this.hapticFeedbackToggleModel);
+		Mojo.Event.listen($('hapticFeedback'),'mojo-property-change', this.toggleHapticFeedback.bindAsEventListener(this));
+		
 		this.controller.setupWidget('showAlerts', this.onOffToggleOpt, this.alertToggleModel);
 		Mojo.Event.listen($('showAlerts'),'mojo-property-change', this.toggleShowAlerts.bindAsEventListener(this));
 		
@@ -86,9 +95,17 @@
 		
 		this.controller.setupWidget('secureUnlock', {
 			choices: this.availableSecurity,
+			label: $L("Security"),
 			modelProperty: 'currentSecurity'
 		}, this.securityModel);
 		
+		this.controller.setupWidget('screenBrightness', {
+			label: $L("Brightness"),
+			choices: this.brightnessPresets
+		}, this.brightnessModel);
+
+		Mojo.Event.listen($('screenBrightness'),'mojo-property-change', this.handleBrightnessChange.bindAsEventListener(this));
+		
 		this.controller.setupWidget('brightness', this.sliderattributes,this.brightnessModel);
 		Mojo.Event.listen($('brightness'),'mojo-property-change', this.handleBrightnessChange.bindAsEventListener(this));
 		
@@ -113,6 +130,15 @@
 		this.controller.setupWidget(Mojo.Menu.appMenu, {omitDefaultItems:true}, appMenuModel);
 		
 		this.getVoiceDialPreference();				
+
+		this.getHapticFeedback = this.controller.serviceRequest("palm://com.palm.systemservice/", {
+			method: 'getPreferences', parameters: {"keys": ["hapticFeedback"]},
+			onSuccess: function(response) {
+				if(response.hapticFeedback) {
+					this.hapticFeedbackToggleModel.value = response.hapticFeedback;
+					this.controller.modelChanged(this.hapticFeedbackToggleModel, this);
+				}
+			}.bind(this)});
 	},
 	
 	handleCommand: function(event) {
@@ -148,7 +174,7 @@
 	timerModel: {currentTimer: 30},
 	
 	//Available Timer Values.
-	availableTimers: [{label: $L('30 seconds'), value:30},{label: $L('1 minute'), value:60},{label: $L('2 minutes'), value:120},{label: $L('3 minutes'), value:180}],
+	availableTimers: [{label: $L('15 seconds'), value: 15}, {label: $L('30 seconds'), value:30},{label: $L('1 minute'), value:60},{label: $L('2 minutes'), value:120},{label: $L('3 minutes'), value:180},{label: $L('5 minutes'), value:300},{label: $L('Never'), value:10800}],	
 	
 	//Model for Security Selection List
 	securityModel: {currentSecurity: 'none'},
@@ -398,6 +424,9 @@
 	handleBrightnessChange: function(event) {
 		if(!event)
 			return;
+		
+		this.controller.modelChanged(this.brightnessModel, this);
+		
 		this.controller.serviceRequest('palm://com.palm.display/control', {
 			method: 'setProperty', 
 			parameters:{maximumBrightness:parseInt(event.value)}
@@ -555,6 +584,11 @@
 		SystemService.setLEDThrobber(event.value);		
 	},
 	
+	toggleHapticFeedback: function(event) {
+		this.setHapticFeedback = new Mojo.Service.Request("palm://com.palm.systemservice/", {
+			method: 'setPreferences', parameters: {"hapticFeedback":event.value}});
+ 	},
+ 	
 	toggleSwitchApps: function(event) {
 		if(!event)
 			return;		
--- .orig/usr/palm/applications/com.palm.app.screenlock/app/views/securityconfig/securityconfig-scene.html
+++ /usr/palm/applications/com.palm.app.screenlock/app/views/securityconfig/securityconfig-scene.html
@@ -13,8 +13,8 @@
 		<div class="palm-list">
 
 			<div class="palm-row first">
-				<div class="palm-row-wrapper">
-					<div class="title" x-mojo-loc=''>Brightness</div>
+				<div class="palm-row-wrapper" style="max-height:100px;">
+					<div id="screenBrightness" x-mojo-element="ListSelector" class="right" style="max-height:40px;"></div>
 					<div x-mojo-element="Slider" id='brightness' class="palm-slider"></div>
 				</div>
 			</div>
@@ -42,6 +42,26 @@
 
 	 <div class="palm-group">
 		<div class="palm-group-title">
+			<span x-mojo-loc=''>Touchscreen</span>
+		</div>
+		<div class="palm-list">
+			<div class="palm-row first">
+				<div class="palm-row-wrapper">
+					<div x-mojo-element="ToggleButton" id="hapticFeedback"></div>
+					<div class="title capitalize" x-mojo-loc=''>Haptic Feedback</div>
+				</div>
+			</div>
+			<div class="palm-row last">
+				<div class="palm-row-wrapper">
+					<div x-mojo-element="ToggleButton" id="switchApps"></div>
+					<div class="title capitalize" x-mojo-loc=''>Advanced Gestures</div>
+				</div>
+			</div>
+		</div>
+	</div>
+	
+<!--	 <div class="palm-group">
+		<div class="palm-group-title">
 			<span x-mojo-loc=''>Advanced Gestures</span>
 		</div>
 		<div class="palm-list">
@@ -53,6 +73,7 @@
 			</div>
 		</div>
 	</div>
+-->
 	<div class="palm-info-text" id="switchAppsInfo"></div>
 
 	<div class="palm-group">
@@ -63,7 +84,7 @@
 			<div id='secureFirstrow' class="palm-row">
 				<div class="palm-row-wrapper" x-mojo-focus-highlight="true">
 					<div class="">
-						<img id='lockImg' src="images/lock.png" style='display:none;' class='label label-lock-image'></img>    
+<!--						<img id='lockImg' src="images/lock.png" style='display:none;' class='label label-lock-image'></img>    -->
 						<div id="secureUnlock" x-mojo-element="ListSelector"></div>
 					 </div>
 			    </div>
@@ -71,6 +92,7 @@
 			<div id='securelastrow' class="palm-row" x-mojo-tap-highlight="momentary">
 				<div class="palm-row-wrapper textfield-group">
 					<div class="title">
+						<img id='lockImg' src="images/lock.png" style='display:none;padding-top:13px;' class='label label-lock-image'></img>    
 						<div id="changepassword"></div>
 					 </div>
 			    </div>
@@ -85,44 +107,44 @@
 
 	<div class="palm-group">
 		<div class="palm-group-title">
-			<span x-mojo-loc=''>Notifications</span>
+			<span x-mojo-loc=''>Lock Screen</span>
 		</div>
 		<div class="palm-list">
 			<div class="palm-row first">
 				<div class="palm-row-wrapper">
 					<div x-mojo-element="ToggleButton" id="showAlerts"></div>
-					<div class="title capitalize" x-mojo-loc=''>Show when locked</div>
+					<div class="title capitalize" x-mojo-loc=''>Notifications</div>
 				</div>
 			</div>
 			<div class="palm-row last">
 				<div class="palm-row-wrapper">
-					<div x-mojo-element="ToggleButton" id="blinkAlerts"></div>
-					<div class="title capitalize" x-mojo-loc=''>Blink notifications</div>
+					<div x-mojo-element="ToggleButton" id="voiceDial"></div>
+					<div class="title capitalize" x-mojo-loc=''>Voice Dialing</div>
 				</div>
 			</div>
 		</div>
 	</div>
 
 	<div class="palm-info-text single" x-mojo-loc=''>
-		The gesture area blinks when new notifications arrive.
+		Access voice dialing even when your phone is locked.
 	</div>
-	
+
 	<div class="palm-group">
 		<div class="palm-group-title">
-			<span x-mojo-loc=''>Voice Dialing</span>
+			<span x-mojo-loc=''>Notifications</span>
 		</div>
 		<div class="palm-list">
 			<div class="palm-row single">
 				<div class="palm-row-wrapper">
-					<div x-mojo-element="ToggleButton" id="voiceDial"></div>
-					<div class="title capitalize" x-mojo-loc=''>Enable when locked</div>
+					<div x-mojo-element="ToggleButton" id="blinkAlerts"></div>
+					<div class="title capitalize" x-mojo-loc=''>Blink notifications</div>
 				</div>
 			</div>
 		</div>
 	</div>
 
 	<div class="palm-info-text single" x-mojo-loc=''>
-		Access voice dialing even when your phone is locked.
+		The gesture area blinks when new notifications arrive.
 	</div>
 
 </div>
--- .orig/usr/palm/applications/com.palm.app.soundsandalerts/appinfo.json
+++ /usr/palm/applications/com.palm.app.soundsandalerts/appinfo.json
@@ -1,5 +1,5 @@
 {
-	"title": "Sounds & Ringtones",
+	"title": "Sound Settings",
 	"type": "web",
 	"main": "index.html",
 	"id": "com.palm.app.soundsandalerts",
--- .orig/usr/palm/applications/com.palm.app.soundsandalerts/app/models/audio-luna-service.js
+++ /usr/palm/applications/com.palm.app.soundsandalerts/app/models/audio-luna-service.js
@@ -5,6 +5,44 @@
 	}
 });
     
+AudioService.getMediaVolume = function(callback, sceneController) {
+	var request = new Mojo.Service.Request(AudioService.media_identifier, {
+		method: 'getVolume',
+		onSuccess: callback,
+		onFailure: callback
+	});
+	
+	return request;
+}
+
+AudioService.setMediaVolume = function(volume, callback, sceneController) {
+	var request = new Mojo.Service.Request(AudioService.media_identifier, {
+		method: 'setVolume',
+		parameters: {volume:volume },
+		onSuccess: function(response) {
+			if(callback)
+				callback(response);
+		},
+		onFailure: function(response) {
+			if(callback)
+				callback(response);
+		}			
+	});
+	
+	return request;
+}
+
+AudioService.subscribeToMediaVolume = function(callback) {
+	var request = new Mojo.Service.Request(AudioService.media_identifier, {
+		method: 'status',
+		parameters: {"subscribe": true},
+		onSuccess: callback,
+		onFailure: callback
+	});
+	
+	return request;
+}
+
 AudioService.getSystemVolume = function(callback, sceneController) {
     var request = new Mojo.Service.Request(AudioService.system_identifier, {
       method: 'getVolume',
@@ -110,6 +148,7 @@
 	return request;
 }
 
+AudioService.media_identifier = 'palm://com.palm.audio/media';
 AudioService.system_identifier = 'palm://com.palm.audio/system';
 AudioService.ringtone_identifier = 'palm://com.palm.audio/ringtone';
 AudioService.vibrate_identifier = 'palm://com.palm.audio/state';
--- .orig/usr/palm/applications/com.palm.app.soundsandalerts/app/controllers/soundsalertsconfig-assistant.js
+++ /usr/palm/applications/com.palm.app.soundsandalerts/app/controllers/soundsalertsconfig-assistant.js
@@ -3,7 +3,17 @@
 var SoundsalertsconfigAssistant = Class.create({
 	
 	initialize: function() {
-		
+		this.curAlertName = "alert.wav";
+		this.curAlertPath = "/usr/palm/sounds/alert.wav";
+		this.curNotifyName = "notification.wav";
+		this.curNotifyPath = "/usr/palm/sounds/notification.wav";
+		
+		this.curLowBatteryValue = "notifications";
+		this.curLowBatteryName = "";
+		this.curLowBatteryPath = "";
+		this.curChargerNotifyValue = "notifications";
+		this.curChargerNotifyName = "";
+		this.curChargerNotifyPath = "";
 	},
 	
 	ToggleOpt: {
@@ -37,6 +47,30 @@
 	availableOffSettings: [{label: $L('Vibrate'), value:'vibrate'},{label: $L('Mute'), value:'mute'}],
 	availableOnSettings: [{label: $L('Sound & Vibrate'), value:'vibrate'},{label: $L('Sound'), value:'mute'}],
 	
+	alertRingtoneChoices: [{'label': $L("Default"), 'value': "alert.wav"}, {'label': $L("Select"), 'value': "select"}],
+
+	alertRingtoneModel: {
+		'value' : "alert.wav"
+	},
+
+	notifyRingtoneChoices: [{'label': $L("Default"), 'value': "notification.wav"}, {'label': $L("Select"), 'value': "select"}],
+
+	notifyRingtoneModel: {
+		'value' : "notification.wav"
+	},
+
+	batteryNotifyChoices: [{'label': $L("Vibrate"), 'value': "vibrate"},{'label': $L("System Sound"), 'value': "notifications"},{'label': $L("Ringtone"), 'value': "ringtone"},{'label': $L("Mute"), 'value': "none"}],
+
+	batteryNotifyModel: {
+		'value' : "notifications"
+	},
+
+	chargerNotifyChoices: [{'label': $L("Vibrate"), 'value': "vibrate"},{'label': $L("System Sound"), 'value': "notifications"},{'label': $L("Ringtone"), 'value': "ringtone"},{'label': $L("Mute"), 'value': "none"}],
+
+	chargerNotifyModel: {
+		'value' : "notifications"
+	},
+	
 	setup: function() {
 		this.attributes = {
 			modelProperty: 'value',
@@ -51,6 +85,12 @@
 			round: true
 		};
 				
+		this.ringtoneVolumePresets = [{label: $L('Maximum'), value: 100},{label: $L('Minimum'), value: 0}];
+
+		this.systemVolumePresets = [{label: $L('Maximum'), value: 100},{label: $L('Minimum'), value: 0}];
+
+		this.mediaVolumePresets = [{label: $L('Maximum'), value: 100},{label: $L('Minimum'), value: 0}];
+
     	this.ringtoneVolumeModel = {
      	 'value' : 50
   		  };
@@ -59,6 +99,10 @@
      	 'value' : 50
   		  };
 		  
+		 this.mediaVolumeModel = {
+     	 'value' : 50
+  		  };
+		
 		/*this.controller.setupWidget('soundWhenCharging', {
 			choices: this.availableOptions,
 			modelProperty: 'value'
@@ -66,11 +110,33 @@
 		
 		$('soundWhenCharging').observe('mojo-property-change', this.handleSelection.bindAsEventListener(this));*/
 	
+		this.controller.setupWidget('ringvolumeSelector', {
+			label: $L("Ringtone"),
+			choices: this.ringtoneVolumePresets,
+			modelProperty: 'value',
+			multiline: true
+		}, this.ringtoneVolumeModel);
+
+		this.controller.setupWidget('systemvolumeSelector', {
+			label: $L("System"),
+			choices: this.systemVolumePresets,
+			modelProperty: 'value',
+			multiline: true
+		}, this.systemVolumeModel);
+
+		this.controller.setupWidget('mediavolumeSelector', {
+			label: $L("Media"),
+			choices: this.mediaVolumePresets,
+			modelProperty: 'value',
+			multiline: true
+		}, this.mediaVolumeModel);
+	
         this.controller.setupWidget('ringvolume', this.attributes,this.ringtoneVolumeModel);
 		this.controller.setupWidget('systemvolume', this.attributes1,this.systemVolumeModel);
+		this.controller.setupWidget('mediavolume', this.attributes1,this.mediaVolumeModel);
 		$('ringvolume').observe('mojo-property-change', this.handleRingtoneVolumeChange.bindAsEventListener(this));
 		$('systemvolume').observe('mojo-property-change', this.handleSystemVolumeChange.bindAsEventListener(this));
-				
+		$('mediavolume').observe('mojo-property-change', this.handleMediaVolumeChange.bindAsEventListener(this));								
 	
 		//added to the assistant so that the when charging vibrate widget is shown
 		//this.controller.setupWidget('vibrate_off', this.ToggleOpt, this.vibrateOffModel);
@@ -91,16 +157,53 @@
 		
 		this.controller.setupWidget('system_ui_sounds', this.ToggleOpt, this.systemUISoundsModel);
 			
+		this.controller.setupWidget('alertringtone', {
+			label: $L("Alert"),
+			choices: this.alertRingtoneChoices,
+			modelProperty: 'value',
+			multiline: true
+		}, this.alertRingtoneModel);
+
+		this.controller.setupWidget('notifyringtone', {
+			label: $L("Notify"),
+			choices: this.notifyRingtoneChoices,
+			modelProperty: 'value',
+			multiline: true
+		}, this.notifyRingtoneModel);
+		
+		this.controller.setupWidget('battery_notify', {
+			label: $L("Low Battery"),
+			choices: this.batteryNotifyChoices,
+			modelProperty: 'value',
+			multiline: true
+		}, this.batteryNotifyModel);
+
+		this.controller.setupWidget('charger_notify', {
+			label: $L("Charger"),
+			choices: this.chargerNotifyChoices,
+			modelProperty: 'value',
+			multiline: true
+		}, this.chargerNotifyModel);
+	
 		$('vibrate_off').observe('mojo-property-change', this.toggleVibrateOff.bindAsEventListener(this));
 		$('vibrate_on').observe('mojo-property-change', this.toggleVibrateOn.bindAsEventListener(this));
 		$('system_ui_sounds').observe('mojo-property-change', this.toggleSystemUISounds.bindAsEventListener(this));
 		
+		$('alertringtone').observe('mojo-property-change', this.showAlertFilePicker.bindAsEventListener(this));
+		$('notifyringtone').observe('mojo-property-change', this.showNotificationFilePicker.bindAsEventListener(this));
+		
+		$('battery_notify').observe('mojo-property-change', this.setBatterySystemNotification.bindAsEventListener(this));
+		$('charger_notify').observe('mojo-property-change', this.setChargerSystemNotification.bindAsEventListener(this));
+		
 		$('currentringtonerow').observe(Mojo.Event.tap, this.showAudioFilePicker.bindAsEventListener(this));
 				
 		this.getCurrentVolumes();
 		this.getCurrentRingtone();
 		this.getVibrateSettings();	
 		this.getOtherSettings();
+		this.getCurrentAlert();
+		this.getCurrentNotification();
+		this.getSystemNotifications();
 		
 		//App Menu - Remove default items and add only Edit & Help items.
 		var appMenuModel = {
@@ -112,6 +215,9 @@
 	},
 	
 	cleanup : function() {
+		if(this.getMediaVolumeSubscribe)
+			this.getMediaVolumeSubscribe.cancel();
+		
 		if(this.getRingtoneVolumeSubscribe)
 			this.getRingtoneVolumeSubscribe.cancel();
 	},	
@@ -151,6 +257,9 @@
 	handleRingtoneVolumeChange: function(event) {
 		if(event.value == undefined)
 			return;
+		
+		this.controller.modelChanged(this.ringtoneVolumeModel, this);
+
 		this.setRingtoneVolumeReq = AudioService.setRingtoneVolume(event.value,this.setVolumeDone.bind(this),this);		
 	},
 		
@@ -205,6 +314,9 @@
 	handleSystemVolumeChange: function(event) {
 		if(event.value == undefined)
 			return;
+		
+		this.controller.modelChanged(this.systemVolumeModel, this);			
+		
 		this.setSystemVolumeReq = AudioService.setSystemVolume(event.value,this.setSystemVolumeResponse.bind(this),this); 
 	},
 	
@@ -217,12 +329,43 @@
 		})
 	},
 		
+	handleMediaVolumeChange: function(event) {
+		if(event.value == undefined)
+			return;
+			
+		this.controller.modelChanged(this.mediaVolumeModel, this);			
+			
+		this.setMediaVolumeReq = AudioService.setMediaVolume(event.value,this.setMediaVolumeResponse.bind(this),this); 
+	},
+	
+	setMediaVolumeResponse: function(response) {
+		if(!response.returnValue)
+			return;
+		this.controller.serviceRequest('palm://com.palm.audio/media', {
+			method: 'playFeedback',
+			parameters : {"name":"shutter"}
+		})
+	},
+	
 	getCurrentVolumes: function() {		
+		//Subscribe to Media Volume
+		this.getMediaVolumeSubscribe = AudioService.subscribeToMediaVolume(this.mediaVolumeCB.bind(this));
+		//Subscribe to System Volume
 		this.getSystemVolumeReq = AudioService.getSystemVolume(this.systemVolumeCB.bind(this),this);
 		//Subscribe to Ringtone Volume
 		this.getRingtoneVolumeSubscribe = AudioService.subscribeToRingtoneVolume(this.ringtoneVolumeCB.bind(this));
 	},
 	
+	mediaVolumeCB: function(response) {
+		if(response.returnValue) {
+			this.mediaVolumeModel.value = response.volume;
+			this.controller.modelChanged(this.mediaVolumeModel,this);
+		}
+		else {
+			Mojo.log("getVolume Failed"+response.errorText);			
+		}
+	},
+	
 	systemVolumeCB: function(payload) {
 		if(payload.returnValue) {
 			this.systemVolumeModel.value = payload.volume;
@@ -296,6 +439,205 @@
 		//this.getSoundWhenOnCradleReq = SystemService.getSoundWhenOnCradle(this.getSoundWhenOnCradleQuery.bind(this));
 	},
 	
+	getCurrentAlert: function() {
+		this.getCurrentAlertReq = new Mojo.Service.Request("palm://com.palm.systemservice/", {
+			method: 'getPreferences', parameters: {"keys":["alerttone"]}, 
+			onSuccess: this.getCurrentAlertQuery.bind(this),
+			onFailure: this.getCurrentAlertQuery.bind(this)});
+	},
+
+	getCurrentAlertQuery: function(response) {
+		if(response.alerttone) {
+			this.alertRingtoneModel.value = response.alerttone.name;
+			this.curAlertName = response.alerttone.name;
+			this.curAlertPath = response.alerttone.fullPath;
+
+			this.controller.modelChanged(this.alertRingtoneModel, this);
+		}
+	},
+
+	showAlertFilePicker: function(event) {
+		if(event.value == "select") {	
+			this.alertRingtoneModel.value = this.curAlertName;
+			this.controller.modelChanged(this.alertRingtoneModel, this);
+		
+			Mojo.FilePicker.pickFile({"kinds": ["ringtone"], "filePath": this.curAlertPath, "onSelect": this.selectedAlertFile.bind(this),actionType:"attach", actionName: $L("Done")}, Mojo.Controller.stageController);
+		}
+		else {
+			this.selectedAlertFile({'name': "alert.wav", 'fullPath': "/usr/palm/sounds/alert.wav"});
+		}
+	},
+
+	selectedAlertFile: function(file) {
+		this.curAlertName = file.name;
+		this.curAlertPath = file.fullPath;
+		
+		this.setAlertReq = new Mojo.Service.Request("palm://com.palm.systemservice/", {
+			method: 'setPreferences', parameters: {"alerttone":file}});
+			
+		this.alertRingtoneModel.value = file.name;
+		this.controller.modelChanged(this.alertRingtoneModel, this);
+	},
+
+	getCurrentNotification: function() {
+		this.getCurrentNotificationReq = new Mojo.Service.Request("palm://com.palm.systemservice/", {
+			method: 'getPreferences', parameters: {"keys":["notificationtone"]}, 
+			onSuccess: this.getCurrentNotificationQuery.bind(this),
+			onFailure: this.getCurrentNotificationQuery.bind(this)});
+	},
+
+	getCurrentNotificationQuery: function(response) {
+		if(response.notificationtone) {
+			this.notifyRingtoneModel.value = response.notificationtone.name;
+			this.curNotifyName = response.notificationtone.name;
+			this.curNotifyPath = response.notificationtone.fullPath;
+
+			this.controller.modelChanged(this.notifyRingtoneModel, this);
+		}
+	},
+
+	showNotificationFilePicker: function(event) {
+		if(event.value == "select") {
+			this.notifyRingtoneModel.value = this.curNotifyName;
+			this.controller.modelChanged(this.notifyRingtoneModel, this);		
+		
+			Mojo.FilePicker.pickFile({"kinds": ["ringtone"], "filePath": this.curNotifyPath, "onSelect": this.selectedNotificationFile.bind(this), actionType: "attach", actionName: $L("Done")}, Mojo.Controller.stageController);
+		}
+		else {
+			this.selectedNotificationFile({'name': "notification.wav", 'fullPath': "/usr/palm/sounds/notification.wav"});
+		}
+	},
+
+	selectedNotificationFile: function(file) {
+		this.curNotifyName = file.name;
+		this.curNotifyPath = file.fullPath;
+	
+		this.setNotificationReq = new Mojo.Service.Request("palm://com.palm.systemservice/", {
+			method: 'setPreferences', parameters: {"notificationtone":file}});
+
+		this.notifyRingtoneModel.value = file.name;
+		this.controller.modelChanged(this.notifyRingtoneModel, this);
+	},
+
+	getSystemNotifications: function() {
+		this.getSystemNotificationsReq = new Mojo.Service.Request("palm://com.palm.systemservice/", {
+			method: 'getPreferences', parameters: {"keys":["notifications"]}, 
+			onSuccess: this.getSystemNotificationsQuery.bind(this),
+			onFailure: this.getSystemNotificationsQuery.bind(this)});
+	},
+
+	getSystemNotificationsQuery: function(response) {
+		if(response.notifications) {
+			if(response.notifications.lowBattery == "ringtone") {
+				this.batteryNotifyModel.value = response.notifications.lowBatteryRingtoneName;
+
+				this.curLowBatteryValue = "ringtone";
+				this.curLowBatteryName = response.notifications.lowBatteryRingtoneName;
+				this.curLowBatteryPath = response.notifications.lowBatteryRingtonePath;
+			}
+			else
+				this.batteryNotifyModel.value = response.notifications.lowBattery;
+			
+			this.controller.modelChanged(this.batteryNotifyModel, this);
+
+			if(response.notifications.chargerConnected == "ringtone") {
+				this.chargerNotifyModel.value = response.notifications.chargerConnectedRingtoneName;
+
+				this.curChargerNotifyValue = "ringtone";
+				this.curChargerNotifyName = response.notifications.chargerConnectedRingtoneName;
+				this.curChargerNotifyPath = response.notifications.chargerConnectedRingtonePath;
+			}
+			else
+				this.chargerNotifyModel.value = response.notifications.chargerConnected;
+ 			
+			this.controller.modelChanged(this.chargerNotifyModel, this);
+		}
+	},
+
+	selectedSystemNotificationsFile: function(notification, file) {
+		if(notification == "battery") {
+			this.batteryNotifyModel.value = file.name;
+
+			this.curLowBatteryValue = "ringtone";
+			this.curLowBatteryName = file.name;
+			this.curLowBatteryPath = file.fullPath;
+			
+			this.controller.modelChanged(this.batteryNotifyModel, this);
+		}
+		else if(notification == "charger") {
+			this.chargerNotifyModel.value = file.name;
+
+			this.curChargerNotifyValue = "ringtone";
+			this.curChargerNotifyName = file.name;
+			this.curChargerNotifyPath = file.fullPath;
+
+			this.controller.modelChanged(this.chargerNotifyModel, this);
+		}
+		
+		this.saveSystemNotifications();
+	},
+	
+	setBatterySystemNotification: function(event) {
+		if(this.batteryNotifyModel.value == "ringtone") {
+			if(this.curLowBatteryValue == "ringtone")
+				this.batteryNotifyModel.value = this.curLowBatteryName;
+			else
+				this.batteryNotifyModel.value = this.curLowBatteryValue;
+				
+			this.controller.modelChanged(this.batteryNotifyModel, this);
+					
+			Mojo.FilePicker.pickFile({"kinds": ["ringtone"], "filePath": this.curLowBatteryPath, "onSelect": this.selectedSystemNotificationsFile.bind(this, "battery"), actionType: "attach", actionName: $L("Done")}, Mojo.Controller.stageController);
+		}
+		else {
+			this.curLowBatteryValue = this.batteryNotifyModel.value;
+			this.curLowBatteryName = "";
+			this.curLowBatteryPath = "";
+
+			this.saveSystemNotifications();	
+		}
+	},
+
+	setChargerSystemNotification: function(event) {
+		if(this.chargerNotifyModel.value == "ringtone") {
+			if(this.curChargerNotifyValue == "ringtone")
+				this.chargerNotifyModel.value = this.curChargerNotifyName;
+			else
+				this.chargerNotifyModel.value = this.curChargerNotifyValue;
+			
+			this.controller.modelChanged(this.chargerNotifyModel, this);
+
+			Mojo.FilePicker.pickFile({"kinds": ["ringtone"], "filePath": this.curChargerNotifyPath, "onSelect": this.selectedSystemNotificationsFile.bind(this, "charger"), actionType: "attach", actionName: $L("Done")}, Mojo.Controller.stageController);
+		}
+		else {
+			this.curChargerNotifyValue = this.chargerNotifyModel.value;
+			this.curChargerNotifyName = "";
+			this.curChargerNotifyPath = "";
+		
+			this.saveSystemNotifications();	
+		}
+	},
+
+	saveSystemNotifications: function() {
+		var notifications = {
+			'lowBattery': this.batteryNotifyModel.value, 
+			'chargerConnected': this.chargerNotifyModel.value };
+	
+		if(this.curLowBatteryValue == "ringtone") {
+			notifications.lowBattery = "ringtone";
+			notifications.lowBatteryRingtoneName = this.curLowBatteryName;
+			notifications.lowBatteryRingtonePath = this.curLowBatteryPath;
+		}
+
+		if(this.curChargerNotifyValue == "ringtone") {
+			notifications.chargerConnected = "ringtone";
+			notifications.chargerConnectedRingtoneName = this.curChargerNotifyName;
+			notifications.chargerConnectedRingtonePath = this.curChargerNotifyPath;
+		}
+		
+		this.setNotificationReq = new Mojo.Service.Request("palm://com.palm.systemservice/", {
+			method: 'setPreferences', parameters: {"notifications": notifications}});
+	},
+				
 	getSystemUISoundsQuery: function(payload) {	
 	    
 		if(payload.systemSounds != undefined) {
--- .orig/usr/palm/applications/com.palm.app.soundsandalerts/app/views/soundsalertsconfig/soundsalertsconfig-scene.html
+++ /usr/palm/applications/com.palm.app.soundsandalerts/app/views/soundsalertsconfig/soundsalertsconfig-scene.html
@@ -2,7 +2,7 @@
 	<div class="palm-page-header">
 	  <div class="header-icon soundsandalerts"></div>
 		<div class="header-text">
-			<span x-mojo-loc=''>Sounds &amp; ringtones</span>
+			<span x-mojo-loc=''>Sound Settings</span>
 		</div>
 	</div>
 	
@@ -32,32 +32,86 @@
 					<div id='vibrate_on' x-mojo-element="ListSelector" class="right"></div>
 				</div>
             </div>
-			 <div id='currentringtonerow' class="palm-row" x-mojo-tap-highlight="momentary">
+			 <div class="palm-row last">
 				<div class="palm-row-wrapper">
-					<div class="label left" x-mojo-loc=''>Ringtone</div>
-	            	<div id='currentringtone' class="title right"></div>					
+	            	<div id="system_ui_sounds" x-mojo-element="ToggleButton"></div>
+	                <div class="title left" x-mojo-loc="">
+	                    System Sounds
+	                </div>
 	            </div>
             </div>
-			<div class="palm-row">
+			
+		</div>
+	</div>
+
+	<div class="palm-group">
+		<div class="palm-group-title">				
+			<span x-mojo-loc=''>Ring & Alert Tones</span>
+		</div>
+
+		<div class="palm-list">
+			 <div id='currentringtonerow' class="palm-row first" x-mojo-tap-highlight="momentary">
 				<div class="palm-row-wrapper">
-					<div class="title" x-mojo-loc=''>Ringtone Volume</div>
-					<div x-mojo-element="Slider" id='ringvolume' class="palm-slider"></div>
+            	<div id='currentringtone' class="label right">ringtone</div>					
+					<div class="title left" x-mojo-loc=''>Ringtone</div>
 	            </div>
             </div>
 			 <div class="palm-row">
 				<div class="palm-row-wrapper">
-	            	<div id="system_ui_sounds" x-mojo-element="ToggleButton"></div>
-	                <div class="label left" x-mojo-loc="">
-	                    System Sounds
-	                </div>
-	            </div>
+					<div id='alertringtone' x-mojo-element="ListSelector" class="right"></div>
             </div>
+         </div>
+         <div class="palm-row last">
+				<div class="palm-row-wrapper">
+					<div id='notifyringtone' x-mojo-element="ListSelector" class="right"></div>
+            </div>
+         </div>
+		</div>
+	</div>	
+
+	<div class="palm-group">
+		<div class="palm-group-title">				
+			<span x-mojo-loc=''>System Notifications</span>
+		</div>
+
+		<div class="palm-list">
+			<div class="palm-row first">
+				<div class="palm-row-wrapper">
+					<div id='battery_notify' x-mojo-element="ListSelector" class="right"></div>
+				</div>
+         </div>
 			<div class="palm-row last">
 				<div class="palm-row-wrapper">
-					<div class="title" x-mojo-loc=''>Volume</div>
+					<div id='charger_notify' x-mojo-element="ListSelector" class="right"></div>
+				</div>
+         </div>
+		</div>
+	</div>
+
+	<div class="palm-group">
+		<div class="palm-group-title">				
+			<span x-mojo-loc=''>Sound Volume Levels</span>
+		</div>
+
+		<div class="palm-list">
+			<div class="palm-row first">
+				<div class="palm-row-wrapper" style="max-height:100px;">
+					<div id="ringvolumeSelector" x-mojo-element="ListSelector" class="right" style="max-height:40px;"></div>
+					<div x-mojo-element="Slider" id='ringvolume' class="palm-slider"></div>
+	            </div>
+            </div>
+			 <div class="palm-row">
+				<div class="palm-row-wrapper" style="max-height:100px;">
+					<div id="systemvolumeSelector" x-mojo-element="ListSelector" class="right" style="max-height:40px;"></div>
 					<div x-mojo-element="Slider" id='systemvolume' class="palm-slider"></div>
 	            </div>
             </div>
+			<div class="palm-row last">
+				<div class="palm-row-wrapper" style="max-height:100px;">
+					<div id="mediavolumeSelector" x-mojo-element="ListSelector" class="right" style="max-height:40px;"></div>
+					<div x-mojo-element="Slider" id='mediavolume' class="palm-slider"></div>
+            </div>
+         </div>
 		</div>
 	</div>	
 </div>
--- .orig/usr/palm/applications/com.palm.app.wifi/app/views/networklist/networklist-scene.html
+++ /usr/palm/applications/com.palm.app.wifi/app/views/networklist/networklist-scene.html
@@ -10,12 +10,12 @@
 	        </div>
 	    </div>
     </div>
-    <div id="wifiNetworkInfoList" x-mojo-element="List" style="display:none;">
-    </div>
     <div id="wifiInfoText" style="display:none;" class="palm-info-text" x-mojo-loc=''>
 			Your phone automatically connects to known networks.
     </div>
     <div id="wifiOffText" style="display:none;" class="palm-text-wrapper">
 			<div class="palm-body-text" x-mojo-loc=''>Wi-Fi is turned off.</div>
     </div>
+    <div id="wifiNetworkInfoList" x-mojo-element="List" style="display:none;">
+    </div>
 </div>
--- .orig/usr/palm/applications/com.palm.app.location/resources/es/views/main/main-scene.html
+++ /usr/palm/applications/com.palm.app.location/resources/es/views/main/main-scene.html
@@ -4,6 +4,13 @@
 		<div class="header-text">
 			<span>Servicios de ubicación</span>
 		</div>
+		<div class="header-sliding-toggle">
+	    	<div x-mojo-element="ToggleButton" id="gpsonoff" class="header-toggle-button"></div>                               
+		</div>                                                                                     
+	</div>
+	
+	<div id="turnedofftext" class="palm-body-text" style="display:none;">
+		<div class="section" style="text-align:justify;" x-mojo-loc=''>You have turned off all location data sources. No location data will be provided to applications that request your location.</div>
 	</div>
 	<div id='siteLocatePrefs' class="palm-group">
 		<div class="palm-group-title">
--- .orig/usr/palm/applications/com.palm.app.phoneprefs/resources/es/appinfo.json
+++ /usr/palm/applications/com.palm.app.phoneprefs/resources/es/appinfo.json
@@ -3,7 +3,7 @@
 	"id": "com.palm.app.phoneprefs",
 	"main": "../../index.html",
 	"splashicon": "../../icon-256x256.png",
-	"title": "Preferencias del teléfono",
+	"title": "Network Services",
 	"type": "web",
 	"vendor": "Palm",
 	"version": "1.0.0",
--- .orig/usr/palm/applications/com.palm.app.phoneprefs/resources/es/views/preflist/preflist-scene.html
+++ /usr/palm/applications/com.palm.app.phoneprefs/resources/es/views/preflist/preflist-scene.html
@@ -1,13 +1,19 @@
 
-	  <div class="palm-page-header multi-line">
+	  <div class="palm-page-header">
 		<div class="palm-page-header-wrapper">
 	   	 <div class="icon phone"></div>
    	      <div class="title">
-		 	 Preferencias del teléfono      
+		 	 Network Services
           </div>
+	    	<div class="header-sliding-toggle">
+		    	<div x-mojo-element="ToggleButton" id="phoneradioonoff" class="header-toggle-button"></div>                               
+			</div> 
     	</div>
 	  </div>
 	
+	<div id="turnedofftext" class="palm-body-text" style="display:none;">
+		<div class="section" style="padding-top:10px;text-align:justify;" x-mojo-loc=''>You have turned off network services. Phone radio is also turned off so all phone activity is disabled.</div>
+	</div>
 	
   <div id='phonepref' style='display:none'>
 
@@ -26,7 +32,7 @@
     	</div>
 	</div>
 
-    <div class="palm-group">
+<!--    <div class="palm-group">
         <div class="palm-group-title">
             Al escribir con teclado
         </div>
@@ -41,7 +47,7 @@
             </div>
         </div>
     </div>
-
+-->
     <div class="palm-group" id="xxcallforwarding">
         <div class="palm-group-title">
             TRANSFERENCIA DE LLAMADAS
@@ -214,11 +220,7 @@
 		<div class="palm-list">
 			<div class="palm-row">
 				<div class="palm-row-wrapper">
-					<div id="dtmfSelector" class='spinner' x-mojo-element="ListSelector">
-                	</div>
-            		<div class="left label">
-	                   	 Tonos DTMF
-	               	</div>
+					<div id="dtmfSelector" x-mojo-element="ListSelector" class="right"></div>
 				</div>
 			</div>
 		</div>
@@ -419,7 +421,6 @@
 		</div>
 	</div> 
 	<div id="voicemailclear" x-mojo-element="Button" ></div>  
-</div>
 
 
 <div id="phoneOffText" class="info-text" style='display:none'>
@@ -431,4 +432,5 @@
 		<center><div x-mojo-element="Spinner" id="initial-query-spinner"></div></center>
 	</div>	
 </div>
+</div>
 
--- .orig/usr/palm/applications/com.palm.app.phoneprefs/resources/es/strings.json
+++ /usr/palm/applications/com.palm.app.phoneprefs/resources/es/strings.json
@@ -392,5 +392,6 @@
 	"You need a network connection to your wireless service provider to see some settings.": "Necesitas una conexión de red a tu proveedor de servicio inalámbrico para ver algunas configuraciones.",
 	"Your settings could not be validated. If you believe these settings are correct, try again in a few minutes. For assistance, call your service provider.": "No se pudo validar tu configuración. Si piensas que esa configuración es correcta, vuelve a intentar en unos minutos.  Para obtener ayuda, llama a tu proveedor de servicios.",
 	"Zero": "Cero",
-	"Zimbabwe": "Zimbabue"
+	"Zimbabwe": "Zimbabue",
+	"DTMF Tones": ""
 }
--- .orig/usr/palm/applications/com.palm.app.screenlock/resources/es/views/securityconfig/securityconfig-scene.html
+++ /usr/palm/applications/com.palm.app.screenlock/resources/es/views/securityconfig/securityconfig-scene.html
@@ -13,8 +13,8 @@
 		<div class="palm-list">
 
 			<div class="palm-row first">
-				<div class="palm-row-wrapper">
-					<div class="title">Brillo</div>
+				<div class="palm-row-wrapper" style="max-height:100px;">
+					<div id="screenBrightness" x-mojo-element="ListSelector" class="right" style="max-height:40px;"></div>
 					<div x-mojo-element="Slider" id='brightness' class="palm-slider"></div>
 				</div>
 			</div>
@@ -42,6 +42,26 @@
 
 	 <div class="palm-group">
 		<div class="palm-group-title">
+			<span x-mojo-loc=''>Touchscreen</span>
+		</div>
+		<div class="palm-list">
+			<div class="palm-row first">
+				<div class="palm-row-wrapper">
+					<div x-mojo-element="ToggleButton" id="hapticFeedback"></div>
+					<div class="title capitalize" x-mojo-loc=''>Haptic Feedback</div>
+				</div>
+			</div>
+			<div class="palm-row last">
+				<div class="palm-row-wrapper">
+					<div x-mojo-element="ToggleButton" id="switchApps"></div>
+					<div class="title capitalize" x-mojo-loc=''>Advanced Gestures</div>
+				</div>
+			</div>
+		</div>
+	</div>
+	
+<!--	 <div class="palm-group">
+		<div class="palm-group-title">
 			<span>Trazos avanzados</span>
 		</div>
 		<div class="palm-list">
@@ -53,6 +73,7 @@
 			</div>
 		</div>
 	</div>
+-->
 	<div class="palm-info-text" id="switchAppsInfo"></div>
 
 	<div class="palm-group">
@@ -63,7 +84,7 @@
 			<div id='secureFirstrow' class="palm-row">
 				<div class="palm-row-wrapper" x-mojo-focus-highlight="true">
 					<div class="">
-						<img id='lockImg' src="images/lock.png" style='display:none;' class='label label-lock-image'></img>    
+<!--						<img id='lockImg' src="images/lock.png" style='display:none;' class='label label-lock-image'></img>    -->
 						<div id="secureUnlock" x-mojo-element="ListSelector"></div>
 					 </div>
 			    </div>
@@ -71,6 +92,7 @@
 			<div id='securelastrow' class="palm-row" x-mojo-tap-highlight="momentary">
 				<div class="palm-row-wrapper textfield-group">
 					<div class="title">
+						<img id='lockImg' src="images/lock.png" style='display:none;padding-top:13px;' class='label label-lock-image'></img>    
 						<div id="changepassword"></div>
 					 </div>
 			    </div>
@@ -85,44 +107,44 @@
 
 	<div class="palm-group">
 		<div class="palm-group-title">
-			<span>Avisos</span>
+			<span x-mojo-loc=''>Lock Screen</span>
 		</div>
 		<div class="palm-list">
 			<div class="palm-row first">
 				<div class="palm-row-wrapper">
 					<div x-mojo-element="ToggleButton" id="showAlerts"></div>
-					<div class="title capitalize">Mostrar cuando está bloqueado</div>
+					<div class="title capitalize" x-mojo-loc=''>Notifications</div>
 				</div>
 			</div>
 			<div class="palm-row last">
 				<div class="palm-row-wrapper">
-					<div x-mojo-element="ToggleButton" id="blinkAlerts"></div>
-					<div class="title capitalize">Notificaciones con iluminación intermitente</div>
+					<div x-mojo-element="ToggleButton" id="voiceDial"></div>
+					<div class="title capitalize" x-mojo-loc=''>Voice Dialing</div>
 				</div>
 			</div>
 		</div>
 	</div>
 
 	<div class="palm-info-text single">
-		El área de trazos se ilumina intermitentemente cuando llegan nuevas notificaciones.
+		Access voice dialing even when your phone is locked.
 	</div>
 	
 	<div class="palm-group">
 		<div class="palm-group-title">
-			<span>Marcado por voz</span>
+			<span x-mojo-loc=''>Notifications</span>
 		</div>
 		<div class="palm-list">
 			<div class="palm-row single">
 				<div class="palm-row-wrapper">
-					<div x-mojo-element="ToggleButton" id="voiceDial"></div>
-					<div class="title capitalize">Activar cuando esté bloqueado</div>
+					<div x-mojo-element="ToggleButton" id="blinkAlerts"></div>
+					<div class="title capitalize" x-mojo-loc=''>Blink notifications</div>
 				</div>
 			</div>
 		</div>
 	</div>
 
 	<div class="palm-info-text single">
-		Usar el marcado por voz aunque tu teléfono esté bloqueado.
+		The gesture area blinks when new notifications arrive.
 	</div>
 
 </div>
--- .orig/usr/palm/applications/com.palm.app.screenlock/resources/es/strings.json
+++ /usr/palm/applications/com.palm.app.screenlock/resources/es/strings.json
@@ -1,4 +1,6 @@
 {
+	"Never": "",
+	"15 seconds": "",
 	"##{num} tries remaining.": "##{num} intentos restantes.",
 	"#{policyInactivityTimer} minutes": "#{policyInactivityTimer} minutos",
 	"1 minute": "1 minuto",
--- .orig/usr/palm/applications/com.palm.app.soundsandalerts/resources/es/appinfo.json
+++ /usr/palm/applications/com.palm.app.soundsandalerts/resources/es/appinfo.json
@@ -12,6 +12,6 @@
 	],
 	"main": "../../index.html",
 	"splashicon": "../../icon-256x256.png",
-	"title": "Sonidos y tonos",
+	"title": "Sound Settings",
 	"type": "web"
 }
--- .orig/usr/palm/applications/com.palm.app.soundsandalerts/resources/es/views/soundsalertsconfig/soundsalertsconfig-scene.html
+++ /usr/palm/applications/com.palm.app.soundsandalerts/resources/es/views/soundsalertsconfig/soundsalertsconfig-scene.html
@@ -2,7 +2,7 @@
 	<div class="palm-page-header">
 	  <div class="header-icon soundsandalerts"></div>
 		<div class="header-text">
-			<span>Sonidos y tonos</span>
+			<span x-mojo-loc=''>Sound Settings</span>
 		</div>
 	</div>
 	
@@ -32,32 +32,86 @@
 					<div id='vibrate_on' x-mojo-element="ListSelector" class="right"></div>
 				</div>
             </div>
-			 <div id='currentringtonerow' class="palm-row" x-mojo-tap-highlight="momentary">
+			 <div class="palm-row last">
 				<div class="palm-row-wrapper">
-					<div class="label left">Tono</div>
-	            	<div id='currentringtone' class="title right"></div>					
+	            	<div id="system_ui_sounds" x-mojo-element="ToggleButton"></div>
+	                <div class="title left" x-mojo-loc="">
+	                    System Sounds
+	                </div>
 	            </div>
             </div>
-			<div class="palm-row">
+			
+		</div>
+	</div>
+
+	<div class="palm-group">
+		<div class="palm-group-title">				
+			<span x-mojo-loc=''>Ring & Alert Tones</span>
+		</div>
+
+		<div class="palm-list">
+			 <div id='currentringtonerow' class="palm-row first" x-mojo-tap-highlight="momentary">
 				<div class="palm-row-wrapper">
-					<div class="title">Volumen de tono</div>
-					<div x-mojo-element="Slider" id='ringvolume' class="palm-slider"></div>
+            	<div id='currentringtone' class="label right">ringtone</div>					
+					<div class="title left" x-mojo-loc=''>Ringtone</div>
 	            </div>
             </div>
 			 <div class="palm-row">
 				<div class="palm-row-wrapper">
-	            	<div id="system_ui_sounds" x-mojo-element="ToggleButton"></div>
-	                <div class="label left">
-	                    Sonidos del sistema
-	                </div>
-	            </div>
+					<div id='alertringtone' x-mojo-element="ListSelector" class="right"></div>
+            </div>
+         </div>
+         <div class="palm-row last">
+				<div class="palm-row-wrapper">
+					<div id='notifyringtone' x-mojo-element="ListSelector" class="right"></div>
             </div>
+         </div>
+		</div>
+	</div>	
+
+	<div class="palm-group">
+		<div class="palm-group-title">				
+			<span x-mojo-loc=''>System Notifications</span>
+		</div>
+
+		<div class="palm-list">
+			<div class="palm-row first">
+				<div class="palm-row-wrapper">
+					<div id='battery_notify' x-mojo-element="ListSelector" class="right"></div>
+				</div>
+         </div>
 			<div class="palm-row last">
 				<div class="palm-row-wrapper">
-					<div class="title">Volumen</div>
+					<div id='charger_notify' x-mojo-element="ListSelector" class="right"></div>
+				</div>
+         </div>
+		</div>
+	</div>
+
+	<div class="palm-group">
+		<div class="palm-group-title">				
+			<span x-mojo-loc=''>Sound Volume Levels</span>
+		</div>
+
+		<div class="palm-list">
+			<div class="palm-row first">
+				<div class="palm-row-wrapper" style="max-height:100px;">
+					<div id="ringvolumeSelector" x-mojo-element="ListSelector" class="right" style="max-height:40px;"></div>
+					<div x-mojo-element="Slider" id='ringvolume' class="palm-slider"></div>
+	            </div>
+            </div>
+			 <div class="palm-row">
+				<div class="palm-row-wrapper" style="max-height:100px;">
+					<div id="systemvolumeSelector" x-mojo-element="ListSelector" class="right" style="max-height:40px;"></div>
 					<div x-mojo-element="Slider" id='systemvolume' class="palm-slider"></div>
 	            </div>
             </div>
+			<div class="palm-row last">
+				<div class="palm-row-wrapper" style="max-height:100px;">
+					<div id="mediavolumeSelector" x-mojo-element="ListSelector" class="right" style="max-height:40px;"></div>
+					<div x-mojo-element="Slider" id='mediavolume' class="palm-slider"></div>
+            </div>
+         </div>
 		</div>
 	</div>	
 </div>
--- .orig/usr/palm/applications/com.palm.app.soundsandalerts/resources/es/strings.json
+++ /usr/palm/applications/com.palm.app.soundsandalerts/resources/es/strings.json
@@ -15,5 +15,17 @@
 	"Sound & Vibrate": "Sonido y vibrar",
 	"Sounds & Ringtones": "Sonidos y tonos",
 	"Vibrate": "Vibrar",
-	"Volume": "Volumen"
+	"Volume": "Volumen",
+	"Default": "",
+	"Select": "",
+	"System Sound": "",
+	"Ringtone": "",
+	"Maximum": "",
+	"Minimum": "",
+	"System": "",
+	"Media": "",
+	"Alert": "",
+	"Notify": "",
+	"Low Battery": "",
+	"Charger": ""
 }
--- .orig/usr/palm/applications/com.palm.app.wifi/resources/es/views/networklist/networklist-scene.html
+++ /usr/palm/applications/com.palm.app.wifi/resources/es/views/networklist/networklist-scene.html
@@ -10,12 +10,12 @@
 	        </div>
 	    </div>
     </div>
-    <div id="wifiNetworkInfoList" x-mojo-element="List" style="display:none;">
-    </div>
     <div id="wifiInfoText" style="display:none;" class="palm-info-text">
 			El teléfono se conecta automáticamente a las redes conocidas.
     </div>
     <div id="wifiOffText" style="display:none;" class="palm-text-wrapper">
 			<div class="palm-body-text">Wi-Fi está desactivado.</div>
     </div>
+    <div id="wifiNetworkInfoList" x-mojo-element="List" style="display:none;">
+    </div>
 </div>
