diff --git a/usr/lib/luna/system/luna-applauncher/app/controllers/app-info-assistant.js b/usr/lib/luna/system/luna-applauncher/app/controllers/app-info-assistant.js
index 6b3e351..e385497 100644
--- a/usr/lib/luna/system/luna-applauncher/app/controllers/app-info-assistant.js
+++ b/usr/lib/luna/system/luna-applauncher/app/controllers/app-info-assistant.js
@@ -1,8 +1,9 @@
 /* Copyright 2009 Palm, Inc.  All rights reserved. */
 
 var AppInfoAssistant = Class.create({
-	initialize: function(appInfo, sceneController, closeCallback) {
+	initialize: function(appInfo, parent, sceneController, closeCallback) {
 		this.sceneController = sceneController;
+        this.parent = parent;
 		this.appInfo = appInfo;
 		this.isDynamic = this.isDynamicLaunchPoint(this.appInfo);
 		this.closeCallback = closeCallback;
@@ -43,6 +44,29 @@ var AppInfoAssistant = Class.create({
 		if (!this.isDynamic) {
 			this.appSizeRequest = ApplicationService.getAppSize(this.appInfo.id, this.onGetAppSize.bind(this));
 		}
+
+        // Find the page for the app being inspected.
+        var app_page = this.parent.pagesModel
+            .findApplication(this.appInfo.launchPointId);
+
+        // Build the list selector for switching pages.
+        this.sceneController.setupWidget(
+            'page_name', 
+            {
+                label: $L('Page'),
+                choices: this.parent.pageDivs.map(function (alias, idx) {
+                    return { 
+                        value: idx, 
+                        label: this.parent.getPageName(idx)
+                    };
+                }, this)
+            }, 
+            this.page_name_model = { 
+                value: app_page.page, disabled: false 
+            }
+        );
+        this.sceneController.listen('page_name', Mojo.Event.propertyChange,
+            this.onPageNameChanged.bindAsEventListener(this));
 	},
 	
 	insertVersion: function() {
@@ -157,6 +181,10 @@ var AppInfoAssistant = Class.create({
 			this.sceneController.get('app-size').update(sizeInKBytes + $L('K'));
 		}
 	},
+
+    onPageNameChanged: function (event) {
+        this.parent.moveAppToPage(this.appInfo.launchPointId, event.value);
+    },
 	
 	cleanup: function() {
 		if (this.appSizeRequest) {
diff --git a/usr/lib/luna/system/luna-applauncher/app/controllers/global-search-assistant.js b/usr/lib/luna/system/luna-applauncher/app/controllers/global-search-assistant.js
index b9db2c2..661655d 100644
--- a/usr/lib/luna/system/luna-applauncher/app/controllers/global-search-assistant.js
+++ b/usr/lib/luna/system/luna-applauncher/app/controllers/global-search-assistant.js
@@ -265,6 +265,10 @@ GlobalSearchAssistant = Class.create({
 	},
 	
 	onKeyDown: function(event) {
+        if (!this.searchEnabled) {
+            // HACK: The event.stop() below disables text entry in dialogs
+            return;
+        }
 		
 		this.searchField.mojo.focus();
 
@@ -281,6 +285,10 @@ GlobalSearchAssistant = Class.create({
 	},
 	
 	onKeyUp: function(event) {
+        if (!this.searchEnabled) {
+            // HACK: The event.stop() below disables text entry in dialogs
+            return;
+        }
 		
 		// block key events from global search
 		if (!this.searchEnabled) {
@@ -298,6 +306,10 @@ GlobalSearchAssistant = Class.create({
 	},
 	
 	onKeyPress: function(event) {
+        if (!this.searchEnabled) {
+            // HACK: The event.stop() below disables text entry in dialogs
+            return;
+        }
 		
 		if(this.searchPressHoldTerm && this.searchPressHoldTerm.length > 0 && event.keyCode != this.searchPressHoldTerm.charCodeAt(0)) {
         	// first key no longer being held
diff --git a/usr/lib/luna/system/luna-applauncher/app/controllers/launcher-assistant.js b/usr/lib/luna/system/luna-applauncher/app/controllers/launcher-assistant.js
index 9057138..33589a2 100644
--- a/usr/lib/luna/system/luna-applauncher/app/controllers/launcher-assistant.js
+++ b/usr/lib/luna/system/luna-applauncher/app/controllers/launcher-assistant.js
@@ -59,6 +59,14 @@ var LauncherAssistant = Class.create({
 		
 		this.dragStartHandler = this.onDragStart.bindAsEventListener(this);
 		this.launchApp = this.launchApp.bind(this);
+
+        this.page_names_cookie = new Mojo.Model.Cookie('page_names');
+        this.page_names = this.page_names_cookie.get() || [];
+
+        // HACK: Doing a splice here rather than defining this item above so
+        // that the patch works with 'Enable Add / Delete' patch.
+        this.appMenuModel.items.splice(1, 0, 
+			{ label: $L('Rename page'), command: 'renamepage' });
 	},
 	
 	setup: function() {
@@ -74,6 +82,9 @@ var LauncherAssistant = Class.create({
 			}
 		);
 		
+        Mojo.listen($('page-category'), Mojo.Event.tap, 
+            this.handlePageNameTap.bindAsEventListener(this));
+
 		this.globalSearchAssistant = new GlobalSearchAssistant(this.controller, this);
 		
 		// HACK: The launcher starts out launched and deactive.
@@ -118,6 +129,9 @@ var LauncherAssistant = Class.create({
 				case 'listapps':
 					ApplicationService.launch(this.deviceInfo.id, this.deviceInfo.params);
 					break;
+                case 'renamepage':
+                    this.handleRenamePage(event);
+                    break;
 				case 'defaultapps':
 					ApplicationService.launch(this.deviceInfo.id, this.deviceInfo.defaultAppParams);
 					break;
@@ -236,6 +250,12 @@ var LauncherAssistant = Class.create({
 		}
 		
 		this.pageDivs = $$('.launcher_page');
+
+        if (createPage) {
+            this.page_names.splice(newPageIndex, 0, []);
+            this.updatePageHeader();
+            this.savePageNames();
+        }
 		
 		// extend the horizontal scrollers internal width
 		pagesContainer.style.width = (this.pageDivs.length*this.kPageWidth)+'px';
@@ -297,6 +317,11 @@ var LauncherAssistant = Class.create({
 		
 		// remove the pages indicator
 		this.deletePageIndicator();
+
+        // Splice out the name for this page.
+        this.page_names.splice(pageIndex, 1);
+        this.updatePageHeader();
+        this.savePageNames();
 		
 		// snap to a valid location
 		if (pageIndex >= this.pageDivs.length) {
@@ -582,6 +607,7 @@ var LauncherAssistant = Class.create({
 		this.globalSearchAssistant.enable(false);
 		
 		var appInfoAssistant = new AppInfoAssistant(appInfo,
+													this,
 													this.controller,
 													function() {
 														this.appDialog = undefined;
@@ -655,6 +681,9 @@ var LauncherAssistant = Class.create({
 	
 	/* Updates the positions of all page indicators. */
 	updatePageIndicators: function() {
+
+        // Ensure that the view menu tabs reflect the active page. (LMO)
+        this.updatePageHeader();
 		
 		if (this.indicators.length <= 0) {
 			return;
@@ -763,6 +792,139 @@ var LauncherAssistant = Class.create({
 	onLaunchCompleted: function(response) {
 		
 		this.launchRequest = undefined;
-	}
-	
-});
+    },
+
+    /**
+     * Handle tap and meta-tap on the launcher page name header.
+     */
+    handlePageNameTap: function (event) {
+        if (event.up && ( event.up.altKey || event.up.metaKey )) {
+            // Handle alt-tap or meta-tap on page header to rename page.
+            this.handleRenamePage(event);
+        } else {
+            // Handle tap on page header to invoke page menu.
+            
+            // Hide the quick launch panel so there's room for the full menu.
+            SystemManagerService.showQuickLaunch(false);
+
+            // Invoke the page menu.
+            this.controller.popupSubmenu({
+                placeNear: event.target,
+                // Construct the menu based on the names for each page, placing
+                // the checkmark appropriately.
+                items: this.pageDivs.map(function (alias, idx) {
+                    return { 
+                        command: idx, 
+                        label: this.getPageName(idx), 
+                        chosen: (idx == this.activePageIndex) 
+                    };
+                }, this),
+                onChoose: function (command) {
+                    // Reveal the quick launch bar and jump to the chosen page.
+                    SystemManagerService.showQuickLaunch(true);
+                    this.gotoPage(command);
+                }.bind(this)
+            });
+
+       }
+    },
+
+    /**
+     * Handle request to rename page
+     */
+    handleRenamePage: function (event) {
+        // Hide the quick launch panel and disable the global search so
+        // that the dialog is fully visible and usable.
+        SystemManagerService.showQuickLaunch(false);
+        this.globalSearchAssistant.enable(false);
+
+        // Invoke the page rename dialog.
+        this.renamePageDialog = this.controller.showDialog({
+            template: 'launcher/dialogs/rename-page',
+            assistant: new RenamePageAssistant(
+                this, function () {
+                    delete this.renamePageDialog;
+                    SystemManagerService.showQuickLaunch(true);
+                    this.globalSearchAssistant.enable(true);
+                }.bind(this)
+            )
+        });
+    },
+
+    /**
+     * Get the name for a numbered page.
+     *
+     * @param {integer} idx Page number
+     */
+    getPageName: function (idx) {
+        if (Object.isUndefined(idx)) { idx = this.activePageIndex; }
+        return this.page_names[idx] || ('#'+(idx+1));
+    },
+
+    /**
+     * Set the name for a numbered page.
+     *
+     * @param {integer} idx  Page number
+     * @param {string}  name Page name
+     */
+    setPageName: function (idx, name) {
+        this.page_names[idx] = name;
+        this.savePageNames();
+    },
+
+    /**
+     * Save the current state of page names
+     */
+    savePageNames: function () {
+        this.page_names_cookie.put(this.page_names);
+    },
+
+    /**
+     * Update the view menu tabs to reflect a given page index. (LMO)
+     *
+     * @param {int} idx Page index.
+     */
+    updatePageHeader: function (idx) {
+        if (Object.isUndefined(idx)) { idx = this.activePageIndex; }
+        this.controller.get('page-category').update(this.getPageName(idx));
+    },
+
+    /**
+     * Switch directly to a page. (LMO)
+     *
+     * @param {int} idx Page index.
+     */
+    gotoPage: function (idx) {
+        var idx = parseInt(idx);
+        if (Object.isUndefined(this.pageDivs[idx])) {
+            // Bail if attempting to move to a nonexistent page.
+            return false;
+        }
+        // Move to the page, update the on-scene indicators.
+        $('launcher_root').mojo.setSnapIndex(idx, true);
+        this.activePageIndex = idx;
+        this.updatePageIndicators();
+        return true;
+    },
+
+    /**
+     * Move an app from its existing page to the first position of a new page.
+     * Launcher is also switched to that destination page to show the move.
+     *
+     * @param {string}  launchPointId  Launch point ID in the apps list
+     * @param {integer} page_idx       Destination page number
+     */
+    moveAppToPage: function (launchPointId, page_idx) {
+        var from = this.pagesModel.findApplication(launchPointId),
+            to = { page: parseInt(page_idx), position: 0 };
+        // Move the page in the launcher layout
+        this.moveApp(launchPointId, to);
+        // Move the page in the page model
+        this.pagesModel.moveApplication(from, to);
+        // Save the page model changes
+        this.pagesModel.save();
+        // Switch to the page to show the change
+        this.gotoPage(page_idx);
+    }
+ 	
+ });
diff --git a/usr/lib/luna/system/luna-applauncher/app/controllers/rename-page-assistant.js b/usr/lib/luna/system/luna-applauncher/app/controllers/rename-page-assistant.js
new file mode 100644
index 0000000..5777194
--- /dev/null
+++ b/usr/lib/luna/system/luna-applauncher/app/controllers/rename-page-assistant.js
@@ -0,0 +1,76 @@
+/**
+ * Assistant managing the page rename dialog.
+ */
+RenamePageAssistant = Class.create({
+
+    initialize: function (parent, closeCallback) {
+        this.parent = parent;
+        this.closeCallback = closeCallback;
+    },
+
+    setup: function (widget) {
+        this.widget = widget;
+
+        var idx = this.parent.activePageIndex,
+        page_name = this.parent.getPageName(idx);
+
+        this.parent.controller.setupWidget(
+            'page_rename_field', 
+            {
+                textReplacement: false,
+                focus: true,
+                hintText: 'enter page name...',
+                changeOnKeyPress: true
+            }, 
+            this.page_name_model = {
+                value: page_name,
+                disabled: false
+            }
+        );
+        this.parent.controller.listen(
+            'page_rename_field', 
+            Mojo.Event.propertyChange, 
+            this.handleChange.bindAsEventListener(this)
+        );
+
+        setTimeout(function () {
+            // HACK: Auto-focus the rename field after setup is done.
+            this.parent.controller.get('page_rename_field').mojo.focus();
+        }.bind(this), 1);
+
+        this.parent.controller.setupWidget('rename_button', {}, 
+        { buttonLabel: $L('Rename') });
+        this.parent.controller.listen('rename_button', Mojo.Event.tap, 
+        this.handleRename.bindAsEventListener(this));
+
+        this.parent.controller.setupWidget('cancel_button', {}, 
+        { buttonLabel: $L('Cancel') });
+        this.parent.controller.listen('cancel_button', Mojo.Event.tap, 
+        this.handleCancel.bindAsEventListener(this));
+    },
+
+    handleChange: function (event) {
+        if (event && Mojo.Char.isEnterKey(event.originalEvent.keyCode)) {
+            this.handleRename(event);
+        }
+    },
+
+    handleRename: function (event) {
+        this.parent.setPageName(
+            this.parent.activePageIndex,
+            this.parent.controller.get('page_rename_field').mojo.getValue()
+        );
+        this.parent.updatePageHeader();
+        this.widget.mojo.close();
+    },
+
+    handleCancel: function (event) {
+        this.widget.mojo.close();
+    },
+
+    cleanup: function() {
+        this.closeCallback();
+    },
+
+    EOF:null
+});
diff --git a/usr/lib/luna/system/luna-applauncher/app/views/launcher/dialogs/app-info.html b/usr/lib/luna/system/luna-applauncher/app/views/launcher/dialogs/app-info.html
index bdf3824..bd0a90a 100644
--- a/usr/lib/luna/system/luna-applauncher/app/views/launcher/dialogs/app-info.html
+++ b/usr/lib/luna/system/luna-applauncher/app/views/launcher/dialogs/app-info.html
@@ -8,6 +8,16 @@
 </div>
 <div class="palm-dialog-separator"></div>
 <div class="palm-dialog-buttons">
+    <div class="palm-group unlabeled">
+        <div class="palm-list">
+            <div class="palm-row single">
+                <div class="palm-row-wrapper">
+                    <div x-mojo-element="ListSelector" 
+                        id="page_name" name="page_name"></div>
+                </div>
+            </div>
+        </div>
+    </div>
 	<div id='delete-btn' x-mojo-element="Button"></div>	
 	<div id='done-btn' x-mojo-element="Button"></div>
 </div>
diff --git a/usr/lib/luna/system/luna-applauncher/app/views/launcher/dialogs/rename-page.html b/usr/lib/luna/system/luna-applauncher/app/views/launcher/dialogs/rename-page.html
new file mode 100644
index 0000000..b26286a
--- /dev/null
+++ b/usr/lib/luna/system/luna-applauncher/app/views/launcher/dialogs/rename-page.html
@@ -0,0 +1,24 @@
+<div id="palm-dialog-content" class="palm-dialog-content">
+    <div class="palm-dialog-title">
+        Rename Page
+    </div>
+    <div class="palm-dialog-separator"></div>
+    <div class="textfield-group" x-mojo-focus-highlight="true">
+        <div class="title">
+            <div class="label">Name</div>
+            <div id="page_rename_field" name="page_rename_field" 
+                x-mojo-element="TextField"></div>
+        </div>	
+    </div>
+</div>
+
+<div class="palm-dialog-buttons">
+    <div id="rename_button" class="palm-button affirmative" 
+        x-mojo-touch-feedback="immediatePersistent">
+        <div class="palm-button-wrapper" x-mojo-loc="">Rename</div>
+    </div>
+    <div id="cancel_button" class="palm-button dismiss" 
+        x-mojo-touch-feedback="immediatePersistent">
+        <div class="palm-button-wrapper" x-mojo-loc="">Cancel</div>
+    </div>
+</div>
diff --git a/usr/lib/luna/system/luna-applauncher/app/views/launcher/launcher-scene.html b/usr/lib/luna/system/luna-applauncher/app/views/launcher/launcher-scene.html
index d34a6a5..61c2788 100644
--- a/usr/lib/luna/system/luna-applauncher/app/views/launcher/launcher-scene.html
+++ b/usr/lib/luna/system/luna-applauncher/app/views/launcher/launcher-scene.html
@@ -18,6 +18,7 @@
 	</div>
 	
 	<div id="launcher-main">
+        <div id="page-category" class="palm-header center" x-mojo-touch-feedback="immediate">...</div>
 		<div id="launcher_root" x-mojo-element="Scroller">
 			<div id="pages_container"></div>
 		</div>
diff --git a/usr/lib/luna/system/luna-applauncher/sources.json b/usr/lib/luna/system/luna-applauncher/sources.json
index 3b29d8d..def2437 100644
--- a/usr/lib/luna/system/luna-applauncher/sources.json
+++ b/usr/lib/luna/system/luna-applauncher/sources.json
@@ -31,6 +31,10 @@
 	{
 		"source": "app\/models\/ApplicationService.js"
 	},
+
+    {
+        "source": "app\/controllers\/rename-page-assistant.js"
+    },
 	
 	{
 		"source": "app\/models\/SystemManagerService.js"
diff --git a/usr/lib/luna/system/luna-applauncher/stylesheets/launcher.css b/usr/lib/luna/system/luna-applauncher/stylesheets/launcher.css
index 45b6546..bbfc6a9 100644
--- a/usr/lib/luna/system/luna-applauncher/stylesheets/launcher.css
+++ b/usr/lib/luna/system/luna-applauncher/stylesheets/launcher.css
@@ -6,6 +6,10 @@ body.palm-default
 	background-image:url(../images/scrim.png);
 }
 
+#page-category {
+	opacity: 0.5;
+}
+
 .root {
 	position:relative;
 	overflow:hidden;
@@ -59,7 +63,7 @@ body.palm-default
 	width: 100%;
 	z-index: 29;
 	height: 24px;
-	top: 1px;
+	top: 45px; /* Insert some space for the page selector (LMO) */
 	background: url(../images/fade-arrow-up.png) center center no-repeat;
 	-webkit-palm-mouse-target: ignore;
 }
@@ -106,7 +110,7 @@ body.palm-default
 }
 
 .page_scroller_container {
-	margin-top: 10px;
+	margin-top: 55px; /* Insert some space for the page selector (LMO) */
 	margin-bottom: -20px;
 }
 
