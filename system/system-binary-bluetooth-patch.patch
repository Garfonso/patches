diff --git a/usr/palm/services/com.palm.service.bluetooth.spp/BluetoothSppAssistant.js b/usr/palm/services/com.palm.service.bluetooth.spp/BluetoothSppAssistant.js
index a019a57..200ffcb 100644
--- a/usr/palm/services/com.palm.service.bluetooth.spp/BluetoothSppAssistant.js
+++ b/usr/palm/services/com.palm.service.bluetooth.spp/BluetoothSppAssistant.js
@@ -78,10 +78,10 @@ BluetoothSppAssistant.prototype = {
     openFiles: function(instanceId,activityId,future) {
    	    var txHandle = 0 ,rxHandle = 0;		  
 
-        if(isNaN(instanceId)){
+        /*if(isNaN(instanceId)){
             throw ({'errorCode':"OPEN_ERROR","errorText":"Invalid Parameter"});
-        }
- 
+        }*/
+
         var txFileName = SPP_TX_FILE_PREFIX + instanceId;
         var rxFileName = SPP_RX_FILE_PREFIX + instanceId;
         
@@ -164,13 +164,13 @@ BluetoothSppAssistant.prototype = {
 	    });
     },
 
-    readData:function(instanceId,dataLength,future) {
+    readData:function(instanceId,dataLength,future,encoding) {
 	    if(mapTable[instanceId] === undefined){
             throw ({"errorCode":"NO_DATA_CHANNEL", "errorText": "Data channel for instanceId doesn't exist" });
         } 
 	    var rxHandle = mapTable[instanceId].rxHandle;
 		
-	    fs.read( rxHandle, dataLength , null , 'utf8' , function( err , str , bytesRead ){
+	    fs.read( rxHandle, dataLength , null , encoding , function( err , str , bytesRead ){
 	        if(err){
                 throw ({"errorCode":"READ_ERROR", "errorText": "Error in read"});
 	        }
diff --git a/usr/palm/services/com.palm.service.bluetooth.spp/BluetoothSppCommands.js b/usr/palm/services/com.palm.service.bluetooth.spp/BluetoothSppCommands.js
index 1867880..8d1d451 100644
--- a/usr/palm/services/com.palm.service.bluetooth.spp/BluetoothSppCommands.js
+++ b/usr/palm/services/com.palm.service.bluetooth.spp/BluetoothSppCommands.js
@@ -28,9 +28,10 @@ function ReadCommandAssistant()
 ReadCommandAssistant.prototype.run = function(future)
 {
     var args = this.controller.args;
+	var encoding = this.controller.args.encoding || "utf8";
 	var assistant = this.controller.service.assistant;
 	if(!args.path){
-        var result = assistant.readData(args.instanceId,args.dataLength,future);
+        var result = assistant.readData(args.instanceId,args.dataLength,future,encoding);
 	}else{
         var result = assistant.readFile(args.instanceId,args.path,args.dataLength,future);
 	}
