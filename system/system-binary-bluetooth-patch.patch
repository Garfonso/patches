diff --git a/usr/palm/services/com.palm.service.bluetooth.spp/BluetoothSppAssistant.js b/usr/palm/services/com.palm.service.bluetooth.spp/BluetoothSppAssistant.js
index 4c18f29..db455c8 100644
--- a/usr/palm/services/com.palm.service.bluetooth.spp/BluetoothSppAssistant.js
+++ b/usr/palm/services/com.palm.service.bluetooth.spp/BluetoothSppAssistant.js
@@ -145,7 +145,7 @@ BluetoothSppAssistant.prototype = {
         future.result = { returnValue : true };
     },
 
-    writeData:function(instanceId,data,dataLength,future) {
+    writeData:function(instanceId,data,dataLength,future,_encoding) {
 
         if(mapTable[instanceId] === undefined){
             throw ({"errorCode":"NO_DATA_CHANNEL", "errorText": "Data channel for instanceId doesn't exist" });
@@ -154,7 +154,7 @@ BluetoothSppAssistant.prototype = {
             throw ({"errorCode":"INVALID_PARAMETER", "errorText": "Invalid parameter"});
         }
 	    var txHandle = mapTable[instanceId].txHandle;
-	    var buffer = new Buffer(data,encoding='utf8');
+	    var buffer = new Buffer(data,encoding=_encoding);
 
 	    fs.write( txHandle , buffer , 0 , dataLength , null , function( err , written ){
 	        if(err){
@@ -323,7 +323,7 @@ BluetoothSppAssistant.prototype = {
         } 
     },
    
-    readStream: function(instanceId,subscription,future) {            
+    readStream: function(instanceId,subscription,future,encoding) {            
 
             if(mapTable[instanceId] === undefined){             
                 throw ({"errorCode":"NO_DATA_CHANNEL", "errorText": "Data channel for instanceId doesn't exist" });
@@ -341,7 +341,7 @@ BluetoothSppAssistant.prototype = {
                                                                                   
             readStream.addListener('data', function readData(buffer) {          
             if(mapTable[instanceId].subscription){                                              
-                var data = buffer.toString('utf8',0,buffer.length);   
+                var data = buffer.toString(encoding,0,buffer.length);   
                 subscription.get().result = {"data":data,"dataLength":buffer.length};
             }else{ 
                 cleanup(true);                                                                  
diff --git a/usr/palm/services/com.palm.service.bluetooth.spp/BluetoothSppCommands.js b/usr/palm/services/com.palm.service.bluetooth.spp/BluetoothSppCommands.js
index 64d56fb..87598eb 100644
--- a/usr/palm/services/com.palm.service.bluetooth.spp/BluetoothSppCommands.js
+++ b/usr/palm/services/com.palm.service.bluetooth.spp/BluetoothSppCommands.js
@@ -30,7 +30,7 @@ ReadCommandAssistant.prototype.run = function(future)
     var args = this.controller.args;
 	var assistant = this.controller.service.assistant;
 	if(!args.path){
-        var result = assistant.readData(args.instanceId,args.dataLength,future);
+        var result = assistant.readData(args.instanceId,args.dataLength,future,args.encoding||"utf8");
 	}else{
         var result = assistant.readFile(args.instanceId,args.path,args.dataLength,future);
 	}
@@ -67,7 +67,7 @@ WriteCommandAssistant.prototype.run = function(future)
     var args = this.controller.args;
 	var assistant = this.controller.service.assistant;
 	if(!args.path){
-        var result = assistant.writeData(args.instanceId,args.data,args.dataLength,future);
+        var result = assistant.writeData(args.instanceId,args.data,args.dataLength,future,args.encoding||"utf8");
 	}else{
         var result = assistant.writeFile(args.instanceId,args.path,future);
 	}
