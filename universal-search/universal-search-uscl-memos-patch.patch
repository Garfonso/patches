Index: /usr/palm/applications/com.palm.app.notes/app/controllers/app-assistant.js
===================================================================
--- .orig/usr/palm/applications/com.palm.app.notes/app/controllers/app-assistant.js
+++ /usr/palm/applications/com.palm.app.notes/app/controllers/app-assistant.js
@@ -14,6 +14,15 @@
     {
 		var name = 'notes';
 		var stageController = this.controller.getStageController(name);
+		if (params && ("newNoteText" in params)) {
+			this.data.newNoteText = params.newNoteText;
+		}
+		else {
+			this.data.newNoteText = null;
+		}
+	        if (params && ("refresh" in params)) {
+			this.data.refresh = params.refresh;
+		}
 		if (stageController) 
 		{
 			this.launch(false, stageController);
@@ -32,6 +41,27 @@
 	{
 		if (!created) 
 		{
+			var scenes = stageController.getScenes();
+			if ("newNoteText" in this.data && this.data.newNoteText !== null) {
+				if (!(scenes && scenes.length === 1)) {
+					// doing this if the top scene
+					// is already 'grid' causes an
+					// unwanted transition effect.
+					stageController.popScenesTo('grid');
+				}
+				else {
+					// In GridAssistant, activate() calls
+					// refreshList() which calls
+					// _createNewNoteFromParams().
+					// Since in this situation activate
+					// isn't called, we do this "manually".
+					stageController.delegateToSceneAssistant('_createNewNoteFromParams');
+				}
+			}
+			else if (this.data.refresh && 
+				 scenes && scenes.length === 1) {
+				stageController.delegateToSceneAssistant('_refreshList');
+			}
 			stageController.activate();
 		}
 		else 
Index: /usr/palm/applications/com.palm.app.notes/app/controllers/grid-assistant.js
===================================================================
--- .orig/usr/palm/applications/com.palm.app.notes/app/controllers/grid-assistant.js
+++ /usr/palm/applications/com.palm.app.notes/app/controllers/grid-assistant.js
@@ -100,7 +100,7 @@
 		this.controller.getSceneScroller().mojo.revealTop(0);
     },
     
-    _handleNewNote: function()
+    _handleNewNote: function(newNoteText)
     {
         // Get top element.  We insert before this one so we need to know its position and its color
         var top = this.$widget_noteGrid.getItemAt(0, 1); // row-0,col-1 : Skip notepad which is element 0
@@ -115,12 +115,20 @@
         }
         this.controller.stageController.pushScene('note', 
         {
+            newNoteText: newNoteText,
             model: this.model,
             color: Note.colors[(Note.colors.indexOf(top.color) + 1) % Note.colors.length],
             position: this._findInsertPosition('a', top.position)
         });
     },
     
+    _createNewNoteFromParams: function () {
+        if ("newNoteText" in this.data && this.data.newNoteText !== null) {
+            this._handleNewNote(this.data.newNoteText);
+            this.data.newNoteText = null;
+        }
+    },
+
     _handleEditNote: function(id, color)
     {
         this.controller.stageController.pushScene('note', 
@@ -279,6 +287,7 @@
 			self._fixMissingInfo(list, 1);
 			self.$widget_noteGrid.render(list);
 			self._enableDisableFilter(total);
+			self._createNewNoteFromParams();
 			done && done();
 		});
     },
Index: /usr/palm/applications/com.palm.app.notes/app/controllers/note-assistant.js
===================================================================
--- .orig/usr/palm/applications/com.palm.app.notes/app/controllers/note-assistant.js
+++ /usr/palm/applications/com.palm.app.notes/app/controllers/note-assistant.js
@@ -55,6 +55,12 @@
 			green: {},
 			blue: {}
 		};
+                if (data.newNoteText) {
+			this.newNoteText = data.newNoteText;
+		}
+                else {
+			this.newNoteText = "";
+		}
     },
     
     setup: function()
@@ -77,7 +83,9 @@
         {
             this._onNoteLoaded.bind(this).defer(new Note(
             {
-                text: '',
+                text: (this.newNoteText !== "") ? 
+			    (this.newNoteText + "\n\n" + Mojo.Format.formatDate(new Date(), "short") + "\n") :
+			    this.newNoteText,
                 color: data.color,
                 position: data.position
             }), true);
Index: /usr/palm/applications/com.palm.app.notes/appinfo.json
===================================================================
--- .orig/usr/palm/applications/com.palm.app.notes/appinfo.json
+++ /usr/palm/applications/com.palm.app.notes/appinfo.json
@@ -7,5 +7,5 @@
 	"version": "1.0",
 	"icon": "icon.png",
 	"noWindow": true,
-	"keywords": ["Notes", "Stickies", "Notepad"]
+	"keywords": ["Notes", "Stickies", "Notepad", "iGrokTheCommandLine", "iCanBeRefreshed"] 
 }
