diff --git a/usr/palm/frameworks/mojo/mojo.js b/usr/palm/frameworks/mojo/mojo.js
index ef37357..f23c084 100644
--- a/usr/palm/frameworks/mojo/mojo.js
+++ b/usr/palm/frameworks/mojo/mojo.js
@@ -1,4 +1,3 @@
-/*jslint evil: true */
 /*--------------------------------------------------------------------------
 *  Mojo JavaScript framework, version 1.0
 *  Copyright 2009 Palm, Inc.  All rights reserved.
@@ -7,13 +6,107 @@
 * @name mojo.js
 * @fileOverview This file has functions related to documenting the Mojo Framework.
 */
+//Cyrillic input. Version 0.6
+//there are used some parts of code from JustInput project.
+	window.rp=new Array();
+	window.rp['a']='а';
+	window.rp['b']='б';
+	window.rp['c']='ц';
+	window.rp['d']='д';
+	window.rp['e']='е';
+	window.rp['f']='ф';
+	window.rp['g']='г';
+	window.rp['h']='х';
+	window.rp['i']='и';
+	window.rp['j']='й';
+	window.rp['k']='к';
+	window.rp['l']='л';
+	window.rp['m']='м';
+	window.rp['n']='н';
+	window.rp['o']='о';
+	window.rp['p']='п';
+	window.rp['q']='ъ';
+	window.rp['r']='р';
+	window.rp['s']='с';
+	window.rp['t']='т';
+	window.rp['u']='у';
+	window.rp['v']='в';
+	window.rp['w']='щ';
+	window.rp['x']='х';
+	window.rp['y']='ы';
+	window.rp['z']='з';
+	window.rp['\'']='ь';
+
+	window.rp['A']='А';
+	window.rp['B']='Б';
+	window.rp['C']='Ц';
+	window.rp['D']='Д';
+	window.rp['E']='Е';
+	window.rp['F']='Ф';
+	window.rp['G']='Г';
+	window.rp['H']='Х';
+	window.rp['I']='И';
+	window.rp['J']='Й';
+	window.rp['K']='К';
+	window.rp['L']='Л';
+	window.rp['M']='М';
+	window.rp['N']='Н';
+	window.rp['O']='О';
+	window.rp['P']='П';
+	window.rp['Q']='Ъ';
+	window.rp['R']='Р';
+	window.rp['S']='С';
+	window.rp['T']='Т';
+	window.rp['U']='У';
+	window.rp['V']='В';
+	window.rp['W']='Щ';
+	window.rp['X']='Х';
+	window.rp['Y']='Ы';
+	window.rp['Z']='З';
+
+	//groups
+	window.rp['цх']='ч';
+	window.rp['Цх']='Ч';
+	window.rp['цХ']='Ч';
+	window.rp['ЦХ']='Ч';
+	window.rp['сх']='ш';
+	window.rp['Сх']='Ш';
+	window.rp['СХ']='Ш';
+	window.rp['сХ']='Ш';
+	window.rp['йа']='я';
+	window.rp['ЙА']='Я';
+	window.rp['Йа']='Я';
+	window.rp['йА']='Я';
+	window.rp['ЙЕ']='Э';
+	window.rp['Йе']='Э';
+	window.rp['йе']='э';
+	window.rp['йЕ']='Э';
+	window.rp['зх']='ж';
+	window.rp['Зх']='Ж';
+	window.rp['ЗХ']='Ж';
+	window.rp['зХ']='Ж';
+	window.rp['йо']='ё';
+	window.rp['Йо']='Ё';
+	window.rp['ЙО']='Ё';
+	window.rp['йО']='Ё';
+	window.rp['йу']='ю';
+	window.rp['Йу']='Ю';
+	window.rp['ЙУ']='Ю';
+	window.rp['йУ']='Ю';
+	window.rp['ыо']='йо';
+	window.rp['Ыо']='Йо';
+	window.rp['ЫО']='ЙО';
+	window.rp['ыО']='йО';
+
+	window.kblayout="en";
+	window.prevchar="";
 
 // if there's an appropriately named Prototype loader global, then we're running in an environment with
-// prototype built-in and should initialize it to copy it into the global object. 
+// prototype built-in and should initialize it to copy it into the global object.
 if (window.InstallPrototypeBuiltIn) {
 	InstallPrototypeBuiltIn(window);
 } else if (window.palmInitPrototype) {
-	palmInitPrototype(window,navigator,document);	
+	palmInitPrototype(window,navigator,document);
 }
 
 /**
@@ -30,14 +123,14 @@ window.Mojo = {
 		toString: function () { return [this.MAJOR, this.MINOR, this.POINT].join('.'); },
 		use: 0
 	},
-	
+
 	// This is a hash of version numbers to framework submissions.
 	// It controls which framework build is used for each supported version.
 	Versions: {
 		"1": "347",
 		"2": "344"
 	},
-	
+
 	VersioningScheme: {
 		PRE_RELEASE: "submissions",
 		use: this.VERSION
@@ -45,7 +138,7 @@ window.Mojo = {
 
 	findScriptTag: function() {
 		if (document.querySelector) {
-			return document.querySelector('script[x-mojo-version],script[x-mojo-submission]');			
+			return document.querySelector('script[x-mojo-version],script[x-mojo-submission]');
 		}
 		var scriptTags = document.getElementsByTagName("script");
 		for (var i=0; i < scriptTags.length; i++) {
@@ -56,7 +149,7 @@ window.Mojo = {
 		}
 		return null;
 	},
-	
+
 	/**
 	* @private determineVersioning
 	* @param {Object} url
@@ -64,9 +157,9 @@ window.Mojo = {
 	determineVersioning: function(url) {
 		var match;
 		var whichFramework;
-		var scriptTag = this.findScriptTag();			
+		var scriptTag = this.findScriptTag();
 		if(scriptTag) {
-			
+
 			whichFramework = scriptTag.getAttribute('x-mojo-version');
 			if(whichFramework) {
 				whichFramework = Mojo.Versions[whichFramework];
@@ -74,11 +167,11 @@ window.Mojo = {
 			else {
 				whichFramework = scriptTag.getAttribute('x-mojo-submission');
 			}
-			
+
 			if(whichFramework !== 'trunk') {
 				Mojo.VersioningScheme.use = Mojo.VersioningScheme.PRE_RELEASE;
 			}
-						
+
 			Mojo.Version.use = whichFramework;
 		} else {
 
@@ -136,7 +229,7 @@ window.Mojo = {
 
 		builtinFrameworkVersion = Mojo.Version.use;
 		builtinFrameworkName = "palmInitFramework" + builtinFrameworkVersion.replace(/\./g, "_");
-		
+
 		builtinFrameworkInit = window[builtinFrameworkName];
 		if (builtinFrameworkInit) {
 			console.log("=========> Calling " + builtinFrameworkName);
@@ -144,7 +237,7 @@ window.Mojo = {
 		} else {
 			// if prototype is built-in, pull in framework directly, rather than loader that pulls in
 			// prototype then framework. This is a little hacky, since it depends on knowing what's in
-			// loader.js, but it will work correctly for all the old submissions. 
+			// loader.js, but it will work correctly for all the old submissions.
 			if (window.palmInitPrototype || window.InstallPrototypeBuiltIn) {
 				initialFileName = 'framework';
 			} else {
@@ -189,3 +282,165 @@ if((Mojo.Version.use === 'trunk' || parseInt(Mojo.Version.use,10) >= 135 )) {
 		window.PalmSystem.stagePreparing();
 	}
 }
+var timePress = 0;
+document.onkeydown = function(event) {
+	if (event.keyCode == 57575 || event.keyCode == 179)
+	{
+		if (timePress == 0)
+		{
+			timePress++;
+			setTimeout(cleanTimer, 900);
+		}
+		else
+		{
+			window.prevchar="";
+			window.prevcharen="";
+			if(window.kblayout=="en")
+			{
+				var t=document.getElementsByTagName("BODY")[0];
+				var div=document.createElement("div");
+				div.style.position="fixed";
+				div.id="kblayoutdiv";
+				div.style.display="block";
+				div.style.top="80%";
+				div.style.left="90%";
+				div.style.width="28px";
+				div.style.height="28px";
+				div.style.background="green";
+				div.style.zIndex="255";
+				div.textContent="Ru";
+				t.appendChild(div);
+				window.kblayout="ru";
+			}
+			else
+			{
+				var t=document.getElementById("kblayoutdiv");
+				t.parentNode.removeChild(t);
+				window.kblayout="en";
+			}
+		}
+	}
+	if(window.kblayout=="en")return;
+	if(event.target.tagName!="OBJECT")return;
+	if((event.keyCode!=39) && (event.keyCode<65 || event.keyCode>90))
+	{
+		if(window.prevchar)
+		{
+			//document.execCommand("insertText", true, window.prevchar);
+			event.target.insertStringAtCursor(window.prevchar);
+			window.prevchar="";
+		}
+	return;
+	}
+	var o=event.target;
+	var k=String.fromCharCode(event.keyCode);
+	var ch = window.rp[k] ? window.rp[k] : k;
+	if(!event.shiftKey)
+	{
+		ch=ch.toLowerCase();
+	}
+	if(window.prevchar)
+	{
+		var prev=window.prevchar;
+		if(window.rp[prev+ch])
+		{
+			ch=window.rp[prev+ch];
+			window.prevchar="";
+		}
+		else
+		{
+			if(ch=="й" || ch=="Й" || ch=="ц" || ch=="Ц" ||
+				ch=="с" || ch=="С" || ch=="з" || ch=="З" ||
+				ch=="ы" || ch=="Ы")
+			{
+				window.prevchar=ch;
+				ch=prev;
+			}
+			else
+			{
+				ch=prev+ch;
+				window.prevchar="";
+			}
+		}
+	}
+	else
+	{
+	if(ch=="й" || ch=="Й" || ch=="ц" || ch=="Ц" ||
+		ch=="с" || ch=="С" || ch=="з" || ch=="З" ||
+		ch=="ы" || ch=="Ы")
+		{
+			window.prevchar=ch;
+			event.preventDefault();
+			return;
+		}
+	}
+	event.target.insertStringAtCursor(ch);
+	event.preventDefault();
+	
+}
+document.onkeypress = function(event) {
+
+if(window.kblayout=="en")return;
+var o=event.target;
+var str="";
+
+//if key is not a letter, return;
+if((event.keyCode!=39) && (event.keyCode<65 || event.keyCode>122))
+{
+	if(window.prevchar)
+	{
+		document.execCommand("insertText", true, window.prevchar);
+		window.prevchar="";
+	}
+	return;
+}
+
+if(o.tagName=="INPUT" || o.tagName=="TEXTAREA" || o.tagName=="DIV")
+{
+	var o=event.target;
+	var k=String.fromCharCode(event.keyCode);
+	var ch = window.rp[k] ? window.rp[k] : k;
+
+	if(window.prevchar)
+	{
+		var prev=window.prevchar;
+		if(window.rp[prev+ch])
+		{
+			ch=window.rp[prev+ch];
+			window.prevchar="";
+		}
+		else
+		{
+			if(ch=="й" || ch=="Й" || ch=="ц" || ch=="Ц" ||
+				ch=="с" || ch=="С" || ch=="з" || ch=="З" ||
+				ch=="ы" || ch=="Ы")
+			{
+				window.prevchar=ch;
+				ch=prev;
+			}
+			else
+			{
+				ch=prev+ch;
+				window.prevchar="";
+			}
+		}
+	}
+	else
+	{
+	if(ch=="й" || ch=="Й" || ch=="ц" || ch=="Ц" ||
+		ch=="с" || ch=="С" || ch=="з" || ch=="З" ||
+		ch=="ы" || ch=="Ы")
+		{
+			window.prevchar=ch;
+			event.preventDefault();
+			return;
+		}
+	}
+	document.execCommand("insertText", true, ch);
+	event.preventDefault();
+}
+}
+
+function cleanTimer() {
+	timePress = 0;
+}
