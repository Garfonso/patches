diff --git a/usr/palm/frameworks/mojo/builtins/palmInitFramework2205.js b/usr/palm/frameworks/mojo/builtins/palmInitFramework2205.js
index 125d606..5d4ec45 100644
--- a/usr/palm/frameworks/mojo/builtins/palmInitFramework2205.js
+++ b/usr/palm/frameworks/mojo/builtins/palmInitFramework2205.js
@@ -610,10 +610,9 @@ return{components:this._possibleComponents,startScrolling:this.isHorizontal?Math
 Mojo.Widget.Scroller.FreeStrategy=Foundations.Class.create(Mojo.Widget.Scroller._genericStrategy,{stratType:"2d",initialize:function initialize(scroller,options){this.$super(initialize)(scroller,options);this._possibleComponents=["x","y"];this._possibleComponents.x=this._possibleComponents.y=true;this.animator.setStrategy(this)},calculateScrollInfo:function calculateScrollInfo(distance){return{components:this._possibleComponents,startScrolling:true}}});
 Mojo.Widget.Scroller.DominantStrategy=Foundations.Class.create(Mojo.Widget.Scroller._genericStrategy,{stratType:"dominant",LOCK_RADIUS:50,initialize:function initialize(scroller,options){this.$super(initialize)(scroller,options);this._possibleComponents=["x","y"];this._possibleComponents.x=this._possibleComponents.y=true;this.animator.setStrategy(this)},handleMotion:function handleMotion(motion,pointer){var animator=this.animator;if(this.delayingFlickStop)return;if(motion.x||motion.y){animator.updateMovementState(false);
 if(!this.animatingToPointer&&!animator.correctingOverscroll())animator.setFrameDistanceRatio(1);this.lastPointer=pointer;this.calculateAxis();animator.adjustTarget(motion)}},setupAxisTargetAreas:function setupAxisTargetAreas(){var pt=this.firstPointer;var x=pt.x;var y=pt.y;var r=this.LOCK_RADIUS;var axisTargets={left:x-r,right:x+r,top:y-r,bottom:y+r};this.axisTargets=axisTargets},calculateScrollInfo:function calculateScrollInfo(distance){var currentComponents;this.setupAxisTargetAreas();if(Math.abs(distance.x)<=
-Math.abs(distance.y))currentComponents=["y"];else currentComponents=["x"];return{components:currentComponents,startScrolling:true}},dragStart:function dragStart(dragStartEvent){this.firstPointer=Mojo.Event.pointer(dragStartEvent.down);this.$super(dragStart)(dragStartEvent)},calculateAxis:function calculateAxis(){var components,component,delta,absDistance,x,y,axisTargets;var lockRadius=this.LOCK_RADIUS;var lastPointer=this.lastPointer;var animator=this.animator;components=animator.components;if(components.length==
-2)return;absDistance=Mojo.Gesture.calculateAbsDistance(this.firstPointer,lastPointer);if(absDistance.x<lockRadius||absDistance.y<lockRadius)if(absDistance.x<=absDistance.y)components=["y"];else components=["x"];else{axisTargets=this.axisTargets;x=lastPointer.x;y=lastPointer.y;if(y<axisTargets.top||y>axisTargets.bottom)if(x<axisTargets.left||x>axisTargets.right)components=["x","y"]}if(components.length==2){animator.components=components;if(this.mouseTracker)this.mouseTracker.components=components;
-this.setComponentLimits();for(var i=components.length-1;i>=0;i--){component=components[i];if(!animator.componentsAtStart[component]){delta=this.firstPointer[component]-this.lastPointer[component];animator.setComponentTarget(component,animator.getComponentOriginal(component)+delta)}}animator.setFrameDistanceRatio(animator.OVERSCROLL_SPEED);this.animatingToPointer=true;animator.startAnimating()}},handleAnimateDone:function handleAnimateDone(){this.animatingToPointer=false;this.$super(handleAnimateDone)()}});
-Mojo.Widget.Scroller.MouseTracker=function(motionHandler,dragStartEvent,components){var downEvent=dragStartEvent.down;this.handler=motionHandler;this.components=components;this.lastPointer=Mojo.Event.pointer(downEvent)};
+Math.abs(distance.y))currentComponents=["y"];else currentComponents=["x"];return{components:currentComponents,startScrolling:true}},dragStart:function dragStart(dragStartEvent){this.firstPointer=Mojo.Event.pointer(dragStartEvent.down);this.$super(dragStart)(dragStartEvent)},calculateAxis:function calculateAxis(){var components,component,delta,absDistance,x,y,axisTargets;var lockRadius=this.LOCK_RADIUS;var lastPointer=this.lastPointer;var animator=this.animator;components=animator.components;if(this.mode==this.MODE_DOMINANT){absDistance=Mojo.Gesture.calculateAbsDistance(this.firstPointer,lastPointer);if(absDistance.x<lockRadius||absDistance.y<lockRadius)if(absDistance.x<=absDistance.y)components=["y"];else components=["x"];else{axisTargets=this.axisTargets;x=lastPointer.x;y=lastPointer.y;if(y<axisTargets.top||y>axisTargets.bottom)if(x<axisTargets.left||x>axisTargets.right)components=["x","y"]}}animator.components=components;if(this.mouseTracker)this.mouseTracker.components=components;
+this.setComponentLimits();for(var i=components.length-1;i>=0;i--){component=components[i];if(!animator.componentsAtStart[component]){delta=this.firstPointer[component]-this.lastPointer[component];animator.setComponentTarget(component,animator.getComponentOriginal(component)+delta)}}animator.setFrameDistanceRatio(0.7);this.animatingToPointer=true;animator.startAnimating()},handleAnimateDone:function handleAnimateDone(){this.animatingToPointer=false;this.$super(handleAnimateDone)()}});
+Mojo.Widget.Scroller.MouseTracker=function(motionHandler,dragStartEvent,components){var downEvent=dragStartEvent.move;this.handler=motionHandler;this.components=components;this.lastPointer=Mojo.Event.pointer(downEvent)};
 Mojo.Widget.Scroller.MouseTracker.prototype={dragged:function(draggedEvent){var moveEvent=draggedEvent.move;var component;var pointer=moveEvent.filteredPointer;var motion={x:0,y:0};var componentIndex;for(componentIndex=0;componentIndex<this.components.length;componentIndex++){component=this.components[componentIndex];if(this.lastPointer[component]!=pointer[component])motion[component]=this.lastPointer[component]-pointer[component]}this.lastPointer=pointer;this.handler.handleMotion(motion,pointer)}};Mojo.Menu={};Mojo.Menu.viewMenu="palm-view-menu";Mojo.Menu.commandMenu="palm-command-menu";Mojo.Menu.appMenu="palm-app-menu";Mojo.Menu.showAppCmd="palm-show-app-menu";Mojo.Menu.cutCmd="palm-cut-cmd";Mojo.Menu.copyCmd="palm-copy-cmd";Mojo.Menu.pasteCmd="palm-paste-cmd";Mojo.Menu.prefsCmd="palm-prefs-cmd";Mojo.Menu.helpCmd="palm-help-cmd";Mojo.Menu.boldCmd="palm-bold-cmd";Mojo.Menu.italicCmd="palm-italic-cmd";Mojo.Menu.underlineCmd="palm-underline-cmd";Mojo.Menu.selectAllCmd="palm-selectall-cmd";
 Mojo.Menu.cutItem={label:$LL("Cut"),command:Mojo.Menu.cutCmd,shortcut:"x",checkEnabled:true};Mojo.Menu.copyItem={label:$LL("Copy"),command:Mojo.Menu.copyCmd,shortcut:"c",checkEnabled:true};Mojo.Menu.pasteItem={label:$LL("Paste"),command:Mojo.Menu.pasteCmd,shortcut:"v",checkEnabled:true};Mojo.Menu.boldItem={label:$LL("Bold"),command:Mojo.Menu.boldCmd,checkEnabled:true};Mojo.Menu.italicItem={label:$LL("Italic"),command:Mojo.Menu.italicCmd,checkEnabled:true};
 Mojo.Menu.underlineItem={label:$LL("Underline"),command:Mojo.Menu.underlineCmd,checkEnabled:true};Mojo.Menu.selectAllItem={label:$LL("Select All"),command:Mojo.Menu.selectAllCmd,shortcut:"a",checkEnabled:true};Mojo.Menu.prefsItem={label:$LL("Preferences"),command:Mojo.Menu.prefsCmd,checkEnabled:true};Mojo.Menu.helpItem={label:$LL("Help"),command:Mojo.Menu.helpCmd,checkEnabled:true};Mojo.Menu.editItem={label:$LL("Edit"),items:[Mojo.Menu.selectAllItem,Mojo.Menu.cutItem,Mojo.Menu.copyItem,Mojo.Menu.pasteItem]};
diff --git a/usr/palm/frameworks/mojo/builtins/palmInitFramework506.js b/usr/palm/frameworks/mojo/builtins/palmInitFramework506.js
index 5cb9abb..7510f9a 100644
--- a/usr/palm/frameworks/mojo/builtins/palmInitFramework506.js
+++ b/usr/palm/frameworks/mojo/builtins/palmInitFramework506.js
@@ -13012,9 +13012,7 @@ var components,originalComponents,component,delta,distance,absDistance,x,y,axisT
 var lockRadius=this.LOCK_RADIUS;
 var lastPointer=this.lastPointer;
 components=originalComponents=this.components;
-if(this.mode!=='dominant'||components.length==2){
-return;
-}
+if(this.mode=='dominant'){
 absDistance=Mojo.Gesture.calculateAbsDistance(this.firstPointer,lastPointer);
 if(absDistance.x<lockRadius&&absDistance.y<lockRadius){
 if(absDistance.x<=absDistance.y){
@@ -13032,7 +13030,7 @@ components=["x","y"];
 }
 }
 }
-if(components.length==2){
+}
 this.components=components;
 if(this.mouseTracker){
 this.mouseTracker.components=components;
@@ -13045,10 +13043,9 @@ delta=this.lastPointer[component]-this.firstPointer[component];
 this.targetCoordinate[component]=this.originalCoordinate[component]+delta;
 }
 }
-this.setFrameDistanceRatio(this.kOverScrollSpeed,"animating to pointer");
+this.setFrameDistanceRatio(0.7,"animating to pointer");
 this.animatingToPointer=true;
 this.startAnimating();
-}
 },
 
 
@@ -14250,7 +14247,7 @@ Mojo.Widget.Scroller.MouseTracker=Class.create({
 
 initialize:function(widget,dragStartEvent,components){
 this.widget=widget;
-var downEvent=dragStartEvent.down;
+var downEvent=dragStartEvent.move;
 this.components=components;
 this.lastPointer=Event.pointer(downEvent);
 },
