diff --git a/usr/palm/frameworks/mojo/builtins/palmInitFramework347.js b/usr/palm/frameworks/mojo/builtins/palmInitFramework347.js
index aed4b02..87e0e12 100644
--- a/usr/palm/frameworks/mojo/builtins/palmInitFramework347.js
+++ b/usr/palm/frameworks/mojo/builtins/palmInitFramework347.js
@@ -12956,33 +12956,12 @@ bottom:y+r
 this.axisTargets=axisTargets;
 },
 
-
-calculateAxis:function(){
-var components,originalComponents,component,delta,distance,absDistance,x,y,axisTargets;
+smoothDragging:function(){
+var components,originalComponents,component,delta;
 var lockRadius=this.LOCK_RADIUS;
 var lastPointer=this.lastPointer;
 components=originalComponents=this.components;
-if(this.mode!=='dominant'||components.length==2){
-return;
-}
-absDistance=Mojo.Gesture.calculateAbsDistance(this.firstPointer,lastPointer);
-if(absDistance.x<lockRadius&&absDistance.y<lockRadius){
-if(absDistance.x<=absDistance.y){
-components=["y"];
-}else{
-components=["x"];
-}
-}else{
-axisTargets=this.axisTargets;
-x=lastPointer.x;
-y=lastPointer.y;
-if(y<axisTargets.top||y>axisTargets.bottom){
-if(x<axisTargets.left||x>axisTargets.right){
-components=["x","y"];
-}
-}
-}
-if(components.length==2){
+
 this.components=components;
 if(this.mouseTracker){
 this.mouseTracker.components=components;
@@ -12995,10 +12974,9 @@ delta=this.lastPointer[component]-this.firstPointer[component];
 this.targetCoordinate[component]=this.originalCoordinate[component]+delta;
 }
 }
-this.setFrameDistanceRatio(this.kOverScrollSpeed,"animating to pointer");
+this.setFrameDistanceRatio(0.7,"animating to pointer");
 this.animatingToPointer=true;
 this.startAnimating();
-}
 },
 
 
@@ -13044,9 +13022,11 @@ startScrolling=(Math.abs(distance.x)<=Math.abs(distance.y));
 break;
 case"dominant":
 this.setupAxisTargetAreas();
-if(Math.abs(distance.x)<=Math.abs(distance.y)){
+components=["x","y"];
+if(Math.abs(distance.y)/2.5>Math.abs(distance.x)){
 components=["y"];
-}else{
+}
+if(Math.abs(distance.x)/2.5>Math.abs(distance.y)){
 components=["x"];
 }
 break;
@@ -13225,11 +13205,8 @@ if(this.delayingFlickStop){
 
 return;
 }
-if(!this.animatingToPointer&&!this.correctingOverscroll){
-this.setFrameDistanceRatio(1,"motion from mouse");
-}
 this.lastPointer=pointer;
-this.calculateAxis();
+this.smoothDragging();
 var components=this.components;
 var motionForCoordinate,component,targetForComponent;
 for(var i=components.length-1;i>=0;i--){
@@ -14200,7 +14177,7 @@ Mojo.Widget.Scroller.MouseTracker=Class.create({
 
 initialize:function(widget,dragStartEvent,components){
 this.widget=widget;
-var downEvent=dragStartEvent.down;
+var downEvent=dragStartEvent.move;
 this.components=components;
 this.lastPointer=Event.pointer(downEvent);
 },
