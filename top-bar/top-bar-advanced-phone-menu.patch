diff --git a/usr/lib/luna/system/luna-systemui/app/controllers/bar-assistant.js b/usr/lib/luna/system/luna-systemui/app/controllers/bar-assistant.js
index 5dc60f6..46b0220 100644
--- a/usr/lib/luna/system/luna-systemui/app/controllers/bar-assistant.js
+++ b/usr/lib/luna/system/luna-systemui/app/controllers/bar-assistant.js
@@ -592,6 +592,8 @@ handlePowerQueryNotifications: function(payload){
 			this.callForwardNotificationSession = null;					
 		}													
 		this.updatePhoneAppName();
+		var stageController = Mojo.Controller.getAppController().getStageProxy("DeviceMenu");
+		stageController.delegateToSceneAssistant("updatePhone");
 	}
 	this.handlePower.cancel();
 },							
@@ -1002,6 +1004,8 @@ handletelephonyNotifications: function(payload) {
 			//Close all phone related / NITZ alerts.
 			this.closePhoneAlerts();				
 		}
+		var stageController = Mojo.Controller.getAppController().getStageProxy("DeviceMenu");
+		stageController.delegateToSceneAssistant("updatePhone");
 	}
 	else if (payload.eventNetwork && this.phoneRadioState) {
 		var networkMsg = payload.eventNetwork;
@@ -3079,6 +3083,10 @@ getCurrentWiFiState: function() {
 	return this.wifiState;
 },
 
+getCurrentPhoneState: function() {
+	return this.phoneRadioState;
+},
+
 setDeviceMenuAssistant: function(menuassistant) {
 	this.deviceMenuAssistant = menuassistant;
 },
diff --git a/usr/lib/luna/system/luna-systemui/app/controllers/devicemenu-assistant.js b/usr/lib/luna/system/luna-systemui/app/controllers/devicemenu-assistant.js
index 335a73c..5700e7a 100644
--- a/usr/lib/luna/system/luna-systemui/app/controllers/devicemenu-assistant.js
+++ b/usr/lib/luna/system/luna-systemui/app/controllers/devicemenu-assistant.js
@@ -1,6 +1,6 @@
 /* Copyright 2009 Palm, Inc.  All rights reserved. */
 
-var RadioState = new Hash({wifi: undefined, bluetooth: undefined});
+var RadioState = new Hash({wifi: undefined, bluetooth: undefined, phone: undefined});
 
 var DevicemenuAssistant = Class.create({
 	
@@ -44,6 +44,8 @@ var DevicemenuAssistant = Class.create({
 		this.drawerModel = {myOpenProperty:false};
 		this.controller.setupWidget('wifidetails', {modelProperty:'myOpenProperty'}, this.drawerModel);
 		this.controller.setupWidget('btdetails', {modelProperty:'myOpenProperty'}, this.drawerModel);
+		this.controller.setupWidget('phonedetails', {modelProperty:'myOpenProperty'}, this.drawerModel);
+		this.phonedrawer = this.controller.get('phonedetails')
 		this.wifidrawer = this.controller.get('wifidetails');
 		this.btdrawer = this.controller.get('btdetails');
 		
@@ -103,6 +105,17 @@ var DevicemenuAssistant = Class.create({
 			else
 				this.controller.get('wifimsg').innerHTML = wifistate.escapeHTML();			
 		}		
+
+		var phonestate = this.barAssistant.getCurrentPhoneState();
+		if(!phonestate) {
+			this.controller.get('phonemsg').innerHTML = $L('Off');
+			RadioState.set('phone',false);
+		}
+		else {
+			this.controller.get('phonemsg').innerHTML = $L('On');
+			RadioState.set('phone',true);
+		}
+
 		this.controller.listen(this.controller.document, Mojo.Event.deactivate, this.close.bindAsEventListener(this));
 		this.isVisible = true;
 		
@@ -126,11 +139,15 @@ var DevicemenuAssistant = Class.create({
 		this.controller.get('btlist').addEventListener(Mojo.Event.listTap,this.handleBTTap.bindAsEventListener(this));		
 		this.controller.get('dm_wifi').addEventListener(Mojo.Event.tap, this.togglewifiList.bindAsEventListener(this));
 		this.controller.get('dm_bluetooth').addEventListener(Mojo.Event.tap, this.togglebluetoothList.bindAsEventListener(this));
+		this.controller.get('dm_phone').addEventListener(Mojo.Event.tap, this.togglePhoneList.bindAsEventListener(this));
+		this.controller.get('phone_radio').addEventListener(Mojo.Event.tap, this.togglePhoneRadio.bindAsEventListener(this));
 		this.controller.get('wifi_radio').addEventListener(Mojo.Event.tap, this.toggleWifiRadio.bindAsEventListener(this));
 		this.controller.get('bt_radio').addEventListener(Mojo.Event.tap, this.toggleBTRadio.bindAsEventListener(this));
+		this.controller.get('dm_data').addEventListener(Mojo.Event.tap, this.toggleData.bindAsEventListener(this));
 		this.controller.get('bt_pref').addEventListener(Mojo.Event.tap,this.handleBluetoothLaunch.bindAsEventListener(this));
 		this.controller.get('wifi_pref').addEventListener(Mojo.Event.tap,this.handleWiFiLaunch.bindAsEventListener(this));
 		this.controller.get('scrim').addEventListener(Mojo.Event.tap, this.toggleDeviceMenu.bindAsEventListener(this));
+		this.controller.get('dm_roam').addEventListener(Mojo.Event.tap, this.toggleRoam.bindAsEventListener(this));
 		//Close the App because this is a first launch.
 		this.toggleDeviceMenu();						
 	},	
@@ -185,6 +202,49 @@ var DevicemenuAssistant = Class.create({
 		}
 		this.apModeInProgress = false;
 	},
+
+
+	updatePhone: function() {
+		if(this.barAssistant.getCurrentPhoneState()) {
+			this.controller.get('phonemsg').innerHTML = $L('On');
+			this.controller.get('phone_radio').innerHTML = 'Turn off Phone';
+			RadioState.set('phone', true);
+		}
+		else {
+			this.controller.get('phonemsg').innerHTML = $L('Off');
+			this.controller.get('phone_radio').innerHTML = 'Turn on Phone';
+			RadioState.set('phone', false);
+		}
+	},
+
+	togglePhoneRadio: function(event) {
+		this.serviceRequest = new Mojo.Service.Request("palm://com.palm.vibrate", {
+			method: 'vibrate', parameters: { 'period': 0,'duration': 250 }
+		});
+		if(RadioState.get('phone'))
+			TelephonyService.tempPowerSet('off',false,null,null);
+		else
+			TelephonyService.tempPowerSet('on',false,null,null);
+		this.toggleDeviceMenu();
+	},
+
+	togglePhoneList: function(event) {
+		if(this.apModeInProgress)
+			return;
+
+		if (this.phonedrawer.mojo.getOpenState()) {
+			this.controller.hideWidgetContainer(this.controller.get('phonedetails'));
+		}
+		else {
+			if(RadioState.get('phone'))
+				this.controller.get('phone_radio').innerHTML = 'Turn off Phone';
+			else
+			this.controller.get('phone_radio').innerHTML = 'Turn on Phone';
+
+			this.controller.showWidgetContainer(this.controller.get('phonedetails'));
+		}
+		this.phonedrawer.mojo.setOpenState(!this.phonedrawer.mojo.getOpenState());
+	},
 	
 	updateAirplaneModeProgress: function() {
 		if(this.barAssistant.getAirplaneMode()) {
@@ -263,6 +323,34 @@ var DevicemenuAssistant = Class.create({
 		this.btdeviceList.clear();		
 	},
 	
+	toggleRoam: function(event) {
+		if(this.roamStatus == 'roamonly') {
+			this.roamStatus = 'any';
+		} else if(this.roamStatus == 'any') {
+			this.roamStatus = 'homeonly';
+		} else {
+			this.roamStatus = 'roamonly';
+		}
+		this.controller.serviceRequest('palm://com.palm.telephony', {
+			method: 'roamModeSet',
+			parameters: {
+				mode: this.roamStatus,
+				client: Mojo.appName
+			}
+		});
+		this.setRoamLabel();
+	},
+
+	setRoamLabel: function() {
+		if(this.roamStatus=='roamonly') {
+			this.controller.get('roamStatus').innerText = 'Always';
+		} else if (this.roamStatus=="homeonly") {
+			this.controller.get('roamStatus').innerText = 'Never';
+		} else {
+			this.controller.get('roamStatus').innerText = 'Automatic';
+		}
+	},
+
 	//Response from Preferences
 	gotNumOfProfiles: function(payload) {
 		Mojo.Log.info("Num Of Profile "+ Object.toJSON(payload));
@@ -1016,8 +1104,31 @@ var DevicemenuAssistant = Class.create({
 		this.controller.modelChanged(this.spinnerModel);			
 	},
 	
+	toggleData: function(event) {
+		if(this.dataDisabled=="on") {
+			this.dataDisabled = "off";
+		} else {
+			this.dataDisabled = "on";
+		}
+		this.controller.serviceRequest('palm://com.palm.wan', {
+			method: 'set',
+			parameters: {
+				disablewan: this.dataDisabled
+			}
+		});
+		this.setDataLabel();
+	},
+
+	setDataLabel: function() {
+		if(this.dataDisabled=="off") {this.controller.get('dataStatus').innerText = "on";} else {this.controller.get('dataStatus').innerText = "off";}
+	},
+
 	close: function() {
 		
+		if(this.phonedrawer.mojo.getOpenState()) {
+			this.controller.hideWidgetContainer(this.controller.get('phonedetails'));
+			this.phonedrawer.mojo.setOpenState(false);
+		}
 		if (this.btdrawer.mojo.getOpenState()) {
 			this.clearBTList();			
 			this.controller.hideWidgetContainer(this.controller.get('btdetails'));
@@ -1070,7 +1181,27 @@ var DevicemenuAssistant = Class.create({
 			//this.controller.stageController.deactivate();
 		}
 		else {
+			this.controller.serviceRequest('palm://com.palm.connectionmanager', {
+				method: 'getstatus',
+				parameters: {},
+				onSuccess: function(response) {
+					if(response.wan.state === "disconnected") {
+						this.dataDisabled = "on";
+					} else if(response.wan.state === "connected") {
+						this.dataDisabled = "off";
+					}
+					this.setDataLabel();
+				}.bind(this)
+			});
 			this.isVisible = true;
+			this.controller.serviceRequest('palm://com.palm.telephony', {
+				method: 'roamModeQuery',
+				parameters: {},
+				onSuccess: function(response) {
+					this.roamStatus = response.extended.mode;
+					this.setRoamLabel();
+				}.bind(this)
+			});
 			var date = new Date();		
 			this.controller.get('dm_date').innerHTML = Mojo.Format.formatDate(date,{date:'EEE '})  +  Mojo.Format.formatDate(date,{date:'long'});
 			
diff --git a/usr/lib/luna/system/luna-systemui/app/views/devicemenu/devicemenu-scene.html b/usr/lib/luna/system/luna-systemui/app/views/devicemenu/devicemenu-scene.html
index d153a8d..f414ee6 100644
--- a/usr/lib/luna/system/luna-systemui/app/views/devicemenu/devicemenu-scene.html
+++ b/usr/lib/luna/system/luna-systemui/app/views/devicemenu/devicemenu-scene.html
@@ -97,6 +97,36 @@
 				
 				<div class="palm-section-divider"></div>
 				
+				<div class="palm-row" id="dm_phone" x-mojo-tap-highlight='momentary'><div class="palm-row-wrapper">
+					<div class="title truncating-text">
+						<div class="label right" id="phonemsg">&nbsp;</div>
+						<span x-mojo-loc=''>Phone</span>
+					</div>
+				</div></div>
+
+				<div id='phonedetails' x-mojo-element="Drawer">
+					<div class="palm-row first" x-mojo-tap-highlight='momentary'><div class="palm-row-wrapper">
+						<div id="phone_radio" class="title truncating-text">
+						</div>
+					</div></div>
+
+					<div class="palm-row" id="dm_data" x-mojo-tap-highlight='momentary'><div class="palm-row-wrapper">
+						<div class="title truncating-text">
+							<div class="label right" id="dataStatus">&nbsp;</div>
+							<span x-mojo-loc=''>Data Connection</span>
+						</div>
+					</div></div>
+
+					<div class="palm-row" id="dm_roam" x-mojo-tap-highlight='momentary'><div class="palm-row-wrapper">
+						<div class="title truncating-text">
+							<div class="label right" id="roamStatus">&nbsp;</div>
+							<span x-mojo-loc=''>Roaming</span>
+						</div>
+					</div></div>
+				</div>
+
+				<div class="palm-section-divider"></div>
+
 				<div id="dm_airplanemode" class="palm-row last menu-end" x-mojo-tap-highlight='momentary'><div class="palm-row-wrapper">
 					<div id="dm_airplanemode_status" class="title truncating-text">
 					 </div>
