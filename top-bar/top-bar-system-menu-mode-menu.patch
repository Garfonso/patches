--- .orig/usr/lib/luna/system/luna-systemui/app/controllers/bar-assistant.js
+++ /usr/lib/luna/system/luna-systemui/app/controllers/bar-assistant.js
@@ -3,6 +3,7 @@
 var BarAssistant = Class.create({
 	
 	setup: function() {
+		this.modeSwitcherConfig = {};
 						
 		this.showMSMWarning = false;
 		this.showMediaWarning = false;	
@@ -515,19 +516,19 @@
 
 showStatusMenu: function(edit) {
 
-//	var stageController = Mojo.Controller.getAppController().getStageProxy("StatusMenu");
-//	if (stageController) {
-//		this.hideSystemMenus("status");
-//		stageController.delegateToSceneAssistant("toggleStatusMenu", edit);			
-//	} else {
-//		this.statusMenuCreatedHandler = this.statusMenuCreated.bind(this);
-//		Mojo.Controller.getAppController().createStageWithCallback({name:"StatusMenu",lightweight: true}, 
-//			this.statusMenuCreatedHandler, "menu");
-//	}
+	var stageController = Mojo.Controller.getAppController().getStageProxy("StatusMenu");
+	if (stageController) {
+		this.hideSystemMenus("status");
+		stageController.delegateToSceneAssistant("toggleStatusMenu", edit);			
+	} else {
+		this.statusMenuCreatedHandler = this.statusMenuCreated.bind(this);
+		Mojo.Controller.getAppController().createStageWithCallback({name:"StatusMenu",lightweight: true}, 
+			this.statusMenuCreatedHandler, "menu");
+	}
 },
 
 statusMenuCreated: function(stageController) {
-//	stageController.pushScene('statusmenu',this);
+	stageController.pushScene('statusmenu',this);
 },
 
 // Today menu
@@ -656,6 +657,9 @@
 	
 	this.getRoamingPreference();
 		
+	//Subscribe to Mode Switcher configuration
+	this.initModeSwitcher();
+
 	//Get the Airplane Mode initial values
 	this.isAirplaneModeEnabled();
 						
@@ -744,11 +748,9 @@
 				this.carrierText = this.$L(payload.extended.networkName.escapeHTML());
 				this.carrierTextEnglish = payload.extended.networkName.escapeHTML();
 			} 
-				
-			if(this.statusText != null)
-				$('carrier').innerHTML = this.statusText;
-			else
-				$('carrier').innerHTML = this.carrierText;	 
+
+			this.updateModeSwitcherStatus();
+			
 			if(payload.extended.registration == 'home') {			
 				$('roaming').hide();
 			}								
@@ -1153,11 +1155,8 @@
 					this.carrierText = this.$L(networkMsg.networkName.escapeHTML());
 					this.carrierTextEnglish = networkMsg.networkName.escapeHTML();
 				}	
-					
-				if(this.statusText != null)
-					$('carrier').innerHTML = this.statusText;
-				else
-					$('carrier').innerHTML = this.carrierText;
+				
+				this.updateModeSwitcherStatus();	
 
 				this.simlocked = false;
 				
@@ -4716,6 +4715,87 @@
 	Mojo.Log.info("SystemUI-App Restore Reading from the Cookie " + this.appRestoreNeeded);
 },
 
+// Mode Switcher Support
+
+initModeSwitcher: function() {
+	this.modesConfigRequest = new Mojo.Service.Request("palm://com.palm.systemservice/", {
+		method: 'getPreferences', 
+		parameters: {"subscribe":true,"keys":["modeSwitcher", "modesConfig", 
+			"currentMode", "defaultMode", "modifierModes"]},
+		onSuccess: this.handleModeSwitcherUpdate.bind(this) });	
+},
+
+handleModeSwitcherUpdate: function(payload) {
+	if(payload.modeSwitcher != undefined) {
+		this.modeSwitcherConfig.modeSwitcher = payload.modeSwitcher;
+		
+		this.updateModeSwitcherStatus();
+	}
+		
+	if(payload.modesConfig != undefined) {
+		this.modeSwitcherConfig.modesConfig = payload.modesConfig;
+	}
+
+	if(payload.currentMode != undefined) {
+	 	if(payload.currentMode != "none")
+			this.modeSwitcherConfig.currentMode = payload.currentMode;
+		else
+			this.modeSwitcherConfig.currentMode = null;
+
+		this.updateModeSwitcherStatus();
+	}
+
+	if(payload.defaultMode != undefined) {
+	 	if(payload.defaultMode != "none")
+			this.modeSwitcherConfig.defaultMode = payload.defaultMode;
+		else
+			this.modeSwitcherConfig.defaultMode = null;
+	}
+	
+	if(payload.modifierModes != undefined) {
+		this.modeSwitcherConfig.modifierModes = payload.modifierModes;
+
+		this.updateModeSwitcherStatus();
+	}
+},
+
+//Updated the status text if neede.
+updateModeSwitcherStatus: function() {
+	if(!this.modeSwitcherConfig.currentMode) {
+		this.statusText = null;
+		$('carrier').innerHTML = this.carrierText;
+		$('carrier').style.color = "white";
+
+		return;
+	}	
+	
+	if(this.modeSwitcherConfig.modeSwitcher.modeLocked == "yes")
+		$('carrier').style.color = "yellow";
+	else
+		$('carrier').style.color = "white";
+				
+	if((this.modeSwitcherConfig.modifierModes) && 
+		(this.modeSwitcherConfig.modifierModes.length > 0))
+	{
+		if(this.modeSwitcherConfig.currentMode.type == "default")
+			this.statusText = this.carrierText + " +";
+		else
+			this.statusText = this.modeSwitcherConfig.currentMode.name + " +";
+	}
+	else {
+		if(this.modeSwitcherConfig.currentMode.type == "default")
+			this.statusText = this.carrierText;
+		else
+			this.statusText = this.modeSwitcherConfig.currentMode.name;
+	}
+
+	$('carrier').innerHTML = this.statusText;
+},
+
+//Returns the MS config. Called by Mode Menu.
+getModeSwitcherConfig: function() {	
+	return this.modeSwitcherConfig;
+},
 
 //  Main Variables
 	timeAMPM: true,
--- .orig/usr/lib/luna/system/luna-systemui/sources.json
+++ /usr/lib/luna/system/luna-systemui/sources.json
@@ -6,6 +6,9 @@
     "source": "app\/controllers\/bar-assistant.js"
   },  
   {
+    "source": "app\/controllers\/statusmenu-assistant.js"
+  },  
+  {
     "source": "app\/controllers\/devicemenu-assistant.js"
   },  
   {
