diff --git a/usr/lib/luna/system/luna-systemui/app/controllers/devicemenu-assistant.js b/usr/lib/luna/system/luna-systemui/app/controllers/devicemenu-assistant.js
index eef1fb2..77d6099 100644
--- a/usr/lib/luna/system/luna-systemui/app/controllers/devicemenu-assistant.js
+++ b/usr/lib/luna/system/luna-systemui/app/controllers/devicemenu-assistant.js
@@ -28,16 +28,16 @@ var DevicemenuAssistant = Foundations.Class.create({
 		//Add a touchable row class
 		this.controller.get('palm-device-menu').addClassName('palm-touch-rows-'+Mojo.Environment.DeviceInfo.touchableRows);
 			
-		var date = new Date();
-		this.controller.get('dm_date').innerHTML = Mojo.Format.formatDate(date,{date:'EEE '}) +  Mojo.Format.formatDate(date,{date:'long'});
 		var msg = $L("Battery: #{batlevel}");
 		this.controller.get('dm_battery').innerHTML = new Template(msg).evaluate({"batlevel": Mojo.Format.formatPercent(this.barAssistant.getBatteryLevel())});
+		this.controller.setupWidget('brightSlider', {minValue: 1, maxValue: 100}, this.brightModel = { value: 50});
 						
 		this.modesModel = {scrollbars: false, mode: "vertical"},
 		this.controller.setupWidget('devicescroller', {}, this.modesModel);
 		this.menuscroller = this.controller.get('devicescroller');
 		
 		this.drawerModel = {myOpenProperty:false};
+		this.controller.setupWidget('brightdetails', {modelProperty:'myOpenProperty'}, this.drawerModel);
 		this.controller.setupWidget('imedetails', {modelProperty:'myOpenProperty'}, this.drawerModel);
 		this.controller.setupWidget('wifidetails', {modelProperty:'myOpenProperty'}, this.drawerModel);
 		this.controller.setupWidget('btdetails', {modelProperty:'myOpenProperty'}, this.drawerModel);
@@ -91,10 +91,6 @@ var DevicemenuAssistant = Foundations.Class.create({
 		//Spinner for BT
 		this.controller.setupWidget('btSpinner', this.spinnerAttrs, this.btspinnerModel);
 			
-		if(this.barAssistant.getAirplaneMode()) 			
-			this.controller.get('dm_airplanemode_status').innerHTML = $L('Turn off Airplane Mode');
-		else
-			this.controller.get('dm_airplanemode_status').innerHTML = $L('Turn on Airplane Mode');
 		
 		var btstate = this.barAssistant.getCurrentBluetoothState();
 		if(btstate === 'Off') {
@@ -147,10 +143,18 @@ var DevicemenuAssistant = Foundations.Class.create({
 				setText: this.altCharSelected.bind(this)
 			};
 		}
+		this.controller.get("dm_vpn").style.display = "none";
+		var elem = this.controller.get("dm_vpn").previousSibling;
+		while(elem.innerHTML==null || elem.className.indexOf("palm-section-divider")<0)
+			elem = elem.previousSibling;
+		elem.style.display = "none";
+		this.controller.get("vpndetails").style.display = "none";
 	},
 	
 	activate: function() {
-		this.controller.get('dm_airplanemode').addEventListener(Mojo.Event.tap, this.toggleAirplaneMode.bind(this));
+		this.controller.get('brightSlider').addEventListener(Mojo.Event.propertyChange, this.handleBrightSlider.bindAsEventListener(this));
+		this.controller.get('brightRow').addEventListener(Mojo.Event.tap, this.handleBrightTap.bindAsEventListener(this));
+		this.controller.get('dm_gps').addEventListener(Mojo.Event.tap, this.toggleGPS.bindAsEventListener(this));
 		this.controller.get('wifilist').addEventListener(Mojo.Event.listTap,this.handleWiFiTap.bind(this));
 		this.controller.get('btlist').addEventListener(Mojo.Event.listTap,this.handleBTTap.bind(this));
 		this.controller.get('vpnlist').addEventListener(Mojo.Event.listTap,this.handleVPNTap.bind(this));		
@@ -175,6 +179,37 @@ var DevicemenuAssistant = Foundations.Class.create({
 	cleanup: function() {
 		Mojo.Log.error("Device Menu - Clean up called");
 	},	
+	
+	handleBrightTap: function(event) {
+		this.controller.get('brightdetails').mojo.setOpenState(!this.controller.get('brightdetails').mojo.getOpenState());
+	},
+
+	handleBrightSlider: function(event) {
+		this.controller.serviceRequest('palm://com.palm.display/control', {
+			method: 'setProperty',
+			parameters:{maximumBrightness:Math.round(event.value)}
+		});
+		this.controller.get('dm_brightness').innerText = "Brightness: " + Math.round(event.value) + "%";
+	},
+	
+	toggleGPS: function(event) {
+		this.gpsEnabled = !this.gpsEnabled;
+		this.controller.serviceRequest('palm://com.palm.location', {
+			method: 'setUseGps',
+			parameters: {
+				useGps: this.gpsEnabled
+			}
+		});
+		this.setGPSLabel();
+	},
+
+	setGPSLabel: function() {
+		if(this.gpsEnabled) {
+			this.controller.get('gpsStatus').innerText = "On";
+		} else {
+			this.controller.get('gpsStatus').innerText = "Off";
+		}
+	},
 			
 	wifiAPList: [],
 	btdeviceList: [],
@@ -200,12 +235,12 @@ var DevicemenuAssistant = Foundations.Class.create({
 		if(this.barAssistant.getAirplaneMode()) {
 			Mojo.Log.info("SystemUI - Turning off Airplane Mode - Device Menu");
 			this.barAssistant.setAirplaneMode(false);
-			this.controller.get('dm_airplanemode_status').innerHTML = $L('Turning off Airplane Mode');			
+			//this.controller.get('dm_airplanemode_status').innerHTML = $L('Turning off Airplane Mode');			
 		}			
 		else {
 			Mojo.Log.info("SystemUI - Turning on Airplane Mode - Device Menu");
 			this.barAssistant.setAirplaneMode(true);
-			this.controller.get('dm_airplanemode_status').innerHTML = $L('Turning on Airplane Mode');
+			//this.controller.get('dm_airplanemode_status').innerHTML = $L('Turning on Airplane Mode');
 		}
 		this.apModeInProgress = true;
 		this.toggleDeviceMenu.delay(0.2);		
@@ -216,21 +251,15 @@ var DevicemenuAssistant = Foundations.Class.create({
 		//this.apSpinnerModel.spinning = false;
 		//this.controller.modelChanged(this.apSpinnerModel);
 		
-		if(this.barAssistant.getAirplaneMode()) {
-			this.controller.get('dm_airplanemode_status').innerHTML = $L('Turn off Airplane Mode');			
-		}			
-		else {			
-			this.controller.get('dm_airplanemode_status').innerHTML = $L('Turn on Airplane Mode');
-		}
 		this.apModeInProgress = false;
 	},
 	
 	updateAirplaneModeProgress: function() {
 		if(this.barAssistant.getAirplaneMode()) {
-			this.controller.get('dm_airplanemode_status').innerHTML = $L('Turning on Airplane Mode');
+			//this.controller.get('dm_airplanemode_status').innerHTML = $L('Turning on Airplane Mode');
 		}			
 		else {
-			this.controller.get('dm_airplanemode_status').innerHTML = $L('Turning off Airplane Mode');
+			//this.controller.get('dm_airplanemode_status').innerHTML = $L('Turning off Airplane Mode');
 		}
 		this.apModeInProgress = true;
 	},
@@ -1063,7 +1092,7 @@ var DevicemenuAssistant = Foundations.Class.create({
 	},
 	
 	showVPN:function(available) {
-		if(available) {
+		if(false) {
 			this.controller.get('dm_vpn').show();
 			this.controller.showWidgetContainer(this.controller.get('dm_vpn'));
 		}
@@ -1263,6 +1292,7 @@ var DevicemenuAssistant = Foundations.Class.create({
 			this.controller.hideWidgetContainer(this.controller.get('wifidetails'));
 			this.wifidrawer.mojo.setOpenState(false);
 		}
+		this.controller.get('brightdetails').mojo.setOpenState(false);
 		if(this.vpndrawer.mojo.getOpenState()) {
 			this.controller.hideWidgetContainer(this.controller.get('vpndetails'));
 			this.vpndrawer.mojo.setOpenState(false);
@@ -1462,8 +1492,27 @@ var DevicemenuAssistant = Foundations.Class.create({
 		}
 		else {
 			this.isVisible = true;
-			var date = new Date();		
-			this.controller.get('dm_date').innerHTML = Mojo.Format.formatDate(date,{date:'EEE '})  +  Mojo.Format.formatDate(date,{date:'long'});
+			this.controller.serviceRequest('palm://com.palm.display/control', {
+				method: 'getProperty',
+				parameters:{properties:['maximumBrightness']},
+				onSuccess: function(response) {
+					if(response.maximumBrightness != undefined) {
+						this.brightModel.value = parseInt(response.maximumBrightness);
+						this.controller.modelChanged(this.brightModel);
+						this.controller.get('dm_brightness').innerText = "Brightness: " + response.maximumBrightness + "%";
+					} else {
+						this.controller.get('dm_brightness').innerText = "Brightness: ??%";
+					}
+				}.bind(this)
+			});
+			this.controller.serviceRequest('palm://com.palm.location', {
+				method: 'getUseGps',
+				parameters: {},
+				onSuccess: function(response) {
+					this.gpsEnabled = response.useGps;
+					this.setGPSLabel();
+				}.bind(this)
+			});
 			
 			if(this.turningOnBtRadio) {
 				this.btspinnerModel.spinning = true;
diff --git a/usr/lib/luna/system/luna-systemui/app/views/devicemenu/devicemenu-scene.html b/usr/lib/luna/system/luna-systemui/app/views/devicemenu/devicemenu-scene.html
index be38f0d..d0cce32 100644
--- a/usr/lib/luna/system/luna-systemui/app/views/devicemenu/devicemenu-scene.html
+++ b/usr/lib/luna/system/luna-systemui/app/views/devicemenu/devicemenu-scene.html
@@ -14,16 +14,18 @@
 		<div id="devicescroller" class="palm-popup-content" x-mojo-element="Scroller">       
 			<div class="palm-list">          
 				
-				<div class="palm-row first"><div class="palm-row-wrapper">
-					<div id="dm_date" class="title dim"></div>
-				</div></div>
-				
-				<div class="palm-section-divider">
-				</div> 
-				
-				<div class="palm-row"><div class="palm-row-wrapper">
-					<div id="dm_battery" class="title dim"></div>
-				</div></div> 
+					<div class="palm-row first"><div class="palm-row-wrapper">
+				 		<div id="dm_battery" class="title"></div>
+				 	</div></div>
+ 				 	<div class="palm-section-divider"></div>
+				 	<div class="palm-row" id="brightRow" x-mojo-tap-highlight='momentary'><div class="palm-row-wrapper">
+						<div id="dm_brightness" class="title"></div>
+				 	</div></div>
+				 	<div id="brightdetails" x-mojo-element="Drawer">
+					 	<div class="palm-row first"><div class="palm-row-wrapper">
+						 	<div x-mojo-element="Slider" id="brightSlider" style="padding-top: 30px; height: 50px;"></div>
+					 	</div></div>
+				 	</div>
 
 				<div class="palm-section-divider"></div>
 				
@@ -159,9 +161,11 @@
 				</div>	
 				
 				<div class="palm-section-divider"></div>
-				
-				<div id="dm_airplanemode" class="palm-row last menu-end" x-mojo-tap-highlight='momentary'><div class="palm-row-wrapper">
-					<div id="dm_airplanemode_status" class="title truncating-text">
+
+				 <div class="palm-row last menu-end" id="dm_gps" x-mojo-tap-highlight='momentary'><div class="palm-row-wrapper">
+					 <div class="title truncating-text">
+						 <div class="label right" id="gpsStatus">&nbsp;</div>
+						 <span x-mojo-loc=''>GPS</span>
 					 </div>
 				</div></div>   
 				
