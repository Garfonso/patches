This patch adds the capability to delete email from the new email notification bar.

12-21-09:
Fixed bug with notification stage not being cleared if all-inboxes were set to on.

11-23-09:
Handle deletes better - now clear stage after every delete
Fix single-email-template for line that was to long aparently.

11-05-09:
Updated for 1.3.1
Moved trash can icon to right side

diff --git a/usr/palm/applications/com.palm.app.email/app/controllers/email-dashboard-assistant.js b/usr/palm/applications/com.palm.app.email/app/controllers/email-dashboard-assistant.js
index 479f88e..5ed5db1 100644
--- a/usr/palm/applications/com.palm.app.email/app/controllers/email-dashboard-assistant.js
+++ b/usr/palm/applications/com.palm.app.email/app/controllers/email-dashboard-assistant.js
@@ -50,13 +50,27 @@ var EmailDashboardAssistant = Class.create({
 			target = target.up('div.email-dashboard-tap-target');
 		}
 
+		var tDelete = false;
+
+		//check to see if the trash icon was tapped
+		if ( target.hasClassName('email-dashboard-tap-target-delete')) {
+			tDelete = true;
+		}
+
 		if (target) {
 			var accountId = target.readAttribute('accountid');
 			Mojo.Log.info("EmailDashboardAssistant.tapHandler found target accountid="+accountId);
 			if (accountId == "single") {
 				var folderId = target.readAttribute('folderid');
 				var messageId = target.readAttribute('messageid');
+				if(tDelete)
+				{
+					this.deleteSingleMessage(accountId, folderId, messageId);
+				}
+				else
+				{
 				this.showSingleMessage(accountId, folderId, messageId);
+				}
 			} else if (accountId == "all") {
 				this.showAccount(); // just display the account scene
 			} else {
@@ -162,6 +176,51 @@ var EmailDashboardAssistant = Class.create({
 	                });
 	},
 
+	deleteSuccess: function(account, folder, message) {
+		//try to sync so that we get notified of the delete and the notification gets updated
+		Folder.syncFolder(folder, true);
+	},
+
+	deleteFailure: function(account, folder, message) {
+		//if we failed it is likely due to not getting the delete msg back from the server so we didnt remove the already deleted email notification
+
+		//set the ignoreClear flag so that the new email timestamp doesnt get set
+		//this will allow for us to close the stage but when the next update comes through we will still have all the unread emails to work with
+		this.ignoreClear = true;
+                if (this.notificationAssistant.allInboxesOn) {
+                        this.notificationAssistant.closeEmailDashboard();
+                }
+                else
+                {
+                        this.notificationAssistant.closeEmailDashboard(this.notifications[0]);
+                }
+
+		//try to sync the folder to get any updates
+		Folder.syncFolder(folder, true);
+	},
+
+	deleteSingleMessage: function(account, folder, message) {
+		var deleteReq = new Mojo.Service.Request('palm://com.palm.mail', {
+			method: 'setDeleted',
+			parameters: {'message':message, 'value': true },
+			onSuccess: this.deleteSuccess.bind(this, account, folder, message),
+			onFailure: this.deleteFailure.bind(this, account, folder, message)
+		});
+
+		//So should not need to do this but many have reported the emails not deleting due to issues with synchronization after 1.3.1 update
+		//So lets try to send the delete twice.
+//		var deletï¿½eReq = new Mojo.Service.Request('palm://com.palm.mail', {
+//			method: 'setDeleted',
+//			parameters: {'message':message, 'value': true },
+//			onSuccess: this.deleteSuccess.bind(this, account, folder, message),
+//			onFailure: this.deleteFailure.bind(this, account, folder, message)
+//		});
+
+		//Since we are not consistently getting the message back from the server that something was deleted so that the notification bar
+		//gets updated go ahead and close it if we get the message the notification bar will come back up. Truly sucks that it doesnt always give us$
+		this.deleteFailure(account, folder, message);
+	},
+
 	showFolder: function(accountId, folderId, resp) {
 		var folderInfo = { folderId: folderId,
 		                   accountId: accountId,
Index: /usr/palm/applications/com.palm.app.email/app/views/email-dashboard/multiple-accounts-template.html
===================================================================
--- .orig/usr/palm/applications/com.palm.app.email/app/views/email-dashboard/multiple-accounts-template.html
+++ /usr/palm/applications/com.palm.app.email/app/views/email-dashboard/multiple-accounts-template.html
@@ -5,7 +5,11 @@
     </div>
      <div class="palm-dashboard-icon email">
      </div>
-  </div>   
+  </div> 
+  <div class="palm-dashboard-icon-container email-dashboard-tap-target email-dashboard-tap-target-delete" style="float: right; margin-left: 4px;" accountid="single" folderid="#{folder}" messageid="#{message}">
+	<div class="palm-dashboard-icon delete">
+	</div>
+  </div>
   <div class="palm-dashboard-text-container email-dashboard-tap-target" accountid="single" folderid="#{folder}" messageid="#{message}">
      <div class="dashboard-title">
       #{from}
Index: /usr/palm/applications/com.palm.app.email/app/views/email-dashboard/single-account-template.html
===================================================================
--- .orig/usr/palm/applications/com.palm.app.email/app/views/email-dashboard/single-account-template.html
+++ /usr/palm/applications/com.palm.app.email/app/views/email-dashboard/single-account-template.html
@@ -5,6 +5,10 @@
     </div>
      <div class="palm-dashboard-icon #{accountDomain}">
      </div>
+  </div> 
+  <div class="palm-dashboard-icon-container email-dashboard-tap-target email-dashboard-tap-target-delete" style="float: right; margin-left: 4px;" accountid="single" folderid="#{folder}" messageid="#{message}">
+	<div class="palm-dashboard-icon delete">
+        </div>
   </div>   
   <div class="palm-dashboard-text-container email-dashboard-tap-target" accountid="single" folderid="#{folder}" messageid="#{message}">
      <div class="dashboard-title">
Index: /usr/palm/applications/com.palm.app.email/app/views/email-dashboard/single-email-template.html
===================================================================
--- .orig/usr/palm/applications/com.palm.app.email/app/views/email-dashboard/single-email-template.html
+++ /usr/palm/applications/com.palm.app.email/app/views/email-dashboard/single-email-template.html
@@ -1,8 +1,13 @@
-<div class="dashboard-notification-module single">
+<div class="dashboard-notification-module">
   <div class="palm-dashboard-icon-container email-dashboard-tap-target" accountid="#{account}">
      <div class="palm-dashboard-icon #{accountDomain}">
      </div>
   </div>   
+  <div class="palm-dashboard-icon-container email-dashboard-tap-target email-dashboard-tap-target-delete" style="float: right; margin-left: 4px;" 
+  		accountid="single" folderid="#{folder}" messageid="#{message}">
+        <div class="palm-dashboard-icon delete">
+	</div>
+  </div>
   <div class="palm-dashboard-text-container email-dashboard-tap-target" accountid="single" folderid="#{folder}" messageid="#{message}">
      <div class="dashboard-title">
       #{from}
Index: /usr/palm/applications/com.palm.app.email/stylesheets/notifications.css
===================================================================
--- .orig/usr/palm/applications/com.palm.app.email/stylesheets/notifications.css
+++ /usr/palm/applications/com.palm.app.email/stylesheets/notifications.css
@@ -78,3 +78,9 @@ Copyright 2009 Palm, Inc.  All rights re
 .palm-dashboard-icon.gmail			{ background: url(../images/notification-large-gmail.png) center left no-repeat; }
 .palm-dashboard-icon.yahoo			{ background: url(../images/notification-large-yahoo.png) center left no-repeat; }
 .palm-dashboard-icon.aol			{ background: url(../images/notification-large-aol.png) center left no-repeat; }
+
+/*To support delete of email from notification*/
+.palm-dashboard-icon.delete                        { background: url(../images/icon_trash.png) center center no-repeat; }
+
+.email-dashboard-tap-target-delete {
+}
Index: /usr/palm/applications/com.palm.app.email/app/controllers/notification-assistant.js
===================================================================
--- .orig/usr/palm/applications/com.palm.app.email/app/controllers/notification-assistant.js
+++ /usr/palm/applications/com.palm.app.email/app/controllers/notification-assistant.js
@@ -20,7 +20,7 @@ var NotificationAssistant = Class.create
 		// sending broadcast and dashboard updates when the user would see it because of the
 		// scene he's in.
 		this.filter = {};
-		this.newMailDeferralTimeout = 7;
+		this.newMailDeferralTimeout = 0;//7;
   	},
 
 	windowBlurFocusHandler: function(event) {
@@ -157,8 +157,10 @@ var NotificationAssistant = Class.create
 
 			var folderObj;
 			var listIndex;
+			
 			for (listIndex = 0; listIndex < resp.list.length; ++listIndex) {
 				folderObj = resp.list[listIndex];
+				
 				if (this.shouldDoNotification(folderObj)) {
 					// Add to the UI model only if notify is set and the count shows there's items to add
 					if (folderObj.notify === true && folderObj.count > 0) {
@@ -168,6 +170,7 @@ var NotificationAssistant = Class.create
 					// Logic for sound: AccountpreferencesAssistant.kNotifyTypeAudio is highest
 					// priority and trumps all other sound types.
 					if (folderObj.hasNew === true && 
+
 					    folderObj.playSound !== AccountpreferencesAssistant.kNotifyTypeNone &&
 					    playSound !== AccountpreferencesAssistant.kNotifyTypeAudio) {
 
@@ -636,10 +639,10 @@ var NotificationAssistant = Class.create
 			// displayActive and displayDimmed
 			if (data.event == 'displayOff') {
 				this.displayOff = true;
-				this.newMailDeferralTimeout = 0.5;
+				this.newMailDeferralTimeout = 0;//0.5;
 			} else if (data.event == 'displayOn') {
 				this.displayOff = false;
-				this.newMailDeferralTimeout = 7;
+				this.newMailDeferralTimeout = 0;//7;
 			}
 
 			Mojo.Log.info("displayUpdate displayOff", this.displayOff, "event", data.event);
