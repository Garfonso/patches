diff --git a/media/cryptofs/apps/usr/palm/applications/com.palm.app.email/compose/source/Compose.js b/media/cryptofs/apps/usr/palm/applications/com.palm.app.email/compose/source/Compose.js
index 17628d0..6299186 100644
--- a/media/cryptofs/apps/usr/palm/applications/com.palm.app.email/compose/source/Compose.js
+++ b/media/cryptofs/apps/usr/palm/applications/com.palm.app.email/compose/source/Compose.js
@@ -461,6 +461,7 @@ enyo.kind({
 		
 		// Construct body
 		var msgText = this.$.bodyInput.getHtml();
+
 		var smartText = null;
 		
 		var originalText = "";
@@ -500,8 +501,25 @@ enyo.kind({
 		// editedOriginal is set to true if the original was edited OR if we just want to disable SmartReply/SmartForward
 		draftEmail.data.flags.editedOriginal = editedOriginal;
 		
+		// Quick strip: replace <br> and <p> with newline and then strip all html tags
+		var msgPlainText = msgText.replace(/(<br>|<p>)/g, "\n");
+		// bbito: WebOS2 used Foundations.StringUtils.stripTags - Don't think it is available in WebOS3
+		msgPlainText = msgPlainText.replace(/<\/?[^>]+>/gi, '');
+		// bbito: hoping String.prototype.unescapeHTML from util.js is available here - otherwise we'll use the replaces below.
+		msgPlainText = msgPlainText.unescapeHTML();
+		// bbito: replace non-breaking space with regular space
+		msgPlainText = msgPlainText.replace(/&nbsp;/g, ' ');
+		/*
+		// bbito: replace html entity: &amp;
+		msgPlainText = msgPlainText.replace(/&amp;/g, '&');
+		// bbito: replace html entity: &lt;
+		msgPlainText = msgPlainText.replace(/&lt;/g, '<');
+		// bbito: replace html entity: &gt;
+		msgPlainText = msgPlainText.replace(/&gt;/g, '>');
+		*/
+		
 		// Update the body text parts
-		draftEmail.setBodyContent(msgText, undefined, smartText);
+		draftEmail.setBodyContent(msgText, msgPlainText, smartText);
 	},
 	
 	_addRecipients: function(addrs, type, recipients) {
