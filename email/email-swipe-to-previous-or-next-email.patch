diff --git a/usr/palm/applications/com.palm.app.email/app/controllers/message-assistant.js b/usr/palm/applications/com.palm.app.email/app/controllers/message-assistant.js
index 7e52e36..08e60a4 100644
--- a/usr/palm/applications/com.palm.app.email/app/controllers/message-assistant.js
+++ b/usr/palm/applications/com.palm.app.email/app/controllers/message-assistant.js
@@ -87,7 +87,8 @@ var MessageAssistant = function(params, focusStage, detailsObj){
 	this.handleWebViewSingleTap = this.handleWebViewSingleTap.bind(this);
 	this.handleDOMClicked = this.handleDOMClicked.bind(this);
 	this.handleMessageDownloadRetry = this.handleMessageDownloadRetry.bind(this);
-	
+	this.previousEmailSwipeControl = true;
+	this.reverseSwipeControl = false;
 	this.displayContactAvatarAndPresence = this.displayContactAvatarAndPresence.bind(this);
 	
 	this.pendingComposeActions = [];
@@ -126,6 +127,17 @@ var MessageAssistant = function(params, focusStage, detailsObj){
 		this._hookupEventListeners();
         this._orientationChanged(this.positions[this.lastPosition]);
 		//window.logger.log("MessageAssistant setup done");
+	
+		//Tweaks Setup for Swipe Controls
+		this.controller.serviceRequest("palm://org.webosinternals.tweaks.prefs/", {method: "get", 
+		parameters: {owner: "org.webosinternals.patches.swipe-to-previous-or-next-email",
+			keys: ["previousEmailSwipeControl", "reverseSwipeControl"]},
+			onSuccess: function(response) {
+				if((response) && (response.previousEmailSwipeControl != undefined))
+						this.previousEmailSwipeControl = response.previousEmailSwipeControl;
+				if((response) && (response.reverseSwipeControl != undefined))
+						this.reverseSwipeControl = response.reverseSwipeControl;
+			}.bind(this)});
 	};
 	
 	MessageAssistant.prototype._setupMenus = function() {
@@ -211,6 +223,8 @@ var MessageAssistant = function(params, focusStage, detailsObj){
 		Mojo.Log.warn("Need to put scroll listening code back");
 		Mojo.Event.listen(this.controller.getSceneScroller(), Mojo.Event.scrollStarting, this.addAsScrollListener.bind(this));
 		
+		Mojo.Event.listen(this.controller.document, Mojo.Event.flick, this.flickHandler.bind(this));
+		
 		this.subjectElement = this.controller.get('email_subject');
 		this.readViewContainer = this.controller.get('email-readview-content-container');
         this.controller.listen(this.controller.document, 'orientationchange', this.handleOrientationChangedEvent);
@@ -2430,6 +2444,26 @@ MessageAssistant.prototype._getAttachmentById = function(id) {
 		}
 	};
 
+	MessageAssistant.prototype.flickHandler = function(event) {
+	console.info('Swipe Detected')
+		if(this.reverseSwipeControl == false){
+			if(this.previousEmailSwipeControl == true){
+				if (event.velocity.x > 0)
+					this.boundGotoNextEmailNewer();
+				else 
+					this.boundGotoNextEmailOlder();
+			}
+		}
+		else {
+			if(this.previousEmailSwipeControl == true){
+				if (event.velocity.x < 0)
+					this.boundGotoNextEmailNewer();
+				else 
+					this.boundGotoNextEmailOlder();
+			}
+		}
+	};
+	
 	MessageAssistant.prototype.gotoNextEmail = function(direction) {
 		if (this.nextMessages !== undefined && this.nextMessages[direction] !== undefined) {
 			Mojo.Log.info("### we have emails in the desired direction");
