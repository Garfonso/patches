Adds delete all and read buttons to email folders
Index: /usr/palm/applications/com.palm.app.email/app/controllers/list-assistant.js
===================================================================
--- .orig/usr/palm/applications/com.palm.app.email/app/controllers/list-assistant.js
+++ /usr/palm/applications/com.palm.app.email/app/controllers/list-assistant.js
@@ -33,6 +33,8 @@ var ListAssistant = Class.create(App.Sce
 			visible:true,
 			items: [
 				{label:$L('Compose'), icon:'compose', command:'compose'},
+				{label:$L('Delete All'), icon:'delete', command:'deleteall'},
+				{label:$L('All Read'), icon:'priority', command:'readall'},
 				{},
 				{label:$L('Update'), icon:'sync', command:'sync'}
 			]};
@@ -166,6 +168,14 @@ var ListAssistant = Class.create(App.Sce
 			case 'sync':
 				this.handleSyncFolder();
 				break;
+				
+			case 'deleteall':
+				this.handleDeleteAll();
+				break;
+
+			case 'readall':
+				this.handleReadAll();
+				break;
 
 			case Mojo.Menu.prefsCmd:
 				MenuController.showPrefs(this.controller.stageController);
@@ -182,6 +192,109 @@ var ListAssistant = Class.create(App.Sce
 		event.stopPropagation();
 	}
   },
+  
+  handleDeleteAllResponse: function (event) {
+        this.deleteAll();
+  },
+
+  deleteAll: function(){
+  	var count = this.emailListElement.mojo.getLength();
+	var id;
+	if(count > 0) 
+	{	
+		var item = this.emailListElement.mojo.getNodeByIndex(0);	
+		if(item !== undefined)
+		{
+		   id = item.id;
+		   if(id)
+		   {
+			this.controller.serviceRequest(Email.identifier, {
+			        	method: 'setDeleted',
+			                parameters: {'message':id, 'value': true },
+			                onSuccess: this.handleDeleteAllResponse.bind(this),
+			                onFailure: this.handleDeleteAllResponse.bind(this)
+	             			});
+	     	   }
+		}
+		else
+		{
+			this.deleteAll();			
+		}
+	}
+  },
+
+  handleDeleteAll: function (event) {
+	var totalCount = 0;
+	totalCount = this.emailListElement.mojo.getLength();
+	if (totalCount > 0) {
+					this.controller.showAlertDialog({
+                             onChoose: function(value) {
+  	                              		if(value == 'yes') {
+							this.deleteAll();
+	                        	        	}
+						},
+	                                	title: '<b>' + $L('Delete All') + '</b>',
+                      				message: $L('Are you sure you want to delte all ') + "<b>" + totalCount + "</b>" + $L(' items in this folder?'),
+                       				choices: [
+                               				{label:$L('Yes'), value:'yes', type:'affirmative'},
+                                    			{label:$L('No'), value:'no', type:'alert'}
+                                                 	]
+                			});
+               	}
+  },
+
+  handleReadAllResponse: function (event) {
+  },
+
+  readAll: function(tleft){
+  	var count = this.emailListElement.mojo.getLength();
+	var id;
+	while(tleft > 0) 
+	{	
+		var item = this.emailListElement.mojo.getNodeByIndex((tleft - 1));	
+		if(item !== undefined)
+		{
+		   id = item.id;
+		   if(id)
+		   {
+			this.controller.serviceRequest(Email.identifier, {
+			        	method: 'setRead',
+			                parameters: {'message':id, 'value': true },
+			                onSuccess: this.handleReadAllResponse.bind(this),
+			                onFailure: this.handleReadAllResponse.bind(this)
+	             			});
+	     	}
+	     	tleft = tleft - 1;
+		}
+		else
+		{
+			tleft = tleft - 1;
+		}
+	}	
+  },
+  
+
+  handleReadAll: function (event) {
+   		var totalCount = 0;
+		totalCount = this.emailListElement.mojo.getLength();
+		if (totalCount > 0) {
+			this.controller.showAlertDialog({
+        	    onChoose: function(value) {
+  	        		if(value == 'yes') {
+  	        				var tleft = totalCount;
+							this.readAll(tleft);
+	               	}
+				},
+	               	title: '<b>' + $L('All Read') + '</b>',
+                	message: $L('Are you sure you want to mark ') + "<b>" + totalCount + "</b>" + $L(' items in this folder read?'),
+                    choices: [
+                    	{label:$L('Yes'), value:'yes', type:'affirmative'},
+                        {label:$L('No'), value:'no', type:'alert'}
+                    ]
+        		});
+  		}
+  },
+
 	
   handleSend: function() {
 	MenuController.showComposeView(null, this.folderObj.login);
