diff --git a/usr/palm/applications/com.palm.app.email/app/controllers/compose-assistant.js b/usr/palm/applications/com.palm.app.email/app/controllers/compose-assistant.js
index 461cba0..6d6d227 100644
--- a/usr/palm/applications/com.palm.app.email/app/controllers/compose-assistant.js
+++ b/usr/palm/applications/com.palm.app.email/app/controllers/compose-assistant.js
@@ -799,8 +799,7 @@ ComposeAssistant.onLoad = function(controller, email) {
 	if (email.action == "forward") {
 		controller.get('forwarded_msg_body').update(originalText);
 	} else {
-		bodyText += originalText;
-		editor.setStyle({'min-height':'320px', 'font-size': '18px'});
+		controller.get('forwarded_msg_body').update(originalText);
 	}
 	editor.update(bodyText);
 	
@@ -847,6 +846,6 @@ ComposeAssistant.replaceURIs = function(originalText, email) {
 
 ComposeAssistant.kAppMenuHighPriority = $L('Set as High Priority');
 ComposeAssistant.kAppMenuNormalPriority = $L('Set as Normal Priority');
-ComposeAssistant.kEmptySignatureRegex = /<span id="signature"><div style="font-family: arial, sans-serif; font-size: 12px;color: #999999;">[<br>]*<\/div>[<br>]*<\/span>/
+ComposeAssistant.kEmptySignatureRegex = /<span id="signature"><div style="font-family: Calibri, sans-serif; font-size: 15px;color: #999999;">[<br>]*<\/div>[<br>]*<\/span>/
 ComposeAssistant.kForwardDraftDelimeter = "<span id='FORWARD_DRAFT_TEXT' class='display:none'></span>"; 
 
diff --git a/usr/palm/applications/com.palm.app.email/app/models/Email.js b/usr/palm/applications/com.palm.app.email/app/models/Email.js
index 68953d4..e791b1f 100644
--- a/usr/palm/applications/com.palm.app.email/app/models/Email.js
+++ b/usr/palm/applications/com.palm.app.email/app/models/Email.js
@@ -159,7 +159,7 @@ var Email = Class.create({
 							if (r.displayName === r.address) 
 								toStr = r.displayName;
 							else 
-								toStr = "#{displayName} <#{address}>".interpolate(r);
+								toStr = "#{displayName}".interpolate(r);
 							toAddressList.push(toStr);
 						}
 					} else if (r.role === EmailRecipient.roleCc) {
@@ -168,7 +168,7 @@ var Email = Class.create({
 							if (r.displayName === r.address) 
 								ccStr = r.displayName;
 							else 
-								ccStr = "#{displayName} <#{address}>".interpolate(r);
+								ccStr = "#{displayName}".interpolate(r);
 							ccAddressList.push(ccStr);
 						}
 					}
@@ -180,20 +180,34 @@ var Email = Class.create({
 					this.text += $L("<b>From:</b> ") + "#{displayName}".interpolate(fromObj).escapeHTML() + "<br/>";
 				}
 				else {
-					this.text += $L("<b>From:</b> ") + "#{displayName} <#{address}>".interpolate(fromObj).escapeHTML() + "<br/>" 
+					this.text += $L("<b>From:</b> ") + "#{displayName}".interpolate(fromObj).escapeHTML() + "<br/>" 
 				};
-				this.text += $L("<b>Date:</b> ") + Mojo.Format.formatDate(new Date(parseInt(original.timeStamp)), {date:'medium', time:'short'}) + "<br/>";
-				this.text += $L("<b>Subject:</b> #{summary}").interpolate(original) + "<br/>";
+				this.text += $L("<b>Sent:</b> ") + Mojo.Format.formatDate(new Date(parseInt(original.timeStamp)), {date:'full', time:'short'}) + "<br/>";
 				if (toAddressList.length > 0) {
 					this.text += $L("<b>To:</b> ") + "#{list}".interpolate({list:toAddressList.join("; ")}).escapeHTML() + "<br/>";
 				}
 				if (ccAddressList.length > 0) {
-					this.text += $L("<b>CC:</b> ") + "#{list}".interpolate({list:ccAddressList.join("; ")}).escapeHTML() + "<br/>";
+					this.text += $L("<b>Cc:</b> ") + "#{list}".interpolate({list:ccAddressList.join("; ")}).escapeHTML() + "<br/>";
 				}
+				this.text += $L("<b>Subject:</b> #{summary}").interpolate(original) + "<br/>";
 				this.text += "<br/>";
 			} else {
 				this.text = Email.kReplyForwardSetupElems;
-				this.text += $L("#{displayName} wrote:").interpolate(fromObj) + "<br/><br/>";
+				if (fromObj.displayName === fromObj.address) {
+					this.text += $L("<b>From:</b> ") + "#{displayName}".interpolate(fromObj).escapeHTML() + "<br/>";
+				}
+				else {
+					this.text += $L("<b>From:</b> ") + "#{displayName}".interpolate(fromObj).escapeHTML() + "<br/>" 
+				};
+				this.text += $L("<b>Sent:</b> ") + Mojo.Format.formatDate(new Date(parseInt(original.timeStamp)), {date:'full', time:'short'}) + "<br/>";
+				if (toAddressList.length > 0) {
+					this.text += $L("<b>To:</b> ") + "#{list}".interpolate({list:toAddressList.join("; ")}).escapeHTML() + "<br/>";
+				}
+				if (ccAddressList.length > 0) {
+					this.text += $L("<b>Cc:</b> ") + "#{list}".interpolate({list:ccAddressList.join("; ")}).escapeHTML() + "<br/>";
+				}
+				this.text += $L("<b>Subject:</b> #{summary}").interpolate(original) + "<br/>";
+				this.text += "<br/>";
 			}
 			this.originalText = original.text;
 		} else {
@@ -334,7 +348,7 @@ var Email = Class.create({
 		else if (this.action == "reply" || this.action == "replyAll") {
 			Message.setReplied(this.id, true);
 			// No SmartReply in version 1.0
-			//params.replyMessage = this.id;
+			params.replyMessage = this.id;
 		}
 
 		// Quick strip: replace <br> and <p> with newline and then strip all html tags
@@ -367,8 +381,8 @@ Email.getPriorityClass = function(priority) {
 	return priority;
 }
 
-Email.kSignaturePlaceholder = "<span style='font-family:Prelude, Verdana, san-serif;'><br><br></span><span id='signature'></span>";
-Email.kReplyForwardSetupElems = "<br><br>" + Email.kSignaturePlaceholder + "<span style='color:navy; font-family:Prelude, Verdana, san-serif; '><hr align='left' style='width:75%'/>";
+Email.kSignaturePlaceholder = "<span style='font-family:Prelude, Calibri, san-serif; font-size:15px; color: #1F497D;'><br><br></span><span id='signature'></span>";
+Email.kReplyForwardSetupElems = "<span style='font-family:Prelude, Calibri, san-serif; font-size:15px'>" + Email.kSignaturePlaceholder + "<hr align='left' style='width:75%'/>";
 
 Email.kSubjectPrefixRe = $L("Re: ");
 Email.kSubjectPrefixFw = $L("Fw: ");
