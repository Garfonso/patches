diff --git a/usr/palm/applications/com.palm.app.email/app/controllers/compose-assistant.js b/usr/palm/applications/com.palm.app.email/app/controllers/compose-assistant.js
index e4f2e91..0df6e82 100644
--- a/usr/palm/applications/com.palm.app.email/app/controllers/compose-assistant.js
+++ b/usr/palm/applications/com.palm.app.email/app/controllers/compose-assistant.js
@@ -1212,6 +1212,6 @@ ComposeAssistant.replaceURIs = function(originalText, email) {
 ComposeAssistant.kForwardAction = 'forward';
 ComposeAssistant.kAppMenuHighPriority = $L('Set as High Priority');
 ComposeAssistant.kAppMenuNormalPriority = $L('Set as Normal Priority');
-ComposeAssistant.kEmptySignatureRegex = /<span id="signature"><div style="font-family: arial, sans-serif; font-size: 12px;color: #999999;">[<br>]*<\/div>[<br>]*<\/span>/
+ComposeAssistant.kEmptySignatureRegex = /<span id="signature"><div style="font-family: Calibri, sans-serif; font-size: 15px;color: #999999;"><\/span>/
 ComposeAssistant.kForwardDraftDelimeter = "<span id='FORWARD_DRAFT_TEXT' class='display:none'></span>"; 
 
diff --git a/usr/palm/applications/com.palm.app.email/app/models/Email.js b/usr/palm/applications/com.palm.app.email/app/models/Email.js
index 7a69e15..55f2e79 100644
--- a/usr/palm/applications/com.palm.app.email/app/models/Email.js
+++ b/usr/palm/applications/com.palm.app.email/app/models/Email.js
@@ -159,7 +159,7 @@ var Email = Class.create({
 							if (r.displayName === r.address) 
 								toStr = r.displayName;
 							else 
-								toStr = "#{displayName} <#{address}>".interpolate(r);
+								toStr = "#{displayName}".interpolate(r);
 							toAddressList.push(toStr);
 						}
 					} else if (r.role === EmailRecipient.roleCc) {
@@ -168,7 +168,7 @@ var Email = Class.create({
 							if (r.displayName === r.address) 
 								ccStr = r.displayName;
 							else 
-								ccStr = "#{displayName} <#{address}>".interpolate(r);
+								ccStr = "#{displayName}".interpolate(r);
 							ccAddressList.push(ccStr);
 						}
 					}
@@ -180,17 +180,16 @@ var Email = Class.create({
 					this.text += $L("<b>From:</b> ") + "#{displayName}".interpolate(fromObj).escapeHTML() + "<br/>";
 				}
 				else {
-					this.text += $L("<b>From:</b> ") + "#{displayName} <#{address}>".interpolate(fromObj).escapeHTML() + "<br/>" 
+					this.text += $L("<b>From:</b> ") + "#{displayName}".interpolate(fromObj).escapeHTML() + "<br/>" 
 				};
-				this.text += $L("<b>Date:</b> ") + Mojo.Format.formatDate(new Date(parseInt(original.timeStamp)), {date:'medium', time:'short'}) + "<br/>";
-				this.text += $L("<b>Subject:</b> #{summary}").interpolate(original) + "<br/>";
+				this.text += $L("<b>Sent:</b> ") + Mojo.Format.formatDate(new Date(parseInt(original.timeStamp)), {date:'full', time:'short'}) + "<br/>";				
 				if (toAddressList.length > 0) {
 					this.text += $L("<b>To:</b> ") + "#{list}".interpolate({list:toAddressList.join("; ")}).escapeHTML() + "<br/>";
 				}
 				if (ccAddressList.length > 0) {
-					this.text += $L("<b>CC:</b> ") + "#{list}".interpolate({list:ccAddressList.join("; ")}).escapeHTML() + "<br/>";
+					this.text += $L("<b>Cc:</b> ") + "#{list}".interpolate({list:ccAddressList.join("; ")}).escapeHTML() + "<br/>";
 				}
-				this.text += "<br/>";
+				this.text += $L("<b>Subject:</b> #{summary}").interpolate(original) + "<br/>";				
 			} else {
 				
 				// reply case. Integrate header info with sentence
@@ -201,12 +200,36 @@ var Email = Class.create({
 				};
 				if (original.timeStamp) {
 					// <Month (short version)> <Day>,<Year> at <time>
-					strArgs.monthDate = Mojo.Format.formatDate(new Date(parseInt(original.timeStamp, 10)), {date:'medium', time:'short'});
-					this.text += $L("On #{monthDate}, #{displayName} <#{address}> wrote: ").interpolate(strArgs).escapeHTML();
+					if (fromObj.displayName === fromObj.address) {
+					this.text += $L("<b>From:</b> ") + "#{displayName}".interpolate(fromObj).escapeHTML() + "<br/>";
+				}
+				else {
+					this.text += $L("<b>From:</b> ") + "#{displayName}".interpolate(fromObj).escapeHTML() + "<br/>" 
+				};
+				this.text += $L("<b>Sent:</b> ") + Mojo.Format.formatDate(new Date(parseInt(original.timeStamp)), {date:'full', time:'short'}) + "<br/>";				
+				if (toAddressList.length > 0) {
+					this.text += $L("<b>To:</b> ") + "#{list}".interpolate({list:toAddressList.join("; ")}).escapeHTML() + "<br/>";
+				}
+				if (ccAddressList.length > 0) {
+					this.text += $L("<b>Cc:</b> ") + "#{list}".interpolate({list:ccAddressList.join("; ")}).escapeHTML() + "<br/>";
+				}
+				this.text += $L("<b>Subject:</b> #{summary}").interpolate(original) + "<br/>";
 				} else {
-					this.text += $L("#{displayName} <#{address}> wrote: ").interpolate(strArgs).escapeHTML();
+					if (fromObj.displayName === fromObj.address) {
+					this.text += $L("<b>From:</b> ") + "#{displayName}".interpolate(fromObj).escapeHTML() + "<br/>";
+				}
+				else {
+					this.text += $L("<b>From:</b> ") + "#{displayName}".interpolate(fromObj).escapeHTML() + "<br/>" 
+				};
+				this.text += $L("<b>Sent:</b> ") + Mojo.Format.formatDate(new Date(parseInt(original.timeStamp)), {date:'full', time:'short'}) + "<br/>";				
+				if (toAddressList.length > 0) {
+					this.text += $L("<b>To:</b> ") + "#{list}".interpolate({list:toAddressList.join("; ")}).escapeHTML() + "<br/>";
 				}
-				this.text += "<br><br>";
+				if (ccAddressList.length > 0) {
+					this.text += $L("<b>Cc:</b> ") + "#{list}".interpolate({list:ccAddressList.join("; ")}).escapeHTML() + "<br/>";
+				}
+				this.text += $L("<b>Subject:</b> #{summary}").interpolate(original) + "<br/>";
+				}				
 			}
 			this.originalText = original.text;
 		} else {
@@ -380,8 +403,8 @@ Email.getPriorityClass = function(priority) {
 	return priority;
 }
 
-Email.kSignaturePlaceholder = "<span style='font-family:Prelude, Verdana, san-serif;'><br><br></span><span id='signature'></span>";
-Email.kReplyForwardSetupElems = "<br><br>" + Email.kSignaturePlaceholder + "<span style='color:navy; font-family:Prelude, Verdana, san-serif; '><hr align='left' style='width:75%'/>";
+Email.kSignaturePlaceholder = "<span style='font-family:Prelude, Calibri, san-serif; font-size:15px; color:#1F497D;'><br></span><span id='signature'></span>";
+Email.kReplyForwardSetupElems = "<span style='font-family:Prelude, Calibri, san-serif; font-size:15px;'>" + Email.kSignaturePlaceholder + "<hr align='left' style='width:75%'/>";
 
 Email.kSubjectPrefixRe = $L("Re: ");
 Email.kSubjectPrefixFw = $L("Fw: ");
