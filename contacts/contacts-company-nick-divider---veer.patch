diff --git a/usr/palm/frameworks/contacts/submission/99/concatenated.js b/usr/palm/frameworks/contacts/submission/99/concatenated.js
new file mode 100644
index 0000000..dfe0578
--- /dev/null
+++ b/usr/palm/frameworks/contacts/submission/99/concatenated.js
@@ -0,0 +1 @@
+				sortKey = null;
diff --git a/usr/palm/frameworks/contacts/submission/99/concatenated.js.rej b/usr/palm/frameworks/contacts/submission/99/concatenated.js.rej
new file mode 100644
index 0000000..0fcc4bb
--- /dev/null
+++ b/usr/palm/frameworks/contacts/submission/99/concatenated.js.rej
@@ -0,0 +1,57 @@
+--- usr/palm/frameworks/contacts/submission/99/concatenated.js-
++++ usr/palm/frameworks/contacts/submission/99/concatenated.js
+@@ -12578,20 +12578,5 @@
+ 		sortKey = rawPersonObject.sortKey;
+-		if (sortOrder === ListWidget.SortOrder.firstLast || sortOrder === ListWidget.SortOrder.lastFirst) {
+-			//if there's a sort key and it doesn't start with the default character, use it
+-			if (sortKey && sortKey.slice(0, 1) !== SortKey.DEFAULT_CHAR) {
+-				dividerText = sortKey.slice(0, 1);
+-				
+-				//make the divider text accent-free and uppercase
+-				dividerText = Globalization.Locale.getBaseString(dividerText);
+-				
+-				//Some characters have a 2 character base
+-				dividerText = dividerText.slice(0, 1);
+-				
+-				//TODO: do this in CSS?
+-				rawPersonObject.dividerText = Globalization.Character.toUpperCase(dividerText);
+-			} else {
+-				//else we use the default divider text
+-				rawPersonObject.dividerText = SortKey.DEFAULT_NAME_DIVIDER_TEXT;
+-			}
+-		} else {
++		
++		var sortByCompany = (sortOrder === ListWidget.SortOrder.companyFirstLast || sortOrder === ListWidget.SortOrder.companyLastFirst);
++		if (sortByCompany) {
+ 			//if there's a sort key and it doesn't start with the default character, use it
+@@ -12621,3 +12607,30 @@
+ 				rawPersonObject.dividerText = Globalization.Character.toUpperCase(dividerText);
++				sortKey = sortKey.split(/\t/)[1];
++				if (sortKey && !Globalization.Character.isLetter(sortKey.substr(0, 1))) {
++					sortKey = SortKey.DEFAULT_CHAR + sortKey;
++				}
++			}
++		} else {
++			rawPersonObject.dividerText = '';
++		}
++
++		//if there's a sort key and it doesn't start with the default character, use it
++		if (sortKey && sortKey.slice(0, 1) !== SortKey.DEFAULT_CHAR) {
++			dividerText = sortKey.slice(0, 1);
++			
++			//make the divider text accent-free and uppercase
++			dividerText = Globalization.Locale.getBaseString(dividerText);
++			
++			//Some characters have a 2 character base
++			dividerText = dividerText.slice(0, 1);
++
++			if (sortByCompany) {
++				rawPersonObject.dividerText += ' - ';
+ 			}
++
++			//TODO: do this in CSS?
++			rawPersonObject.dividerText += Globalization.Character.toUpperCase(dividerText);
++		} else if (!sortByCompany) {
++			//else we use the default divider text
++			rawPersonObject.dividerText += SortKey.DEFAULT_NAME_DIVIDER_TEXT;
+ 		}
diff --git a/usr/palm/frameworks/contacts/submission/99/javascript/PersonDisplayLite.js b/usr/palm/frameworks/contacts/submission/99/javascript/PersonDisplayLite.js
new file mode 100644
index 0000000..dfe0578
--- /dev/null
+++ b/usr/palm/frameworks/contacts/submission/99/javascript/PersonDisplayLite.js
@@ -0,0 +1 @@
+				sortKey = null;
diff --git a/usr/palm/frameworks/contacts/submission/99/javascript/PersonDisplayLite.js.rej b/usr/palm/frameworks/contacts/submission/99/javascript/PersonDisplayLite.js.rej
new file mode 100644
index 0000000..bb38fc0
--- /dev/null
+++ b/usr/palm/frameworks/contacts/submission/99/javascript/PersonDisplayLite.js.rej
@@ -0,0 +1,57 @@
+--- usr/palm/frameworks/contacts/submission/99/javascript/PersonDisplayLite.js-
++++ usr/palm/frameworks/contacts/submission/99/javascript/PersonDisplayLite.js
+@@ -57,20 +57,5 @@
+ 		sortKey = rawPersonObject.sortKey;
+-		if (sortOrder === ListWidget.SortOrder.firstLast || sortOrder === ListWidget.SortOrder.lastFirst) {
+-			//if there's a sort key and it doesn't start with the default character, use it
+-			if (sortKey && sortKey.slice(0, 1) !== SortKey.DEFAULT_CHAR) {
+-				dividerText = sortKey.slice(0, 1);
+-				
+-				//make the divider text accent-free and uppercase
+-				dividerText = Globalization.Locale.getBaseString(dividerText);
+-				
+-				//Some characters have a 2 character base
+-				dividerText = dividerText.slice(0, 1);
+-				
+-				//TODO: do this in CSS?
+-				rawPersonObject.dividerText = Globalization.Character.toUpperCase(dividerText);
+-			} else {
+-				//else we use the default divider text
+-				rawPersonObject.dividerText = SortKey.DEFAULT_NAME_DIVIDER_TEXT;
+-			}
+-		} else {
++		
++		var sortByCompany = (sortOrder === ListWidget.SortOrder.companyFirstLast || sortOrder === ListWidget.SortOrder.companyLastFirst);
++		if (sortByCompany) {
+ 			//if there's a sort key and it doesn't start with the default character, use it
+@@ -100,3 +86,30 @@
+ 				rawPersonObject.dividerText = Globalization.Character.toUpperCase(dividerText);
++				sortKey = sortKey.split(/\t/)[1];
++				if (sortKey && !Globalization.Character.isLetter(sortKey.substr(0, 1))) {
++					sortKey = SortKey.DEFAULT_CHAR + sortKey;
++				}
++			}
++		} else {
++			rawPersonObject.dividerText = '';
++		}
++
++		//if there's a sort key and it doesn't start with the default character, use it
++		if (sortKey && sortKey.slice(0, 1) !== SortKey.DEFAULT_CHAR) {
++			dividerText = sortKey.slice(0, 1);
++			
++			//make the divider text accent-free and uppercase
++			dividerText = Globalization.Locale.getBaseString(dividerText);
++			
++			//Some characters have a 2 character base
++			dividerText = dividerText.slice(0, 1);
++
++			if (sortByCompany) {
++				rawPersonObject.dividerText += ' - ';
+ 			}
++
++			//TODO: do this in CSS?
++			rawPersonObject.dividerText += Globalization.Character.toUpperCase(dividerText);
++		} else if (!sortByCompany) {
++			//else we use the default divider text
++			rawPersonObject.dividerText += SortKey.DEFAULT_NAME_DIVIDER_TEXT;
+ 		}
diff --git a/usr/palm/frameworks/mojo/builtins/palmcontactsVersion1_0.js b/usr/palm/frameworks/mojo/builtins/palmcontactsVersion1_0.js
index e31f618..ebc00b2 100644
--- a/usr/palm/frameworks/mojo/builtins/palmcontactsVersion1_0.js
+++ b/usr/palm/frameworks/mojo/builtins/palmcontactsVersion1_0.js
@@ -447,9 +447,55 @@ Person.SYNC_SOURCE_PRIORITY_LIST={"com.palm.contact.linkedin":1,"com.palm.contac
 this.fullName=this.getName().getFullName()||this.displayName;this.workInfoLine=displayNameData.basedOnField!==DisplayNameType.TITLE_AND_ORGANIZATION_NAME&&displayNameData.basedOnField!==DisplayNameType.ORGANIZATION_NAME&&displayNameData.basedOnField!==DisplayNameType.TITLE?this.generateWorkInfoLine():"";this.nickname=displayNameData.basedOnField===DisplayNameType.NICKNAME?"":this.getNickname().getValue();this.headerPhotoPath=this.getPhotos().getSquarePhotoPath()||PersonPhotos.DEFAULT_DETAILS_AVATAR;
 this.imageId="contactImage_"+this.getId();if(this.isFavorite()){this.favoritesHeaderClass=PersonDisplay.FAVORITES_HEADER_CLASS;this.favoriteIcon=PersonDisplay.FAVORITE_ICON;this.favoriteClass="favorite"}contactIds=this.getContactIds().getArray();this.contactCount=contactIds.length;if(!contactIds||contactIds.length<=1)this.hideContactCountClass=PersonDisplay.HIDE_CONTACT_COUNT_CLASS},toggleFavoriteAppearance:function(newFavoriteState){if(newFavoriteState){this.favoritesHeaderClass=PersonDisplay.FAVORITES_HEADER_CLASS;
 this.favoriteIcon=PersonDisplay.FAVORITE_ICON}else{this.favoritesHeaderClass="";this.favoriteIcon=""}}});PersonDisplay.getImStatusClassName=function(status){switch(status){case IMAddress.STATUS.ONLINE:return"status-available";case IMAddress.STATUS.BUSY:return"status-busy";case IMAddress.STATUS.OFFLINE:return"status-offline";case IMAddress.STATUS.NO_PRESENCE:return"hide-status";default:return"hide-status"}};PersonDisplay.DEFAULT_LIST_AVATAR=PersonPhotos.DEFAULT_LIST_AVATAR;
-PersonDisplay.DEFAULT_DETAILS_AVATAR=PersonPhotos.DEFAULT_DETAILS_AVATAR;PersonDisplay.FAVORITE_ICON='<img class="list-favorite" src="'+LIB_ROOT+'images/favorites-star-blue.png" height="24" width="24" alt="" />';PersonDisplay.HIDE_CONTACT_COUNT_CLASS="count-hidden";PersonDisplay.FAVORITES_HEADER_CLASS="favorites-header";PersonDisplay.FAVORITES_LIST_CLASS="favorites-list";PersonDisplay.IS_CLIPPED_CLASS={CLIPPED:"clipped",NOT_CLIPPED:"not-clipped"};var PersonDisplayLite={create:function(rawPersonObject,sortOrder){var sortKey,dividerText;rawPersonObject.displayName=Person.generateDisplayNameFromRawPerson(rawPersonObject);rawPersonObject.imageId="personImage_"+rawPersonObject._id;rawPersonObject.listPhotoPath=rawPersonObject.photos&&rawPersonObject.photos.listPhotoPath||PersonPhotos.DEFAULT_LIST_AVATAR;if(rawPersonObject.favorite)rawPersonObject.favoriteClass="favorite";else rawPersonObject.favoriteClass="";sortKey=rawPersonObject.sortKey;if(sortOrder===
-ListWidget.SortOrder.firstLast||sortOrder===ListWidget.SortOrder.lastFirst)if(sortKey&&sortKey.slice(0,1)!==SortKey.DEFAULT_CHAR){dividerText=sortKey.slice(0,1);dividerText=Globalization.Locale.getBaseString(dividerText);dividerText=dividerText.slice(0,1);rawPersonObject.dividerText=Globalization.Character.toUpperCase(dividerText)}else rawPersonObject.dividerText=SortKey.DEFAULT_NAME_DIVIDER_TEXT;else if(sortKey&&sortKey.slice(0,1)!==SortKey.DEFAULT_CHAR){dividerText=rawPersonObject.organization&&
-rawPersonObject.organization.name;if(dividerText){dividerText=Globalization.Locale.getBaseString(dividerText);rawPersonObject.dividerText=Globalization.Character.toUpperCase(dividerText)}else{dividerText=SortKey.DEFAULT_COMPANY_DIVIDER_TEXT;rawPersonObject.dividerText=Globalization.Character.toUpperCase(dividerText)}}else{dividerText=SortKey.DEFAULT_COMPANY_DIVIDER_TEXT;rawPersonObject.dividerText=Globalization.Character.toUpperCase(dividerText)}return rawPersonObject}};var PersonLinkable=Class.create(Person,{initialize:function initialize(rawPerson){this.$super(initialize)(rawPerson);this._init();if(rawPerson);},_init:function(){},addContact:function(contact){if(contact)if(contact.getId())this.getContactIds().add(contact.getId())},removeContactId:function(contactId){if(contactId)return this.getContactIds().remove(contactId)},copyOfContactIds:function(){return ArrayUtil.copyOfArray(this.getContactIds().getDBObject())},mergeContactIds:function(otherContactIds){if(otherContactIds)this.getContactIds().add(otherContactIds)},
+PersonDisplay.DEFAULT_DETAILS_AVATAR=PersonPhotos.DEFAULT_DETAILS_AVATAR;PersonDisplay.FAVORITE_ICON='<img class="list-favorite" src="'+LIB_ROOT+'images/favorites-star-blue.png" height="24" width="24" alt="" />';PersonDisplay.HIDE_CONTACT_COUNT_CLASS="count-hidden";PersonDisplay.FAVORITES_HEADER_CLASS="favorites-header";PersonDisplay.FAVORITES_LIST_CLASS="favorites-list";PersonDisplay.IS_CLIPPED_CLASS={CLIPPED:"clipped",NOT_CLIPPED:"not-clipped"};var PersonDisplayLite={create:function(rawPersonObject,sortOrder){
+		var sortKey,
+			dividerText;
+		rawPersonObject.displayName = Person.generateDisplayNameFromRawPerson(rawPersonObject);
+		rawPersonObject.imageId = "personImage_" + rawPersonObject._id;
+		rawPersonObject.listPhotoPath = (rawPersonObject.photos && rawPersonObject.photos.listPhotoPath) || PersonPhotos.DEFAULT_LIST_AVATAR;
+		if (rawPersonObject.favorite) {
+			rawPersonObject.favoriteClass = "favorite";
+		} else {
+			rawPersonObject.favoriteClass = "";
+		}
+		sortKey = rawPersonObject.sortKey;
+		var sortByCompany = (sortOrder === ListWidget.SortOrder.companyFirstLast || sortOrder === ListWidget.SortOrder.companyLastFirst);
+		if (sortByCompany) {
+			if (sortKey && sortKey.slice(0, 1) !== SortKey.DEFAULT_CHAR) {
+				dividerText = rawPersonObject.organization && rawPersonObject.organization.name;
+				if (dividerText) {
+					dividerText = Globalization.Locale.getBaseString(dividerText);
+					rawPersonObject.dividerText = Globalization.Character.toUpperCase(dividerText);
+				} else {
+					dividerText = SortKey.DEFAULT_COMPANY_DIVIDER_TEXT;
+					rawPersonObject.dividerText = Globalization.Character.toUpperCase(dividerText);
+				}
+				sortKey = null;
+			} else {
+				dividerText = SortKey.DEFAULT_COMPANY_DIVIDER_TEXT;
+				rawPersonObject.dividerText = Globalization.Character.toUpperCase(dividerText);
+				sortKey = sortKey.split(/\t/)[1];
+				if (sortKey && !Globalization.Character.isLetter(sortKey.substr(0, 1))) {
+					sortKey = SortKey.DEFAULT_CHAR + sortKey;
+				}
+			}
+		} else {
+			rawPersonObject.dividerText = '';
+		}
+		if (sortKey && sortKey.slice(0, 1) !== SortKey.DEFAULT_CHAR) {
+			dividerText = sortKey.slice(0, 1);
+			dividerText = Globalization.Locale.getBaseString(dividerText);
+			dividerText = dividerText.slice(0, 1);
+			if (sortByCompany) {
+				rawPersonObject.dividerText += ' - ';
+			}
+			rawPersonObject.dividerText += Globalization.Character.toUpperCase(dividerText);
+		} else if (!sortByCompany) {
+			rawPersonObject.dividerText += SortKey.DEFAULT_NAME_DIVIDER_TEXT;
+		}
+		return rawPersonObject;
+}
+};var PersonLinkable=Class.create(Person,{initialize:function initialize(rawPerson){this.$super(initialize)(rawPerson);this._init();if(rawPerson);},_init:function(){},addContact:function(contact){if(contact)if(contact.getId())this.getContactIds().add(contact.getId())},removeContactId:function(contactId){if(contactId)return this.getContactIds().remove(contactId)},copyOfContactIds:function(){return ArrayUtil.copyOfArray(this.getContactIds().getDBObject())},mergeContactIds:function(otherContactIds){if(otherContactIds)this.getContactIds().add(otherContactIds)},
 linkSingleContact:function(contact){this.mergeContactIds([contact.getId()])},mergePeople:function(peopleToMerge,doneMergeFuture){this.mergePeopleAndContact(peopleToMerge,undefined,doneMergeFuture)},mergePeopleAndContact:function(peopleToMerge,contact,doneMergeFuture){var doneSaveUpdatedPersonFuture=new Future,doneRemovePeopleFromDBFuture=new Future,doneGettingPersonForFutureSaving=new Future,ids=[],i,tempPerson;if(peopleToMerge)for(i=0;i<peopleToMerge.length;i+=1){tempPerson=peopleToMerge[i];if(tempPerson.getId()!==
 this.getId()){ids.push(tempPerson.getId());this.mergeContactIds(tempPerson.getContactIds().getArray())}}if(contact)this.mergeContactIds([contact.getId()]);doneSaveUpdatedPersonFuture.nest(this.save());doneSaveUpdatedPersonFuture.then(this,function(doneSaveFuture){if(doneSaveFuture.result)doneRemovePeopleFromDBFuture.nest(DB.del(ids));else doneMergeFuture.result={newPerson:undefined}});doneRemovePeopleFromDBFuture.then(this,function(doneRemove){if(doneRemove.result&&doneRemove.result.results);else;
 doneGettingPersonForFutureSaving.nest(DB.find({from:Person.kind,where:[{prop:"_id",op:"=",val:this.getId()}]}))});doneGettingPersonForFutureSaving.then(this,function(doneGettingCurrent){var result=Utils.DBResultHelper(doneGettingCurrent.result);if(result)if(result.length>0)doneMergeFuture.result={newPerson:PersonFactory.createPersonLinkable(result[0])};else doneMergeFuture.result={newPerson:this};else doneMergeFuture.result={newPerson:this}})}});var PersonType={DISPLAYABLE:"displayable",DISPLAYLITE:"displaylite",LINKABLE:"linkable",RAWOBJECT:"rawobject"};exports.PersonType=PersonType;var PersonFactory={createPersonDisplayLite:function(rawPersonObject,sortOrder){return PersonDisplayLite.create(rawPersonObject,sortOrder)},createPersonDisplay:function(rawPersonObject){return new PersonDisplay(rawPersonObject)},createPersonLinkable:function(rawPersonObject){return new PersonLinkable(rawPersonObject)},create:function(rawPersonObject,personType,sortOrder){switch(personType){case PersonType.DISPLAYABLE:return PersonFactory.createPersonDisplay(rawPersonObject);case PersonType.DISPLAYLITE:return PersonDisplayLite.create(rawPersonObject,
