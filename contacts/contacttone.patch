Adds a message tone selector
Adds a message tone selector
Index: /usr/palm/applications/com.palm.app.contacts/app/controllers/edit-assistant.js
===================================================================
--- .orig/usr/palm/applications/com.palm.app.contacts/app/controllers/edit-assistant.js
+++ /usr/palm/applications/com.palm.app.contacts/app/controllers/edit-assistant.js
@@ -63,6 +63,17 @@ EditAssistant = Class.create({
 			template: "edit/ringtones"
 		}));
 		
+		if(this.person.messagingRingtoneName){
+			this.person.MsgtoneDisplay = this.person.messagingRingtoneName;
+			this.person.MsgtoneSet = "msgtone-set";
+		} else {
+			this.person.MsgtoneDisplay = $L("Set a message tone");
+			this.person.MsgtoneSet = "";
+		}
+		this.controller.get("MsgtoneBox").update(Mojo.View.render({
+			object: this.person,
+			template: "edit/msgtones"
+		}));		
 		
 		var that = this;
 		
@@ -264,6 +275,11 @@ EditAssistant = Class.create({
 					object: {ringtoneDisplay:ringtoneName},
 					template: "edit/ringtones"
 				}));
+				var messagingRingtoneName = this.person.messagingRingtoneName || $L("Set a message tone");
+				this.controller.get("MsgtoneBox").update(Mojo.View.render({
+					object: {MsgtoneDisplay:messagingRingtoneName},
+					template: "edit/msgtones"
+				}));
 				
 			}
 		}
@@ -521,6 +537,7 @@ EditAssistant = Class.create({
 		this.controller.listen("NameSyncPickerWrapper", Mojo.Event.tap, this.popupContactChooser.bind(this));
 		this.controller.get("edit-photo").observe(Mojo.Event.tap, this.attachFilePicker.bind(this));
 		this.controller.get("RingtoneBox").observe(Mojo.Event.tap, this.attachRingtonePicker.bind(this));
+		this.controller.get("MsgtoneBox").observe(Mojo.Event.tap, this.attachMsgtonePicker.bind(this));
 		this.renderLabels();
 		this.setupContact();
 		if (this.contact.readOnly) {
Index: /usr/palm/applications/com.palm.app.contacts/app/controllers/filepicker-behaviors.js
===================================================================
--- .orig/usr/palm/applications/com.palm.app.contacts/app/controllers/filepicker-behaviors.js
+++ /usr/palm/applications/com.palm.app.contacts/app/controllers/filepicker-behaviors.js
@@ -56,6 +56,55 @@ var FilepickerBehaviors = {
 			Mojo.FilePicker.pickFile(params, this.controller.stageController);
 
 	},
+
+	attachMsgtonePicker: function(event){
+		if(this.person.messagingRingtoneLoc){
+			this.controller.popupSubmenu( {
+				onChoose:function(c){
+					if(c == "CHANGE"){
+						this.pushMsgtonePicker();
+					} else if(c == "DELETE"){
+						this.clearMsgtone();
+					}
+				}.bind(this),
+				placeNear:event.target,
+				items:[
+					{label:$L("Change Msgtone"), command:'CHANGE'},
+					{label:$L("Delete Msgtone"), command:'DELETE'}
+				]
+			})			
+		} else {
+			this.pushMsgtonePicker();
+		}
+		
+	},
+	
+	clearMsgtone:function(){
+		this.person.messagingRingtoneLoc = "";
+		this.person.messagingRingtoneName = "";
+		this.person.MsgtoneDisplay = $L("Set a message tone");
+		this.person.MsgtoneSet = "";
+		this.person.dirty = true;
+		this.controller.get("MsgtoneBox").update(Mojo.View.render({
+		        object:this.person,
+		        template:"edit/msgtones"
+		}));
+	},
+	
+	pushMsgtonePicker:function(){
+			var params = {
+				actionType: 'attach',
+				kinds: ['ringtone'],
+				defaultKind: 'ringtone',
+				filePath:this.person.messagingRingtoneLoc,
+				onSelect: function(file){
+					this.attachMsgtone(this.sanitizeSystemPath(file.fullPath), file.name);
+				}.bind(this)
+			};
+			//Mojo.Log.info("ContactMulti Picking a msgtone for " + this.contact.firstName + " " + this.contact.lastName);
+			Mojo.FilePicker.pickFile(params, this.controller.stageController);
+
+	},
 	
 	attachFilePicker: function(event){
 		if(this.contact.readOnly){
@@ -150,6 +199,20 @@ var FilepickerBehaviors = {
 		        template:"edit/ringtones"
 		      }));
 		}
+	},
+	
+	attachMsgtone: function(msgtonePath, name){
+		if (msgtonePath) {
+			this.person.dirty = true;
+			this.person.messagingRingtoneName = name;
+			this.person.MsgtoneDisplay = name;
+			this.person.MsgtoneSet = "msgtone-set";
+			this.person.messagingRingtoneLoc = msgtonePath;
+			this.controller.get("MsgtoneBox").update(Mojo.View.render({
+		        object:this.person,
+		        template:"edit/msgtones"
+		      }));
+		}
 	}
 }
 
Index: /usr/palm/applications/com.palm.app.contacts/app/views/edit/lists-fake.html
===================================================================
--- .orig/usr/palm/applications/com.palm.app.contacts/app/views/edit/lists-fake.html
+++ /usr/palm/applications/com.palm.app.contacts/app/views/edit/lists-fake.html
@@ -32,6 +32,20 @@
         </div>
     </div>
 </div>
+<div>
+<div id="MsgtoneBox" class="">
+    <div class="palm-group unlabeled">
+        <div class="palm-list">
+            <div class="palm-row single" id="MsgtoneButton" x-mojo-tap-highlight="momentary">
+                <div class="palm-row-wrapper">
+                    <div class="title"  x-mojo-loc="">
+                        Set a message tone
+                    </div>
+                </div>
+            </div>
+        </div>
+    </div>
+</div>
 </div>
 <div>
 <div id="emailList" name="emailList" class="contactPointList" >
Index: /usr/palm/applications/com.palm.app.contacts/app/views/edit/msgtones.html
===================================================================
--- /dev/null
+++ /usr/palm/applications/com.palm.app.contacts/app/views/edit/msgtones.html
@@ -0,0 +1,16 @@
+<div class="palm-group unlabeled">
+  <div class="palm-list">
+    <div class="palm-row single #{MsgtoneSet} msgtone-button" id="MsgtoneButton" x-mojo-tap-highlight="momentary">
+      <div class="palm-row-wrapper">
+        <div class="label right truncating-text" x-mojo-loc=''>
+          Msgtone
+        </div>
+        <div class="title">
+          <div class="truncating-text">
+            #{MsgtoneDisplay}
+          </div>
+        </div>
+      </div>
+    </div>
+  </div>
+</div>
\ No newline at end of file
