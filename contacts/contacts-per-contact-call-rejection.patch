diff --git a/usr/palm/applications/com.palm.app.contacts/app/controllers/edit-assistant.js b/usr/palm/applications/com.palm.app.contacts/app/controllers/edit-assistant.js
index 8f8905a..1939912 100644
--- a/usr/palm/applications/com.palm.app.contacts/app/controllers/edit-assistant.js
+++ b/usr/palm/applications/com.palm.app.contacts/app/controllers/edit-assistant.js
@@ -57,8 +57,16 @@ EditAssistant = Class.create({
 			this.person.ringtoneDisplay = this.person.ringtoneName;
 			this.person.ringtoneSet = "ringtone-set";
 		} else {
-			this.person.ringtoneDisplay = $L("Set a ringtone");
-			this.person.ringtoneSet = "";
+			if(this.person.ringtoneLoc == "hangup") {
+				this.person.ringtoneDisplay = $L("Auto-Hang Up");
+				this.person.ringtoneSet = "ringtone-set";
+			} else if(this.person.ringtoneLoc == "direct2vm") {
+				this.person.ringtoneDisplay = $L("Direct to Voicemail");
+				this.person.ringtoneSet = "ringtone-set";
+			} else {
+				this.person.ringtoneDisplay = $L("Set a ringtone");
+				this.person.ringtoneSet = "";
+			}
 		}
 		this.controller.get("RingtoneBox").update(Mojo.View.render({
 			object: this.person,
@@ -276,7 +284,13 @@ EditAssistant = Class.create({
 				});
 			}
 			else {
-				var ringtoneName = this.person.ringtoneName || $L("Set a ringtone");
+				if(this.person.ringtoneLoc == "hangup") {
+					var ringtoneName = $L("Auto-Hang Up");
+				} else if(this.person.ringtoneLoc == "direct2vm") {
+					var ringtoneName = $L("Direct to Voicemail");
+				} else {
+					var ringtoneName = this.person.ringtoneName || $L("Set a ringtone");
+				}
 				this.controller.get("RingtoneBox").update(Mojo.View.render({
 					object: {ringtoneDisplay:ringtoneName},
 					template: "edit/ringtones"
diff --git a/usr/palm/applications/com.palm.app.contacts/app/controllers/filepicker-behaviors.js b/usr/palm/applications/com.palm.app.contacts/app/controllers/filepicker-behaviors.js
index 50735d8..e8fff13 100644
--- a/usr/palm/applications/com.palm.app.contacts/app/controllers/filepicker-behaviors.js
+++ b/usr/palm/applications/com.palm.app.contacts/app/controllers/filepicker-behaviors.js
@@ -9,23 +9,69 @@ var FilepickerBehaviors = {
 	},
 	
 	attachRingtonePicker: function(event){
-		if(this.person.ringtoneLoc){
+		if(this.person.ringtoneLoc == "hangup"){
 			this.controller.popupSubmenu( {
 				onChoose:function(c){
 					if(c == "CHANGE"){
 						this.pushRingtonePicker();
 					} else if(c == "DELETE"){
 						this.clearRingtone();
+					} else if(c == "HANGUP"){
+						this.hangup();
+					} else if(c == "DIR2VM"){
+						this.dir2vm();
 					}
 				}.bind(this),
 				placeNear:event.target,
 				items:[
-					{label:$L("Change Ringtone"), command:'CHANGE'},
-					{label:$L("Delete Ringtone"), command:'DELETE'}
+					{label:$L("Set Ringtone"), command:'CHANGE'},
+					{label:$L("Use Default Ringtone"), command:'DELETE'},
+					{label:$L("Auto Hang-up"), command:'HANGUP'},
+					{label:$L("Direct to Voicemail"), command:'DIR2VM'}
+				]
+			})			
+		} else if(this.person.ringtoneLoc == "direct2vm"){
+			this.controller.popupSubmenu( {
+				onChoose:function(c){
+					if(c == "CHANGE"){
+						this.pushRingtonePicker();
+					} else if(c == "DELETE"){
+						this.clearRingtone();
+					} else if(c == "HANGUP"){
+						this.hangup();
+					} else if(c == "DIR2VM"){
+						this.dir2vm();
+					}
+				}.bind(this),
+				placeNear:event.target,
+				items:[
+					{label:$L("Set Ringtone"), command:'CHANGE'},
+					{label:$L("Use Default Ringtone"), command:'DELETE'},
+					{label:$L("Auto Hang-up"), command:'HANGUP'},
+					{label:$L("Direct to Voicemail"), command:'DIR2VM'}
 				]
 			})			
 		} else {
-			this.pushRingtonePicker();
+			this.controller.popupSubmenu( {
+				onChoose:function(c){
+					if(c == "CHANGE"){
+						this.pushRingtonePicker();
+					} else if(c == "DELETE"){
+						this.clearRingtone();
+					} else if(c == "HANGUP"){
+						this.hangup();
+					} else if(c == "DIR2VM"){
+						this.dir2vm();
+					}
+				}.bind(this),
+				placeNear:event.target,
+				items:[
+					{label:$L("Change Ringtone"), command:'CHANGE'},
+					{label:$L("Use Default Ringtone"), command:'DELETE'},
+					{label:$L("Auto Hang-up"), command:'HANGUP'},
+					{label:$L("Direct to Voicemail"), command:'DIR2VM'}
+				]
+			})
 		}
 		
 	},
@@ -42,6 +88,30 @@ var FilepickerBehaviors = {
 		}));
 	},
 	
+	hangup:function(){
+		this.person.ringtoneLoc = "hangup";
+		this.person.ringtoneName = "";
+		this.person.ringtoneDisplay = $L("Auto-Hang Up");
+		this.person.ringtoneSet = "ringtone-set";
+		this.person.dirty = true;
+		this.controller.get("RingtoneBox").update(Mojo.View.render({
+		        object:this.person,
+		        template:"edit/ringtones"
+		}));
+	},
+	
+	dir2vm:function(){
+		this.person.ringtoneLoc = "direct2vm";
+		this.person.ringtoneName = "";
+		this.person.ringtoneDisplay = $L("Direct to Voicemail");
+		this.person.ringtoneSet = "ringtone-set";
+		this.person.dirty = true;
+		this.controller.get("RingtoneBox").update(Mojo.View.render({
+		        object:this.person,
+		        template:"edit/ringtones"
+		}));
+	},
+	
 	pushRingtonePicker:function(){
 			var params = {
 				actionType: 'attach',
diff --git a/usr/palm/applications/com.palm.app.phone/app/models/TelephonyEventListener.js b/usr/palm/applications/com.palm.app.phone/app/models/TelephonyEventListener.js
index c7190b5..59d62ed 100644
--- a/usr/palm/applications/com.palm.app.phone/app/models/TelephonyEventListener.js
+++ b/usr/palm/applications/com.palm.app.phone/app/models/TelephonyEventListener.js
@@ -715,7 +715,14 @@ var TelephonyEventListener = Class.create({
 		contact.cnapName = cnapName;
 		
 		QDLogger.log( "TelephonyEventListener#onIncomingLookupComplete", "namefromcontacts?:" , !!(contact.name));
-		this.announcer.announceIncoming(callId, number, contact, !!(contact.name), this.isConnected(), update);
+		if (contact.ringtoneLoc == "direct2vm") {
+			this.flagCallRejected(callId);
+		} else if (contact.ringtoneLoc == "hangup") {
+			TelephonyCommands.answer(callId);
+			TelephonyCommands.disconnect(callId);
+		} else {
+			this.announcer.announceIncoming(callId, number, contact, !!(contact.name), this.isConnected(), update);
+		}
 	},
 	
 	// called if lookup returns late.  checks for incoming call and updates that if it's up; otherwise
