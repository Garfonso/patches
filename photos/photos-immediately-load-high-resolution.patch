diff --git a/usr/palm/applications/com.palm.app.photos/app/controllers/app-assistant.js b/usr/palm/applications/com.palm.app.photos/app/controllers/app-assistant.js
index 706f2d9..a99dcf0 100644
--- a/usr/palm/applications/com.palm.app.photos/app/controllers/app-assistant.js
+++ b/usr/palm/applications/com.palm.app.photos/app/controllers/app-assistant.js
@@ -1,6 +1,80 @@
 /* Copyright 2009 Palm, Inc.  All rights reserved. */
 /*global AppAssistant: true, HomeAssistant: false, DockSlideshowModel: false, Mojo: false, MojoLoader: false, Photos: true, Foundations: false */
 
+/*Mojo.Widget.ImageView.prototype._applyHighResExtractFSParams = function(image, url)
+{
+	Mojo.Log.error("PCW trying to apply high res");
+	Mojo.Log.info("Try applying high res ", url);
+	if (this.inNextFlickTransition || this.noExtractFS ||
+					this.originalHighResUrl !== url)
+	{
+		Mojo.Log.error("PCW dropping high res");
+		Mojo.Log.info("Dropping high res.");
+		return;
+	}
+
+	if (this._userBusy())
+	{
+		Mojo.Log.error("PCW user busy");
+		this.highResolutionTimer =
+			this._applyHighResExtractFSParams.bind(this)
+			.delay(0.0000001, image, url);
+		return;
+	}
+
+	Mojo.Log.error("PCW applying high res img");
+	image.src = this._getHighResUrl(url);
+};*/
+
+Mojo.Widget.ImageView.prototype._getMediumResUrl = Mojo.Widget.ImageView.prototype._getLowResUrl;
+
+Mojo.Widget.ImageView.prototype.OLDcenterUrlProvided = Mojo.Widget.ImageView.prototype.centerUrlProvided;
+Mojo.Widget.ImageView.prototype.centerUrlProvided = function(url, thumbUrl)
+{
+	this.OLDcenterUrlProvided(url);
+};
+
+Mojo.Widget.ImageView.prototype.OLDrightUrlProvided = Mojo.Widget.ImageView.prototype.rightUrlProvided;
+Mojo.Widget.ImageView.prototype.rightUrlProvided = function(url, thumbUrl)
+{
+	this.OLDrightUrlProvided(url);
+};
+
+Mojo.Widget.ImageView.prototype.OLDleftUrlProvided = Mojo.Widget.ImageView.prototype.leftUrlProvided;
+Mojo.Widget.ImageView.prototype.leftUrlProvided = function(url, thumbUrl)
+{
+	this.OLDleftUrlProvided(url);
+};
+
+Mojo.Widget.ImageView.prototype._getLowResUrl = function(url)
+{
+	// exif thumbs are generally of the 120x160 dimensions,
+	// there is no sense in extractfs scaling up the image.
+	var ret = this._getExtractFSUrl(url, this.lowResExtractFSParams);
+	Mojo.Log.error("PCW _getLowResUrl will return", ret);
+	Mojo.Log.error("PCW _getLowResUrl url: ", url);
+	Mojo.Log.error("PCW lowresextractfsparams: ", this.lowResExtractFSParams);
+	return ret;
+};
+
+/*Mojo.Widget.ImageView.prototype.rightUrlProvided = function(url, thumbUrl)
+{
+	//thumbUrl = null; // pcw
+	Mojo.Log.error("PCW rightUrlProvided");
+	Mojo.Log.info("provided right: " + url);
+	if (url !== this.originalRightUrl)
+	{
+		this.rightImageExists = false;
+		this.originalRightUrl = url;
+		this.imageRight.src = this._getLowResUrl(url);
+	}
+};*/
+	
+/*Mojo.Widget.ImageView.prototype._scheduleHighResTimer = function() {
+	Mojo.Log.error("PCW _scheduleHighResTimer");
+	// do nothing
+};*/
+
 Photos = undefined;
 
 function AppAssistant() {}
diff --git a/usr/palm/frameworks/metascene.photos.full/submission/15.1/concatenated.js b/usr/palm/frameworks/metascene.photos.full/submission/15.1/concatenated.js
index 37af50c..e1a6008 100755
--- a/usr/palm/frameworks/metascene.photos.full/submission/15.1/concatenated.js
+++ b/usr/palm/frameworks/metascene.photos.full/submission/15.1/concatenated.js
@@ -58,6 +58,7 @@ var internals = {};
 libraries["metascene.base"].loadResources(internals, root);
 
 function FullAssistant(params) {
+	Mojo.Log.error("PCW metascene-photos-full UNcompressed concatenated.js PCW");
 	this.model = (params && params.model);
 	if (!this.model) {
 		throw new Error("Full metascene requires a scene model!");
@@ -130,10 +131,17 @@ FullAssistant.prototype.setup = function setup() {
 
 	this.extractfsParams = "720:720:3";
 	this.flipviewElement = canvas;
-	this.controller.setupWidget(this.flipviewElement.id, {
+	Mojo.Log.error("PCW setting up imageview widget concatenated.js PCW");
+	Mojo.Log.error("PCW app id", Mojo.Controller.appInfo.id);
+	var canvasmodel = {
 		extractfsParams: this.extractfsParams,
 		highResolutionTimeout: 0.4
-	}, {
+	};
+	if (Mojo.Controller.appInfo.id == "com.palm.app.photos") {
+		canvasmodel.highResolutionTimeout =  60 * 60 * 24; // 1 day
+		canvasmodel.lowResExtractfsParams = "720:720:3";
+	}
+	this.controller.setupWidget(this.flipviewElement.id, canvasmodel, {
 		background: "black",
 		onLeftFunction: this.model.goLeft.bind(this.model),
 		onRightFunction: this.model.goRight.bind(this.model)
