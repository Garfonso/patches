diff --git a/media/cryptofs/apps/usr/palm/applications/com.palm.app.photos/css/AlbumMode.css b/media/cryptofs/apps/usr/palm/applications/com.palm.app.photos/css/AlbumMode.css
index f260384..29e35c2 100644
--- a/media/cryptofs/apps/usr/palm/applications/com.palm.app.photos/css/AlbumMode.css
+++ b/media/cryptofs/apps/usr/palm/applications/com.palm.app.photos/css/AlbumMode.css
@@ -63,13 +63,19 @@
 		-webkit-border-image: url(../images/photo-9tile.png) 6 7 7 6 repeat repeat;
 		border-width: 6px 7px 7px 6px;
 		margin: auto;
-		position: absolute;
+		position: static;
 		top: 0;
 		bottom: 0;
 		left: 0;
 		right: 0;
 	}
 
+.AlbumGridFileName {
+       position: static;
+       text-align: center;
+       font-size: 14px;
+}
+
 /*
 DEFINED IN NonCssParams.js
 .AlbumGridThumb img {
diff --git a/media/cryptofs/apps/usr/palm/applications/com.palm.app.photos/source/AlbumGridView.js b/media/cryptofs/apps/usr/palm/applications/com.palm.app.photos/source/AlbumGridView.js
index 3fa086b..11e2822 100644
--- a/media/cryptofs/apps/usr/palm/applications/com.palm.app.photos/source/AlbumGridView.js
+++ b/media/cryptofs/apps/usr/palm/applications/com.palm.app.photos/source/AlbumGridView.js
@@ -22,6 +22,10 @@ enyo.kind({
 			ondragfinish: "doCellDragFinish",
 			onerror: "handleError"
 		},
+		{ kind: 'Control',
+			name: 'filename', className: 'AlbumGridFileName',
+			content: ''
+		},
 		{ kind: 'VideoSymbolBar',
 			onBarClick: "doCellClick",  // just use the event that Simon made
 			onmousehold: "doCellMouseHold",
@@ -61,6 +65,7 @@ enyo.kind({
 	published: {
 		debugging: true,
 		selecting: false,
+		showFilenames: false,
 	},
 	photoCount: 0,
 	videoCount: 0,
@@ -273,9 +278,12 @@ enyo.kind({
 
 		var img = inFlyweight.$.image;
 		img.setSrc(path);
-//		var fname = inRecord.path.split("/");
-//		fname = fname[fname.length-1];
+		if( this.showFilenames ) {
+			var fname = inRecord.path.split("/");
+			fname = fname[fname.length-1];
+		}
 //		console.log("- @ - @ -  setup cell (" + inColumn + "," + inRow + "):   " + fname);
+		inFlyweight.$.filename.setContent(fname);
 
 		// If this cell contains a video-thumbnail, we need to show some extra controls.
 		var vidBar = inFlyweight.$.videoSymbolBar;
diff --git a/media/cryptofs/apps/usr/palm/applications/com.palm.app.photos/source/modes/AlbumMode.js b/media/cryptofs/apps/usr/palm/applications/com.palm.app.photos/source/modes/AlbumMode.js
index bd5ef6e..1664ff6 100644
--- a/media/cryptofs/apps/usr/palm/applications/com.palm.app.photos/source/modes/AlbumMode.js
+++ b/media/cryptofs/apps/usr/palm/applications/com.palm.app.photos/source/modes/AlbumMode.js
@@ -12,6 +12,7 @@ enyo.kind({
 	},
 	showingMultiselect: false,
 	components: [
+		{kind:"PalmService", name:"getTweaks", service:"palm://org.webosinternals.tweaks.prefs/", method:"get", onSuccess:"tweakSuccess", onFailure:"tweakFailure"},
 		{ kind: 'PanelHeader', label: $L('Album'), controlAreaStyle: 'gridview-header-controls', onClickLabel: 'editAlbumName', components:[
 				{
 					kind: "Input",
@@ -125,17 +126,44 @@ enyo.kind({
 			this.handleAlbumPictureCountChanged(null, newAlbum.photoCount, newAlbum.videoCount);
 			this.handleAlbumDateChanged(null, newAlbum.modifiedTime);
 
+			// make the call to the Tweaks service
+			this.$.getTweaks.call({owner: "org.webosinternals.patches.photos-show-filenames", keys: ["showFn"]});
+			/*
 			this.grid = this.createGrid();
 
 			// The render ensures that a DOM-node is created so that resize() knows
 			// its bounds so that it can eg: compute the number of columns.
 			this.grid.render();
 			this.grid.resize();
+			*/
 		}
 		else {
 			this.$.panelHeader.setIconStyle('library-navigation-icon-40x40-local');
 		}
 	},
+	tweakSuccess: function(inSender, inResponse) {
+		this.grid = this.createGrid();
+		if((inResponse) && (inResponse.showFn)) {
+			// Do something with the config value
+			this.grid.setShowFilenames(inResponse.showFn);
+		} else {
+			// Deal with failure
+		}
+
+		// The render ensures that a DOM-node is created so that resize() knows
+		// its bounds so that it can eg: compute the number of columns.
+		this.grid.render();
+		this.grid.resize();
+	},
+	tweakFailure: function() {
+		this.grid = this.createGrid();
+		this.grid.setShowFilenames(true);
+
+		// The render ensures that a DOM-node is created so that resize() knows
+		// its bounds so that it can eg: compute the number of columns.
+		this.grid.render();
+		this.grid.resize();
+	},
 	createGrid: function() {
 		var gridViewKind = 'AlbumGridView';
 
