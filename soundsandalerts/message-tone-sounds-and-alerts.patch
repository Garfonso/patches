This patch modifies the Sounds & Rintones app, allowing you
to specify tones for alerts, notifications and new messages.
This patch should be used in conjunction with the
messaging-sounds.patch and is unneeded if you are using
the MyNotifications homebrew app.
Index: /usr/palm/applications/com.palm.app.soundsandalerts/app/controllers/soundsalertsconfig-assistant.js
===================================================================
--- .orig/usr/palm/applications/com.palm.app.soundsandalerts/app/controllers/soundsalertsconfig-assistant.js
+++ /usr/palm/applications/com.palm.app.soundsandalerts/app/controllers/soundsalertsconfig-assistant.js
@@ -81,9 +81,15 @@ var SoundsalertsconfigAssistant = Class.
 		
 		
 		$('currentringtonerow').observe(Mojo.Event.tap, this.showAudioFilePicker.bindAsEventListener(this));
+		$('currentalertrow').observe(Mojo.Event.tap, this.showAlertFilePicker.bindAsEventListener(this));
+		$('currentnotificationrow').observe(Mojo.Event.tap, this.showNotificationFilePicker.bindAsEventListener(this));
+		$('currentmessagerow').observe(Mojo.Event.tap, this.showMessageFilePicker.bindAsEventListener(this));
 				
 		this.getCurrentVolumes();
 		this.getCurrentRingtone();
+		this.getCurrentAlert();
+		this.getCurrentNotification();
+		this.getCurrentMessage();
 		this.getVibrateSettings();	
 		this.getOtherSettings();
 		
@@ -239,6 +245,85 @@ var SoundsalertsconfigAssistant = Class.
 		this.setRingtoneReq = SystemService.setRingtone(file);
 		$('currentringtone').innerHTML = file.name;
 	},
+
+	// Alert Picking
+	getCurrentAlert: function() {
+		this.getCurrentAlertReq = SystemService.getAlerts(this.getCurrentAlertQuery.bind(this));
+	},
+	
+	getCurrentAlertQuery: function(payload) {		
+		if (payload.alerttone) {
+			$('currentalert').innerHTML = payload.alerttone.name;
+			this.currAlertPath = payload.alerttone.fullPath;	
+		}
+		else 
+			$('currentalert').innerHTML = $L("Pick an alert");
+		
+	},
+	
+	showAlertFilePicker: function(event) {
+		var params = {"kinds": ["ringtone"],"filePath":this.currAlertPath,"onSelect":this.selectedAlertFile.bind(this),actionType:"attach",actionName: $L("Done")};
+		Mojo.FilePicker.pickFile(params,Mojo.Controller.stageController);
+	},
+	
+	selectedAlertFile: function(file) {		
+		//var params = {"fullPath": encodeURIComponent(file.fullPath), "name":file.name};
+		this.setAlertReq = SystemService.setAlerts(file);
+		$('currentalert').innerHTML = file.name;
+	},
+
+	// Notification Picking
+	getCurrentNotification: function() {
+		this.getCurrentNotificationReq = SystemService.getNotifications(this.getCurrentNotificationQuery.bind(this));
+	},
+	
+	getCurrentNotificationQuery: function(payload) {		
+		if (payload.notificationtone) {
+			$('currentnotification').innerHTML = payload.notificationtone.name;
+			this.currNotificationPath = payload.notificationtone.fullPath;	
+		}
+		else 
+			$('currentnotification').innerHTML = $L("Pick a notification");
+		
+	},
+	
+	showNotificationFilePicker: function(event) {
+		var params = {"kinds": ["ringtone"],"filePath":this.currNotificationPath,"onSelect":this.selectedNotificationFile.bind(this),actionType:"attach",actionName: $L("Done")};
+		Mojo.FilePicker.pickFile(params,Mojo.Controller.stageController);
+	},
+	
+	selectedNotificationFile: function(file) {		
+		//var params = {"fullPath": encodeURIComponent(file.fullPath), "name":file.name};
+		this.setNotificationReq = SystemService.setNotifications(file);
+		$('currentnotification').innerHTML = file.name;
+	},
+
+
+	// Message Picking
+	getCurrentMessage: function() {
+		this.getCurrentMessageReq = SystemService.getMessages(this.getCurrentMessageQuery.bind(this));
+	},
+	
+	getCurrentMessageQuery: function(payload) {		
+		if (payload.messagetone) {
+			$('currentmessage').innerHTML = payload.messagetone.name;
+			this.currMessagePath = payload.messagetone.fullPath;	
+		}
+		else 
+			$('currentmessage').innerHTML = $L("Pick an message");
+		
+	},
+	
+	showMessageFilePicker: function(event) {
+		var params = {"kinds": ["ringtone"],"filePath":this.currMessagePath,"onSelect":this.selectedMessageFile.bind(this),actionType:"attach",actionName: $L("Done")};
+		Mojo.FilePicker.pickFile(params,Mojo.Controller.stageController);
+	},
+	
+	selectedMessageFile: function(file) {		
+		//var params = {"fullPath": encodeURIComponent(file.fullPath), "name":file.name};
+		this.setMessageReq = SystemService.setMessages(file);
+		$('currentmessage').innerHTML = file.name;
+	},
 	
 	getVibrateSettings: function() {
 		this.getVibrateSettingsReq = AudioService.getVibrateSettings(this.vibrateSettingsCB.bind(this),this);
Index: /usr/palm/applications/com.palm.app.soundsandalerts/app/models/SystemService.js
===================================================================
--- .orig/usr/palm/applications/com.palm.app.soundsandalerts/app/models/SystemService.js
+++ /usr/palm/applications/com.palm.app.soundsandalerts/app/models/SystemService.js
@@ -28,6 +28,60 @@ SystemService.getRingtone = function(cal
 	return request;
 }
 
+SystemService.getAlerts = function(callback) {
+	var request = new Mojo.Service.Request(SystemService.identifier, {
+			method: 'getPreferences',
+			parameters: {"keys":["alerttone"]}, 
+			onSuccess: callback,
+			onFailure: callback
+		});
+	return request;
+}
+
+SystemService.setAlerts = function(value){
+	var request = new Mojo.Service.Request(SystemService.identifier, {
+			method: 'setPreferences',
+			parameters: {"alerttone":value}, 			
+		});
+	return request;
+}
+
+SystemService.getNotifications = function(callback) {
+	var request = new Mojo.Service.Request(SystemService.identifier, {
+			method: 'getPreferences',
+			parameters: {"keys":["notificationtone"]}, 
+			onSuccess: callback,
+			onFailure: callback
+		});
+	return request;
+}
+
+SystemService.setNotifications = function(value){
+	var request = new Mojo.Service.Request(SystemService.identifier, {
+			method: 'setPreferences',
+			parameters: {"notificationtone":value}, 			
+		});
+	return request;
+}
+
+SystemService.getMessages = function(callback) {
+	var request = new Mojo.Service.Request(SystemService.identifier, {
+			method: 'getPreferences',
+			parameters: {"keys":["messagetone"]}, 
+			onSuccess: callback,
+			onFailure: callback
+		});
+	return request;
+}
+
+SystemService.setMessages = function(value){
+	var request = new Mojo.Service.Request(SystemService.identifier, {
+			method: 'setPreferences',
+			parameters: {"messagetone":value}, 			
+		});
+	return request;
+}
+
 SystemService.getSystemUISounds = function(callback) {
 	var request = new Mojo.Service.Request(SystemService.identifier, {
 			method: 'getPreferences',
@@ -140,4 +194,4 @@ SystemService.getSystemlockMode = functi
 			onFailure: callback
 		});
 	return request;
-}
\ No newline at end of file
+}
Index: /usr/palm/applications/com.palm.app.soundsandalerts/app/views/soundsalertsconfig/soundsalertsconfig-scene.html
===================================================================
--- .orig/usr/palm/applications/com.palm.app.soundsandalerts/app/views/soundsalertsconfig/soundsalertsconfig-scene.html
+++ /usr/palm/applications/com.palm.app.soundsandalerts/app/views/soundsalertsconfig/soundsalertsconfig-scene.html
@@ -48,9 +48,27 @@
 	                </div>
 	            </div>
             </div>
+	<div id='currentalertrow' class="palm-row" x-mojo-tap-highlight="momentary">
+				<div class="palm-row-wrapper">
+					<div class="label" x-mojo-loc=''>Alert</div>
+	            	<div id='currentalert' class="title"></div>					
+	            </div>
+             </div>
+	<div id='currentnotificationrow' class="palm-row" x-mojo-tap-highlight="momentary">
+				<div class="palm-row-wrapper">
+					<div class="label" x-mojo-loc=''>Notification</div>
+	            	<div id='currentnotification' class="title"></div>					
+	            </div>
+             </div>
+	<div id='currentmessagerow' class="palm-row" x-mojo-tap-highlight="momentary">
+				<div class="palm-row-wrapper">
+					<div class="label" x-mojo-loc=''>Messages</div>
+	            	<div id='currentmessage' class="title"></div>					
+	            </div>
+             </div>
 			<div class="palm-row">
 				<div class="palm-row-wrapper">
-					<div class="title" x-mojo-loc=''>Volume</div>
+					<div class="title" x-mojo-loc=''>System Volume</div>
 					<div x-mojo-element="Slider" id='systemvolume' class="palm-slider"></div>
 	            </div>
             </div>
@@ -64,4 +82,4 @@
             </div>
 		</div>
 	</div>	
-</div>
\ No newline at end of file
+</div>
