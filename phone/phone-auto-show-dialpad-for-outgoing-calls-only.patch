diff --git a/usr/palm/applications/com.palm.app.phone/app/controllers/activecall-assistant.js b/usr/palm/applications/com.palm.app.phone/app/controllers/activecall-assistant.js
index bab675d..ea9c0a3 100644
--- a/usr/palm/applications/com.palm.app.phone/app/controllers/activecall-assistant.js
+++ b/usr/palm/applications/com.palm.app.phone/app/controllers/activecall-assistant.js
@@ -34,6 +34,7 @@ var ActivecallAssistant = Class.create({
 		this.pauseWaitDigits = [];
 		this.showWaitButtonOnActive = [];
 		this.waitMenuItems = [];
+		this.pauseWaitActive = false;
 		
 		// select multicall rules
 		if (PlatformType.isGSM() == true) {
@@ -232,6 +233,7 @@ var ActivecallAssistant = Class.create({
 						QDLogger.log( "processpauseWaitDigits", "pause ", this.pauseWaitDigits[linenumber].charAt(i));
 						this.pauseWaitDigits[linenumber] = this.pauseWaitDigits[linenumber].substring(i + 1);
 						this.pauseTimeout = setTimeout(this.processPauseWaitDigits.bind(this, evt, linenumber), 2500);
+						this.pauseWaitActive = false;
 						return;
 					}
 break;
@@ -261,6 +263,9 @@ break;
 							this.showWaitButtonOnActive[linenumber] = false;
 							this.pauseWaitDigits[linenumber] = this.pauseWaitDigits[linenumber].substring(i + 1);
 							this.pauseTimeout = setTimeout(this.processPauseWaitDigits.bind(this, evt, linenumber), 600);
+							if(i == len-1 && this.pauseWaitActive == true){
+								this.toggleDTMF();
+							}
 							return;
 						}
 				}
@@ -273,6 +278,7 @@ break;
 						QDLogger.log( "processpauseWaitDigits", "pause " , this.pauseWaitDigits[linenumber].charAt(i));
 						this.pauseWaitDigits[linenumber] = this.pauseWaitDigits[linenumber].substring(i + 1);
 						this.pauseTimeout = setTimeout(this.processPauseWaitDigits.bind(this, evt, linenumber), 2500);
+						this.pauseWaitActive = false;
 						return;
 					}
 break;
@@ -301,6 +307,9 @@ break;
 							this.showWaitButtonOnActive[linenumber] = false;
 							this.pauseWaitDigits[linenumber] = this.pauseWaitDigits[linenumber].substring(i + 1);
 							this.pauseTimeout = setTimeout(this.processPauseWaitDigits.bind(this, evt, linenumber), 600);
+							if(i == len-1 && this.pauseWaitActive == true){
+								this.toggleDTMF();
+							}
 							return;
 						}
 				}
@@ -763,6 +772,9 @@ break;
 		// save formatting
 		this.lastFormattedCalls = formattedCall;
 
+		if (this.pauseWaitActive == false) {
+			this.toggleDTMF();
+		}
 	},
     
 	// configures class names and styles for a non-conference call. 
@@ -799,6 +811,7 @@ break;
 		// handle wait digits
 		if (callState === TelephonyCallState.ACTIVE
 			&& this.showWaitButtonOnActive[lineNumber]) {
+			this.pauseWaitActive = true;
 			this.waitDigitsButtonShow(lineNumber, this.pauseWaitDigits[lineNumber], callMsg.length > 1);
 		} else {
 			this.waitDigitsButtonHide(lineNumber, callMsg.length > 1);
