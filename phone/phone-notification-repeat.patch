diff --git a/usr/palm/applications/com.palm.app.phone/app/controllers/app-assistant.js b/usr/palm/applications/com.palm.app.phone/app/controllers/app-assistant.js
index 7f6be38..7d0ac40 100644
--- a/usr/palm/applications/com.palm.app.phone/app/controllers/app-assistant.js
+++ b/usr/palm/applications/com.palm.app.phone/app/controllers/app-assistant.js
@@ -182,6 +182,10 @@ AppAssistant.prototype.handleLaunch = function(params){
 			this.createLockStage();
 			this.loadSettings();
 			return;
+		} else if(params.playalarmsound){
+			this.playAlarmSound();
+		} else if(params.missedTimeOut){
+			this.missedTimeOut();
 		} else {
 			// when in first use, always default to doing nothing for invalid args; 
 			// otherwise default to showing dialpad
@@ -216,6 +220,22 @@ AppAssistant.prototype.handleLaunch = function(params){
     }
 };
 
+//support for notification repeat
+AppAssistant.prototype.missedTimeOut = function() {
+	var stageController = Mojo.Controller.getAppController().getStageProxy("missed");
+	if (stageController) {
+		stageController.delegateToSceneAssistant("closeWindow");
+	}
+};
+
+//support for notification repeat                                      
+AppAssistant.prototype.playAlarmSound = function() {
+	var stageController = Mojo.Controller.getAppController().getStageProxy("misseddash");
+	if (stageController) {
+		stageController.delegateToSceneAssistant("playAlarmSound");
+	}
+};
+					  					
 // parse URI and dial number in it
 AppAssistant.prototype.launchURI = function(uri){
 	var offset = -1;
diff --git a/usr/palm/applications/com.palm.app.phone/app/controllers/dashannounce-assistant.js b/usr/palm/applications/com.palm.app.phone/app/controllers/dashannounce-assistant.js
index 24904b7..d8b1699 100644
--- a/usr/palm/applications/com.palm.app.phone/app/controllers/dashannounce-assistant.js
+++ b/usr/palm/applications/com.palm.app.phone/app/controllers/dashannounce-assistant.js
@@ -57,10 +57,15 @@ var DashannounceAssistant = Class.create({
   deactivate:function(){
 	this.controller.stopListening(this.controller.document, Mojo.Event.activate, this.onFocus);
   	
+ 	//remove the Notification repeat task
+ 	this.removePlayAlarmSoundTask();	
   },
 
   // run callback and close this
   onIconTap: function () {
+	//remove the Notification repeat task
+	this.removePlayAlarmSoundTask();
+  	  	
 	QDLogger.log( "DashannounceAssistant::onTap", "windowName:" , this.windowName);
 	if (this.iconCallback) {
 		this.iconCallback();
@@ -70,6 +75,9 @@ var DashannounceAssistant = Class.create({
   },
   
   onMessageTap: function () {
+	//remove the Notification repeat task
+	this.removePlayAlarmSoundTask();
+  	  	
 	QDLogger.log( "DashannounceAssistant::onTap", "windowName:" , this.windowName);
 	if (this.messageCallback) {
 		this.messageCallback();
@@ -79,6 +87,9 @@ var DashannounceAssistant = Class.create({
   },
   
   updateMessage: function(header, body, itemcount, timestamp) {
+	//remove the Notification repeat task
+	this.removePlayAlarmSoundTask();
+  	  	
   	QDLogger.log("DashannounceAssistant::updateMessage");
 	if(this.windowName == 'misseddash' && timestamp)
 		this.missedTimeStamp=timestamp;
@@ -90,9 +101,15 @@ var DashannounceAssistant = Class.create({
 	this.itemcount = itemcount;
 	this.updateBadge();
 	this.controller.stageController.indicateNewContent(true);
+	
+	//reschedule the nag reminder
+	this.schedulePlayAlarmSoundTask();
   },
   
   updateBadge: function() {
+	//remove the Notification repeat task
+	this.removePlayAlarmSoundTask();
+  	  	
   	   if (this.itemcount > 1) {
 	   		QDLogger.log("DashannounceAssistant::updateBadge", this.itemcount);
 			this.controller.get('notification').removeClassName("single")
@@ -102,6 +119,49 @@ var DashannounceAssistant = Class.create({
 	   		this.controller.get('notification').addClassName("single");
 	   		this.controller.get('itemcount').hide();
 	   }
+	   
+	//reschedule the nag reminder
+	this.schedulePlayAlarmSoundTask();
+  },
+  
+  playAlarmSound: function() {
+	//play nag sound and reschedule
+	PalmSystem.playSoundNotification('alerts');
+	this.schedulePlayAlarmSoundTask();
+  },
+
+  schedulePlayAlarmSoundTask: function() {
+	try {
+		//retrigger reminder every two minutes until we acknowledge it.
+		//change the value in addMinutes to a value other than 2 if you prefer a different time span for the notification repeat.
+		var playSoundTime = new Date();
+		playSoundTime = new Date(playSoundTime.getTime() + 2*60*1000);
+
+		this.controller.serviceRequest('palm://com.palm.taskScheduler', {
+			method: 'updateTask',
+			parameters: {uri: 'palm://com.palm.applicationManager/open',
+			arguments: {'id': 'com.palm.app.phone',
+				'params': {'playalarmsound': true}},
+			key: 'phone-playalarmsound',
+			start: {date: playSoundTime.toUTCString()}}
+			});
+	}
+	catch (e) {
+		Mojo.Log.logException(e, "dashannounce-assistant.schedulePlayAlarmSoundTask");
+	}
+  },
+
+  removePlayAlarmSoundTask: function() {
+	try 
+	{
+		this.controller.serviceRequest('palm://com.palm.taskScheduler', {
+			method: 'removeTask',
+			parameters: {key: 'phone-playalarmsound'}
+			});
+	}
+	catch (e) {
+		Mojo.Log.logException(e, "dashannounce-assistant.removePlayAlarmSoundTask");
+	}
   }
   
 });
diff --git a/usr/palm/applications/com.palm.app.phone/app/controllers/missedcall-assistant.js b/usr/palm/applications/com.palm.app.phone/app/controllers/missedcall-assistant.js
index e03c2f8..e4d1cf8 100644
--- a/usr/palm/applications/com.palm.app.phone/app/controllers/missedcall-assistant.js
+++ b/usr/palm/applications/com.palm.app.phone/app/controllers/missedcall-assistant.js
@@ -27,7 +27,28 @@ var MissedcallAssistant = Class.create({
 		this.controller.get('cancel_button').addEventListener(Mojo.Event.tap, this.onCancel.bindAsEventListener(this));
 		this.renderScene();
 		// stay up for 1 minute
-		this.missedTimeout = window.setTimeout(this.closeWindow.bind(this), MissedcallAssistant.kTimeoutMs);
+//		this.missedTimeout = window.setTimeout(this.closeWindow.bind(this), MissedcallAssistant.kTimeoutMs);
+
+		//Need to use an alarm that will fire even when the phone is asleep.	
+		try
+		{
+			var timeOut = new Date();
+			timeOut = new Date(timeOut.getTime() + MissedcallAssistant.kTimeoutMs);
+
+			this.controller.serviceRequest('palm://com.palm.taskScheduler', {
+				method: 'updateTask',
+				parameters: {uri: 'palm://com.palm.applicationManager/open',
+				arguments: {'id': 'com.palm.app.phone',
+					'params': {'missedTimeOut': true}},
+				key: 'phone-missedTimeOut',
+				start: {date: timeOut.toUTCString()}}
+				});		
+		}
+		catch (e) 
+		{
+			Mojo.Log.logException(e, "******************* missedcall-assistant.setup");
+		}
+		
 		this.controller.listen(this.controller.stageController.document, Mojo.Event.deactivate, this.onBlur.bind(this));
 		this.controller.get('missed_message').addEventListener(Mojo.Event.tap, this.onContactTap.bindAsEventListener(this));
 		this.controller.get('contactPictureContainer').addEventListener(Mojo.Event.tap, this.onContactTap.bindAsEventListener(this));
