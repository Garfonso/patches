Adds the State name to all incoming calls.
Index: /usr/palm/applications/com.palm.app.phone/app/controllers/announcer-assistant.js
===================================================================
--- .orig/usr/palm/applications/com.palm.app.phone/app/controllers/announcer-assistant.js
+++ /usr/palm/applications/com.palm.app.phone/app/controllers/announcer-assistant.js
@@ -309,6 +309,8 @@ var AnnouncerAssistant = Class.create({
 		call.displayName = this.getDisplayNameFromContact(contact);
 		if (!(call.displayName)) {
 			call.displayName = FormatPhoneNumber(number);
+			var message = Messages.contactWithLabel;
+			call.displayName = new Template(message).evaluate({"contact":call.displayName, "label":RegionLookup.regionFromPhoneNumber(number)});
 		} else if (contact.labelFormatted) {
 			var message = Messages.contactWithLabel;
 			call.displayName = new Template(message).evaluate({"contact":call.displayName, "label":contact.labelFormatted});	
Index: /usr/palm/applications/com.palm.app.phone/app/models/CallLogList.js
===================================================================
--- a/usr/palm/applications/com.palm.app.phone/app/models/CallLogList.js
+++ b/usr/palm/applications/com.palm.app.phone/app/models/CallLogList.js
@@ -55,7 +55,7 @@ var CallLogList = (function() {
 		                
 		// format phone number label
 		if (item.label == -1) {
-			item.label = '';
+			item.label = RegionLookup.regionFromPhoneNumber(item.number);
 		} else {
 			var newLabel = Messages.phoneLabel[item.label];
 			if (newLabel) {
Index: /usr/palm/applications/com.palm.app.phone/app/controllers/incomingcall-assistant.js
===================================================================
--- .orig/usr/palm/applications/com.palm.app.phone/app/controllers/incomingcall-assistant.js
+++ /usr/palm/applications/com.palm.app.phone/app/controllers/incomingcall-assistant.js
@@ -159,7 +159,7 @@ var IncomingcallAssistant = Class.create
 		} else if (contact.cnapName && contact.cnapName !== "unknown") {
 			name = contact.cnapName;
 		} else {
-			name = Messages.unknownCaller;
+			name = RegionLookup.regionFromPhoneNumber(number);
 		}
 
 		this.fromContacts = fromContacts;
Index: /usr/palm/applications/com.palm.app.phone/app/controllers/missedcall-assistant.js
===================================================================
--- .orig/usr/palm/applications/com.palm.app.phone/app/controllers/missedcall-assistant.js
+++ /usr/palm/applications/com.palm.app.phone/app/controllers/missedcall-assistant.js
@@ -61,7 +61,7 @@ var MissedcallAssistant = Class.create({
 		this.pictureLoc = this.formatPicture();
 	
 		// ensure empty label is displayed as empty
-		this.displayLabel = (this.contact.labelFormatted ? this.contact.labelFormatted  : "");
+		this.displayLabel = (this.contact.labelFormatted ? this.contact.labelFormatted  : RegionLookup.regionFromPhoneNumber(number));
 		var  tempDateString = Mojo.Format.formatDate(new Date(parseInt(timeStamp)), {time:'short'});
 		this.message = message.interpolate({timeStamp: tempDateString});
 		QDLogger.log( "MissedcallAssistant::updateFields", "end");
Index: /usr/palm/applications/com.palm.app.phone/app/models/FormattedCall.js
===================================================================
--- .orig/usr/palm/applications/com.palm.app.phone/app/models/FormattedCall.js
+++ /usr/palm/applications/com.palm.app.phone/app/models/FormattedCall.js
@@ -50,7 +50,7 @@ var FormattedCall =  Class.create({
 		this.id = callMsg[lineNumber].id;
 		
 		// ensure empty label is displayed as empty
-		this.displayLabel = (callMsg[lineNumber].contact.labelFormatted ? callMsg[lineNumber].contact.labelFormatted : "");
+		this.displayLabel = (callMsg[lineNumber].contact.labelFormatted ? callMsg[lineNumber].contact.labelFormatted : RegionLookup.regionFromPhoneNumber(callMsg[lineNumber].number));
 		this.numberCaption = ((callMsg[lineNumber].contact.name !== undefined || callMsg[lineNumber].contact.id !== undefined) ? this.number : " ");
 		
     },
