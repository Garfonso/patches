diff --git a/usr/palm/applications/com.palm.app.phoneprefs/app/controllers/preflist-assistant.js b/usr/palm/applications/com.palm.app.phoneprefs/app/controllers/preflist-assistant.js
index 124990a..51e8a2c 100644
--- a/usr/palm/applications/com.palm.app.phoneprefs/app/controllers/preflist-assistant.js
+++ b/usr/palm/applications/com.palm.app.phoneprefs/app/controllers/preflist-assistant.js
@@ -103,6 +103,10 @@ var PreflistAssistant = Class.create({
 			value: true
 		};
 		       
+	this.phoneAppHideCallDurationModel = {
+			value: false
+		};
+		       
         this.callFwdModel = {
 			value: false
 		};
@@ -145,6 +149,13 @@ var PreflistAssistant = Class.create({
         }, this.showContactMatchModel);
         this.controller.get('showContactMatch').addEventListener(Mojo.Event.propertyChange, this.doPropertyChanged.bindAsEventListener(this, 'showContactMatch'));
 
+		this.controller.setupWidget('phoneAppHideCallDuration', {
+	    modelProperty: 'value',
+	    trueLabel: $L('Yes'),
+	    falseLabel: $L('No')
+	}, this.phoneAppHideCallDurationModel);
+	this.controller.get('phoneAppHideCallDuration').addEventListener(Mojo.Event.propertyChange, this.doPropertyChanged.bindAsEventListener(this, 'phoneAppHideCallDuration'));
+
 		this.controller.setupWidget('callfwd', {
             modelProperty: 'value'
         }, this.callFwdModel);
@@ -393,6 +404,7 @@ var PreflistAssistant = Class.create({
 			['phoneInternationalDialingActive', 'phoneInternationalDialingRegionId'],this.updateInternationalDialingSettings.bind(this));
 		this.networkStatusQueryReq = TelephonyService.networkStatusQuery(this.updateNetworkname.bind(this));
         this.getSystemPreferencesServiceShowcontactmatchReq = SystemService.getSystemPreferencesService('showcontactmatch',this.updateShowcontactmatch.bind(this));
+	this.getSystemPreferencesServicephoneAppHideCallDurationReq = SystemService.getSystemPreferencesService('phoneAppHideCallDuration',this.updatephoneAppHideCallDuration.bind(this));
 		this.updateManualDataSettingsReq = SystemService.getManualDataSettings(this.updateManualDataSettings.bind(this));
 		this.getVoiceNumberEditableReq = SystemService.getSystemPreferencesService('allowEditVoicemail',this.updateVoicenumberEditableQueryDone.bind(this));
 		this.getBandSelectionAllowed = SystemService.getSystemPreferencesService('hideRatSelection',this.updateRatSelection.bind(this));
@@ -1002,7 +1014,14 @@ voiceNumberSetDone: function(payload){
         
     },
 	
+        //phoneAppHideCallDuration
+    updatephoneAppHideCallDuration: function(payload){
+                if(payload.phoneAppHideCallDuration == undefined)
+                        return;
+        this.phoneAppHideCallDurationModel.value = payload.phoneAppHideCallDuration;
+        this.controller.modelChanged(this.phoneAppHideCallDurationModel);
 	
+    },
 	
 	//DTMF
     updateDTMF: function(payload){
@@ -2174,6 +2193,16 @@ break;
 			case 'showContactMatch':
    	            this.setSystemPreferencesServiceReq = SystemService.setSystemPreferencesService('showcontactmatch',value,null);
 				break;
+            case 'phoneAppHideCallDuration':
+                this.setSystemPreferencesServiceReq = SystemService.setSystemPreferencesService('phoneAppHideCallDuration',value,null);
+                this.controller.showAlertDialog({
+                        title:          $L('Luna Restart Required'),
+                        preventCancel:  true,
+                        message:        $L('You must restart Luna for this setting to take effect. Restart takes approximately 30 seconds. Restart Now?'),
+                        choices:        [{label:$L('Ok'), value:'ok'},{label:$L('Later'), value:'later'}],
+                        onChoose:       this.LunaRestartOK.bindAsEventListener(this)
+                });
+                break;
             case 'showOutgoingCallerID':
                 this.clirSetReq = TelephonyService.clirSet(!value, this.handleError.bind(this));
             	break;            
@@ -2254,6 +2283,24 @@ break;
 				break;
         }
     },
+
+    LunaRestartOK: function(payload) {
+        if(payload == 'ok') {
+                this.controller.serviceRequest('palm://org.webosinternals.ipkgservice', {
+                        method: "restartluna",
+                        parameters: {}
+                        });
+        } else {
+                this.controller.showAlertDialog({
+                        title:          $L('Luna Restart Required'),
+                        preventCancel:  true,
+                        message:        $L('Remember, you must restart Luna (or the phone) for this setting to take effect.'),
+                        choices:        [{label:$L('Ok'), value:'ok'}],
+                        onChoose:       function(value) { return }
+                });
+        }
+
+    },
 	
 	handleError: function(payload) {
 		
diff --git a/usr/palm/applications/com.palm.app.phoneprefs/app/views/preflist/preflist-scene.html b/usr/palm/applications/com.palm.app.phoneprefs/app/views/preflist/preflist-scene.html
index 9912c08..2a92355 100644
--- a/usr/palm/applications/com.palm.app.phoneprefs/app/views/preflist/preflist-scene.html
+++ b/usr/palm/applications/com.palm.app.phoneprefs/app/views/preflist/preflist-scene.html
@@ -42,6 +42,22 @@
         </div>
     </div>
 
+  <div class="palm-group">
+        <div x-mojo-loc="" class="palm-group-title">
+            Call Log
+        </div>
+        <div class="palm-list">
+            <div class="palm-row single">
+                                <div class="palm-row-wrapper">
+                        <div id="phoneAppHideCallDuration" x-mojo-element="ToggleButton"></div>
+                        <div class="title capitalize" x-mojo-loc="">
+                            Hide Call Durations
+                        </div>
+                    </div>
+            </div>
+        </div>
+    </div>
+
     <div class="palm-group" id="calls">
         <div x-mojo-loc="" class="palm-group-title">
             Calls
