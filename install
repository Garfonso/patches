#!/bin/sh
USER=`whoami`
PATCH_NAME=$1
GIT_PATH=/opt/src/modifications

if [ "$USER" != "root" ]
then
  echo "ERROR: Must be root, try sudo -i"
  exit 1
fi

if [ ! -e $GIT_PATH ]
then
  echo "ERROR: Cannot find git tree at: $GIT_PATH"
  echo "Please visit http://www.webos-internals.org/wiki/Applying_Patches"
  exit 1
fi

if [ $# -gt 1 ]
then 
  echo "ERROR: Too many arguments"
  exit 1
fi

cd $GIT_PATH
if [ $? -ne 0 ]
then
  echo "ERROR: Cannot find git path: $GIT_PATH"
  echo "Please visit http://www.webos-internals.org/wiki/Applying_Patches"
  exit 1
fi

if [ $# -eq 0 ]
then
  echo ""
  echo -n "Patch name to apply? [ALL] > "
  read PATCH_NAME
fi

if [ "$PATCH_NAME" = "-l" ]
then
  find . -name *.patch | awk -F/ '{print $NF}'
  exit 0
fi

if [ "$PATCH_NAME" != "" ]
then
  echo "Looking for patch $PATCH_NAME..."
  find . -name $PATCH_NAME | grep $PATCH_NAME
  if [ $? -ne 0 ]
  then
    echo "ERROR: Could not find patch: $PATCH_NAME"
    exit 1
  fi
fi

echo "Pulling latest git tree..."
git pull
if [ $? -ne 0 ]
then
  echo "FAILED"
  echo "Please visit http://www.webos-internals.org/wiki/Applying_Patches"
  exit 1
fi

cd /
if [ $? -ne 0 ]
then
  echo "Can't cd / ??? ----> RUN!"
  exit 1
fi


if [ "$EMULATOR" = "" ]
then
  echo "Remounting / rw..."
  mount -o rw,remount /
  if [ $? -ne 0 ]
  then
    echo "ERROR: Could not remount / in rw"
    echo "Please visit http://www.webos-internals.org/wiki/Applying_Patches"
    exit 1
  fi
fi

echo "Popping all previous patches..."
quilt pop -a -f

PATCH_PATH=`find ${GIT_PATH} -name ${PATCH_NAME}`
echo "Importing patch ${PATCH_PATH}..."
quilt import -f ${PATCH_PATH}

echo "Verifying patch is in quilt series..."
quilt series | grep $PATCH_NAME
if [ $? -ne 0 ]
then
  echo "WARNING: Cannot find patch in series"
  echo "Please visit http://www.webos-internals.org/wiki/Applying_Patches"
fi

echo "Pushing all patches..."
quilt push -a
if [ $? -ne 0 ]
then
  echo "ERROR: Could not push patch"
  echo "Please visit http://www.webos-internals.org/wiki/Applying_Patches"
  exit 1
fi

echo "SUCCESS"

if [ "$EMULATOR" = "" ]
then
  echo "Remounting / to read-only"
  mount -o ro,remount /
fi
