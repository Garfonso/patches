diff --git a/usr/palm/applications/com.palm.app.maps/app/assistants/mapshell-assistant.js b/usr/palm/applications/com.palm.app.maps/app/assistants/mapshell-assistant.js
index 75c81aa..c98fc09 100644
--- a/usr/palm/applications/com.palm.app.maps/app/assistants/mapshell-assistant.js
+++ b/usr/palm/applications/com.palm.app.maps/app/assistants/mapshell-assistant.js
@@ -5,6 +5,8 @@ var MapshellAssistant = Class.create({
 		// when true, card the app else instruct webview to go back
 		this.goBack = false;
 		this.spinnerModel = {spinning: false};
+		// fs mode parameter
+		this.paramFS = true
 		
 		// event handlers
 		this._onWebViewCreatePageH = this._onWebViewCreatePage.bind(this);
@@ -16,6 +18,7 @@ var MapshellAssistant = Class.create({
 		this._onWebViewTitleUrlChangedH = this._onWebViewTitleUrlChanged.bind(this);
 		this._onAdapterConnectH = this._onAdapterConnect.bind(this);
 		this._onAdapterDisconnectH = this._onAdapterDisconnect.bind(this);
+		this._holdHandlerH = this._holdHandler.bind(this);
 		
 		/*
 		var curr = new Date();
@@ -41,6 +44,9 @@ var MapshellAssistant = Class.create({
 			items: [Mojo.Menu.editItem]
 		};	
 		this.controller.setupWidget(Mojo.Menu.appMenu, appMenuAttrs, this.appMenuModel);	
+
+		//set fs mode
+		this.controller.enableFullScreenMode(this.paramFS);
 		
 		// setup spinner
 		this.controller.setupWidget('disconnected_spinner', 
@@ -66,6 +72,7 @@ var MapshellAssistant = Class.create({
 		this.controller.listen('webview', Mojo.Event.webViewTitleUrlChanged, this._onWebViewTitleUrlChangedH);
 		this.controller.listen('webview', Mojo.Event.webViewServerConnect, this._onAdapterConnectH);
 		this.controller.listen('webview', Mojo.Event.webViewServerDisconnect, this._onAdapterDisconnectH);
+		this.controller.listen('webview', Mojo.Event.hold, this._holdHandlerH);
 	},
 	
 	cleanup: function() {
@@ -79,6 +86,7 @@ var MapshellAssistant = Class.create({
 		this.controller.stopListening('webview', Mojo.Event.webViewTitleUrlChanged, this._onWebViewTitleUrlChangedH);
 		this.controller.stopListening('webview', Mojo.Event.webViewServerConnect, this._onAdapterConnectH);	
 		this.controller.stopListening('webview', Mojo.Event.webViewServerDisconnect, this._onAdapterDisconnectH);
+		this.controller.stopListening('webview', Mojo.Event.hold, this._holdHandlerH);
 	},
 	
 	activate: function() {
@@ -272,6 +280,16 @@ var MapshellAssistant = Class.create({
 		this.controller.modelChanged(this.spinnerModel);
 	},
 	
+	_holdHandler: function(event) {
+		if (this.paramFS) {
+			this.paramFS = false
+			this.controller.enableFullScreenMode(this.paramFS);
+		} 
+		else {
+			this.paramFS = true
+			this.controller.enableFullScreenMode(this.paramFS);
+		}
+	},
 
 	handleCommand: function(event) {
 		if (event.type == Mojo.Event.back) {
