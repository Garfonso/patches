diff --git a/usr/palm/applications/com.palm.app.browser/app/controllers/chrome.js b/usr/palm/applications/com.palm.app.browser/app/controllers/chrome.js
index 4e0f974..fc1520d 100644
--- a/usr/palm/applications/com.palm.app.browser/app/controllers/chrome.js
+++ b/usr/palm/applications/com.palm.app.browser/app/controllers/chrome.js
@@ -102,12 +102,39 @@ Chrome.prototype._hidePortrait = function() {
 	}
 };
 
+Chrome.prototype.show = UrlBar.prototype._showNoOp;
+Chrome.prototype.hide = UrlBar.prototype._hideNoOp;
+
 Chrome.prototype._showNoOp = function() {
 	// DO NOTHING - We don't show anything in landscape.	
+	var animator;
+	var element = this.controller.get(this._elementName);
+	
+	// If we are visible then the current spacer height is 
+	if (element && (this._currentHeight === 0)) {
+		animator = Mojo.Animation.animateStyle(element, 'height', 'linear', {
+			from: 0,
+			to: this._maxHeight,
+			duration: 0.15,
+			reverse: false
+		});
+		this._currentHeight = this._maxHeight;
+	}
 };
 
 Chrome.prototype._hideNoOp = function() {
 	// DO NOTHING - We should not be displayed in landscape.
+	var animator;
+	var element = this.controller.get(this._elementName);
+	if (element && (this._currentHeight > 0)) {
+		animator = Mojo.Animation.animateStyle(element, 'height', 'linear', {
+			from: 0,
+			to: this._maxHeight,
+			duration: 0.15,
+			reverse: true
+		});
+		this._currentHeight = 0;
+	}
 };
 
 Chrome.prototype.isVisible = function() {
diff --git a/usr/palm/applications/com.palm.app.browser/app/controllers/page-assistant.js b/usr/palm/applications/com.palm.app.browser/app/controllers/page-assistant.js
index a805d2c..1074480 100644
--- a/usr/palm/applications/com.palm.app.browser/app/controllers/page-assistant.js
+++ b/usr/palm/applications/com.palm.app.browser/app/controllers/page-assistant.js
@@ -1198,7 +1198,95 @@ PageAssistant.prototype._newBrowserPage = function(url, pageIdentifier){
 PageAssistant.prototype._streamResource = function(uri, appid, mimeType){
 
 	Mojo.Log.info("Streaming: '%s' with '%s' (%s)", uri, appid, mimeType);
-
+	if(appid === 'com.palm.app.email')
+	{
+	    //an email was clicked, so we bypass the download dialog and open the email app.
+	    var params = {target: uri, mimeType: mimeType};
+	    this.controller.serviceRequest('palm://com.palm.applicationManager',{
+	        method: 'open',
+	        parameters: {
+	            'id': appid,
+	            'params': params
+	        }}
+	    );
+	    return;
+	}
+			if(appid === 'com.palm.app.docviwer')
+	{
+	    //a doc was clicked, so we bypass the download dialog and open the docviewer app.
+	    var params = {target: uri, mimeType: mimeType};
+	    this.controller.serviceRequest('palm://com.palm.applicationManager',{
+	        method: 'open',
+	        parameters: {
+	            'id': appid,
+	            'params': params
+	        }}
+	    );
+	    return;
+	}
+			if(appid === 'com.palm.app.pdfviewer')
+	{
+	    //a pdf was clicked, so we bypass the download dialog and open the pdfviewer app.
+	    var params = {target: uri, mimeType: mimeType};
+	    this.controller.serviceRequest('palm://com.palm.applicationManager',{
+	        method: 'open',
+	        parameters: {
+	            'id': appid,
+	            'params': params
+	        }}
+	    );
+	    return;
+	}
+			if(appid === 'com.palm.app.maps')
+	{
+	    //a map was clicked, so we bypass the download dialog and open the maps app.
+	    var params = {target: uri, mimeType: mimeType};
+	    this.controller.serviceRequest('palm://com.palm.applicationManager',{
+	        method: 'open',
+	        parameters: {
+	            'id': appid,
+	            'params': params
+	        }}
+	    );
+	    return;
+	}
+			if(appid === 'com.palm.app.youtube')
+			{
+	    //a youtube video was clicked, so we bypass the download dialog and open the youtube app.
+	    var params = {target: uri, mimeType: mimeType};
+	    this.controller.serviceRequest('palm://com.palm.applicationManager',{
+	        method: 'open',
+	        parameters: {
+	            'id': appid,
+	            'params': params
+	        }}
+	    );
+	    return;
+	}
+			if(appid === 'com.palm.app.phone')
+	{		
+	    //a phone # was clicked, so we bypass the download dialog and open the phone app.
+	    var params = {target: uri, mimeType: mimeType};
+	    this.controller.serviceRequest('palm://com.palm.applicationManager',{
+	        method: 'open',
+	        parameters: {
+	            'id': appid,
+	            'params': params
+	        }}
+	    );
+	    return;
+	}
+	    this._downloadWidgetElement = this.controller.showDialog({
+	        uri: uri,
+	        mimeType: mimeType,
+	        appid: appid,
+	        template: 'download/download-stream-popup',
+	        assistant: new DownloadDialogAssistant({
+	        sceneAssistant: this,
+	        onDismiss: function(cParams) { // DOWNLOAD
+	                this._downloadResource(uri);
+	        }.bind(this),
+	        onAccept: function(cParams) { // STREAM
 	// Only a few select applications can be
 	crossAppScene = {
 		'com.palm.app.videoplayer': 'nowplaying',
@@ -1206,11 +1294,9 @@ PageAssistant.prototype._streamResource = function(uri, appid, mimeType){
 	};
 	var params = {target: uri, mimeType: mimeType};
 	if (crossAppScene[appid]) {
-
 		var args = { appId: appid, name: crossAppScene[appid] };
 		this.controller.stageController.pushScene(args, params);
-	}
-	else {
+			} else {
 		this.controller.serviceRequest('palm://com.palm.applicationManager', {
 			method: 'open',
 			parameters: {
@@ -1219,6 +1305,9 @@ PageAssistant.prototype._streamResource = function(uri, appid, mimeType){
 			}
 		});
 	}
+	        }.bind(this)})
+	});
+
 };
 
 /**
@@ -2237,6 +2326,31 @@ PageAssistant.prototype._onKeyDownEvent = function(event) {
 		// allowed to trigger the bar.
 		if (this._addressBar.isAGotoAddressBarEvent(event.originalEvent)) {
 			this._gotoUrlBar();
+	       	} else {
+		       	var key = event.originalEvent.keyCode;
+		       	var scroller = this.controller.getSceneScroller();
+		       	var pageHeight = scroller.mojo.scrollerSize().height;
+		       	if (pageHeight > 50) pageHeight = pageHeight - 50;
+		       	if (key == 32) {
+			       	// alternate method for scrolling, gives visual feedback, but slower
+			       	//var currentTop = scroller.mojo.getScrollPosition().top;
+			       	//currentTop += scroller.mojo.scrollerSize().height - 50;
+			       	//scroller.mojo.scrollTo(undefined, currentTop, true);
+			       	scroller.mojo.adjustBy(0, -1*pageHeight);
+			       	this._addressBar.hide();
+		       	} else if (key == 0) {
+			       	scroller.mojo.adjustBy(0, pageHeight);
+		       	} else if (key == 190) {
+			       	scroller.mojo.adjustBy(0, -25);
+			       	this._addressBar.hide();
+		       	} else if (key == 8) {
+			       	scroller.mojo.revealTop(0);
+		       	} else if (key == 13) {
+			       	scroller.mojo.revealBottom(0);
+			       	this._addressBar.hide();
+		       	} else {
+			       	Mojo.Log.error("Ignoring keyCode", key);
+		       	}
 		}
 	}
 };
diff --git a/usr/palm/applications/com.palm.app.browser/app/controllers/urlbar.js b/usr/palm/applications/com.palm.app.browser/app/controllers/urlbar.js
index 94abd5d..cafa2e4 100644
--- a/usr/palm/applications/com.palm.app.browser/app/controllers/urlbar.js
+++ b/usr/palm/applications/com.palm.app.browser/app/controllers/urlbar.js
@@ -47,6 +47,10 @@ UrlBar.prototype.setOrientation = function(orientation) {
 	if (orientation !== 'up') {
 		// In landscape and down we ALWAYS hide the BAR so we make sure it's
 		// already hidden by calling' 'hide'.
+		this.show = this._showNoOp;
+		this.hide = this._hideNoOp;
+	} else {
+		// Default is portrait.
 		this._hidePortrait();
 	}
 
@@ -73,6 +77,12 @@ UrlBar.prototype.setup = function(properties) {
 	this._onPropertyChange = properties.onPropertyChange || function(){};
 	this._configOrientation(properties.orientation || 'up');
 
+	if (properties.orientation === 'up') {                               
+		this.owidth = 271;                                                
+	} else {                                                             
+		this.owidth = 430;                                                
+        }
+
 	this.models = {
 		urlInput: {
 			template: 'page/url-field',
@@ -90,7 +100,7 @@ UrlBar.prototype.setup = function(properties) {
 				url: ''
 			},
 
-			width: 271
+			width: this.owidth
 		},
 
 		// Beware: These are shallow copies.
@@ -416,12 +426,25 @@ UrlBar.prototype._hidePortrait = function() {
 	this.controller.setMenuVisible(Mojo.Menu.viewMenu, false);
 };
 
+UrlBar.prototype.show = UrlBar.prototype._showNoOp;
+UrlBar.prototype.hide = UrlBar.prototype._hideNoOp;
+
 UrlBar.prototype._showNoOp = function() {
 	// DO NOTHING - We don't show anything in landscape.
+	var menuAssistant = this.controller._menu.assistant;
+	var spacerHeight = menuAssistant.viewSpacerHeight;
+	
+	menuAssistant.viewSpacerHeight = 0;
+	this.controller.setMenuVisible(Mojo.Menu.viewMenu, true);
 };
 
 UrlBar.prototype._hideNoOp = function() {
 	// DO NOTHING - We should not be displayed in landscape.
+	var menuAssistant = this.controller._menu.assistant;
+	var spacerHeight = menuAssistant.viewSpacerHeight;
+	
+	menuAssistant.viewSpacerHeight = 0;
+	this.controller.setMenuVisible(Mojo.Menu.viewMenu, false);
 };
 
 UrlBar.prototype.isVisible = function() {
diff --git a/usr/palm/applications/com.palm.app.browser/sources.json b/usr/palm/applications/com.palm.app.browser/sources.json
index 54187ce..7d79e70 100644
--- a/usr/palm/applications/com.palm.app.browser/sources.json
+++ b/usr/palm/applications/com.palm.app.browser/sources.json
@@ -48,6 +48,9 @@
   	"source": "app\/controllers\/download-controller.js",
   },
   {  
+  	"source":"app\/controllers\/downloaddialog-assistant.js"
+  },
+  {  
   	"source": "app\/controllers\/preferences-assistant.js",
   },
   {
diff --git a/usr/palm/applications/com.palm.app.browser/stylesheets/browser.css b/usr/palm/applications/com.palm.app.browser/stylesheets/browser.css
index 6215e0b..aee8654 100644
--- a/usr/palm/applications/com.palm.app.browser/stylesheets/browser.css
+++ b/usr/palm/applications/com.palm.app.browser/stylesheets/browser.css
@@ -753,7 +753,7 @@ div#historyScroller {
 }
 
 .search-results-container .palm-list {
-	width: 304px;
+	width: 95%;
 }
 
 .search-results-container .search.first {
