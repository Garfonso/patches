diff --git a/usr/palm/applications/com.palm.app.browser/css/browser.css b/usr/palm/applications/com.palm.app.browser/css/browser.css
index b2734ba..d360bdc 100644
--- a/usr/palm/applications/com.palm.app.browser/css/browser.css
+++ b/usr/palm/applications/com.palm.app.browser/css/browser.css
@@ -1,3 +1,41 @@
+.gestureBarRightTop {
+  width: 7px;
+  height: 50%;
+  background: none;
+  position: absolute;
+  top: 0px;
+  right: 0px;
+  z-index: 120;
+}
+
+.gestureBarRightBottom {
+  width: 7px;
+  height: 50%;
+  background: none;
+  position: absolute;
+  bottom: 0px;
+  right: 0px;
+  z-index: 120;
+}
+.gestureBarLeftTop {
+  width: 7px;
+  height: 50%;
+  background: none;
+  position: absolute;
+  top: 0px;
+  left: 0px;
+  z-index: 120;
+}
+.gestureBarLeftBottom {
+  width: 7px;
+  height: 50%;
+  background: none;
+  position: absolute;
+  bottom: 0px;
+  left: 0px;
+  z-index: 120;
+}
+
 /* Start Page */
 
 .startpage-list .enyo-datalist-client {
diff --git a/usr/palm/applications/com.palm.app.browser/source/Browser.js b/usr/palm/applications/com.palm.app.browser/source/Browser.js
index f2d5a46..32620f4 100644
--- a/usr/palm/applications/com.palm.app.browser/source/Browser.js
+++ b/usr/palm/applications/com.palm.app.browser/source/Browser.js
@@ -56,6 +56,10 @@ enyo.kind({
 			onPrint: "doPrint",
 			minFontSize: 2,
 		},
+    {kind: "Control", className: "gestureBarLeftTop", onmousedown: "gestureLeftTop"},
+    {kind: "Control", className: "gestureBarLeftBottom", onmousedown: "gestureLeftBottom"},
+    {kind: "Control", className: "gestureBarRightTop", onmousedown: "gestureRightTop"},
+    {kind: "Control", className: "gestureBarRightBottom", onmousedown: "gestureRightBottom"},
 		{kind: "FindBar", showing: false, onFind: "find", onGoToPrevious: "goToPrevious", onGoToNext: "goToNext"},
 		{name: "context", kind: "BrowserContextMenu", onItemClick: "contextItemClick"},
 		{name: "dialog", kind: "VerticalAcceptCancelPopup", cancelCaption: "", components: [
@@ -84,7 +88,8 @@ enyo.kind({
 				{kind: "Button", flex: 1, caption: $L("Trust Once"), response: "2", onclick: "closeSSLConfirmBox"},
 				{kind: "Button", flex: 1, caption: $L("Don't Trust"), response: "0", onclick: "closeSSLConfirmBox"}
 			]}
-		]}
+		]},
+		{kind:"PalmService", name:"getTweaks", service:"palm://org.webosinternals.tweaks.prefs/", method:"get", onSuccess:"setGestureTweaks", onFailure:"setDefaultGestures"},
 	],
 	WebKitErrors: {
 		ERR_SYS_FILE_DOESNT_EXIST: 14,
@@ -103,6 +108,63 @@ enyo.kind({
 		if (window.PalmSystem) {
 			this.$.view.setIdentifier(enyo.windowParams.webviewId);
 		}
+		this.$.getTweaks.call({owner: "customBrowserGestures", keys: ["browserGestureLeftTop","browserGestureLeftBottom","browserGestureRightTop","browserGestureRightBottom"]});
+	},
+	gestureAction: function(gestureArea) {
+		switch (gestureArea) {
+			case "back":
+    	  this.goBack();
+				break;
+			case "forward":
+    	  this.goForward();
+				break;
+			case "refresh":
+    	  this.reloadClick();
+				break;
+			case "bookmarks":
+    	  this.doOpenBookmarks();
+				break;
+			case "history":
+				break;
+			case "jumpTop":
+				break;
+			case "jumpBottom":
+				break;
+			default:
+				break;
+		}
+	},
+	gestureLeftTop: function() {
+    this.gestureAction(this.gestureLeftTopAction);
+	},
+	gestureLeftBottom: function() {
+  	this.gestureAction(this.gestureLeftBottomAction);
+	},
+	gestureRightTop: function() {
+  	this.gestureAction(this.gestureRightTopAction);
+	},
+	gestureRightBottom: function() {
+  	this.gestureAction(this.gestureRightBottomAction);
+	},
+	setGestureTweaks: function(inSender, inResponse) {
+  	if((inResponse) && (inResponse.browserGestureLeftTop)) {
+      this.gestureLeftTopAction = inResponse.browserGestureLeftTop;
+    }
+  	if((inResponse) && (inResponse.browserGestureLeftBottom)) {
+      this.gestureLeftBottomAction = inResponse.browserGestureLeftBottom;
+    }
+  	if((inResponse) && (inResponse.browserGestureRightTop)) {
+      this.gestureRightTopAction = inResponse.browserGestureRightTop;
+    }
+  	if((inResponse) && (inResponse.browserGestureRightBottom)) {
+      this.gestureRightBottomAction = inResponse.browserGestureRightBottom;
+    }
+	},
+	setDefaultGestures: function(inSender, inResponse) {
+  	this.gestureLeftBottomAction = "back";
+  	this.gestureRightBottomAction = "forward";
+  	this.gestureLeftTopAction = "refresh";
+  	this.gestureRightTopAction = "bookmarks";
 	},
 	resize: function() {
 		this.$.actionbar.resize();
