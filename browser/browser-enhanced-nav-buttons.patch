diff --git a/usr/palm/applications/com.palm.app.browser/css/browser.css b/usr/palm/applications/com.palm.app.browser/css/browser.css
index a2dd6b4..d81f8eb 100644
--- a/usr/palm/applications/com.palm.app.browser/css/browser.css
+++ b/usr/palm/applications/com.palm.app.browser/css/browser.css
@@ -1,3 +1,28 @@
+/* Extended Back Button */
+
+.history-popup {
+	min-width: 50px;
+	-webkit-box-sizing: border-box;
+	border-width: 0px;
+	-webkit-border-image: url(../images/popup.png) 0 0 0 0 stretch stretch;
+	/* end enyo-popup overrides */
+	padding: 0px;
+	margin: 0px;
+	border: 1px solid #222;
+	background: rgba(50,50,50,1);
+}
+
+.history-row {
+	font-size: 16px;
+	color: #fff;
+	padding: 10px;
+	border-top: 1px solid #444;
+	max-width: 450px;
+	overflow: hidden;
+	white-space: nowrap;
+	text-overflow: ellipsis;
+}
+
 /* Start Page */
 
 .startpage-list .enyo-datalist-client {
diff --git a/usr/palm/applications/com.palm.app.browser/source/ActionBar.js b/usr/palm/applications/com.palm.app.browser/source/ActionBar.js
index b680425..c9b0e07 100644
--- a/usr/palm/applications/com.palm.app.browser/source/ActionBar.js
+++ b/usr/palm/applications/com.palm.app.browser/source/ActionBar.js
@@ -10,11 +10,17 @@ enyo.kind({
 		canGoBack: false,
 		canGoForward: false,
 		canShare: true,
+		currentPage: {},
+		historyUrl: "",
 		searchPreferences: {},
 		defaultSearch: "",
 		progress: 0,
 		loading: false
 	},
+	backHistory: [],
+	forwardHistory: [],
+	wentBackOrForward: false,
+	buttonHeld: false,
 	events: {
 		onBack: "",
 		onForward: "",
@@ -25,13 +31,14 @@ enyo.kind({
 		onAddToLauncher: "",
 		onShareLink: "",
 		onOpenBookmarks: "",
-		onNewCard: ""
+		onNewCard: "",
+		onHistorySelected: ""
 	},
 	components: [
     	{kind: "Control", showing: false, name: "title", className: "page-title enyo-text-ellipsis", content: "Untitled"},
 		{kind: enyo.HFlexBox, className: "menu-container", align: "center", components: [
-			{kind: "ToolButton", name: "back", className: "actionbar-tool-button", icon: "images/chrome/menu-icon-back.png", onclick: "doBack"},
-			{kind: "ToolButton", name: "forward", className: "actionbar-tool-button", icon: "images/chrome/menu-icon-forward.png", onclick: "doForward"},
+			{kind: "ToolButton", name: "back", className: "actionbar-tool-button", icon: "images/chrome/menu-icon-back.png", onclick: "goBack", onmousehold: "openBackHistoryPopup"},
+			{kind: "ToolButton", name: "forward", className: "actionbar-tool-button", icon: "images/chrome/menu-icon-forward.png", onclick: "goForward", onmousehold: "openForwardHistoryPopup"},
 			{kind: "ToolButton", name: "search", className: "actionbar-tool-button", flex: 1, kind: "URLSearch", onLoad: "doLoad", onStopLoad: "doStopLoad", onRefresh: "doRefresh"},
 			{kind: "ToolButton", name: "share", className: "actionbar-tool-button", icon: "images/chrome/menu-icon-share.png", onclick: "showSharePopup"},
 			{kind: "ToolButton", className: "actionbar-tool-button", icon: "images/chrome/menu-icon-newcard.png", onclick: "doNewCard"},
@@ -42,6 +49,8 @@ enyo.kind({
 			{caption: $L("Share Link"), onclick: "doShareLink"},
 			{caption: $L("Add to Launcher"), onclick: "doAddToLauncher"}
 		]},
+		{name: "backPopup", kind: "Popup", className: "history-popup", onClose: "backPopupClosed", components: []},
+		{name: "forwardPopup", kind: "Popup", className: "history-popup", onClose: "forwardPopupClosed", components: []},
 		{name: "progressBar", kind: "ProgressBar", className: "url-progress invisible", animatePosition: false},
 	],
 	//* @public
@@ -91,6 +100,100 @@ enyo.kind({
 		this.$.sharePopup.close();
 		this.$.sharePopup.openAtControl(this.$.share, {left: -pop.width+10, top: 26});
 	},
+	closeHistoryPopups: function() {
+		if (this.buttonHeld) this.$[this.buttonHeld+"Popup"].close();
+	},
+ 	currentPageChanged: function(oldValue, newValue) {
+		this.closeHistoryPopups();
+		if (!this.wentBackOrForward && oldValue.url) {
+			this.backHistory.unshift(oldValue);
+			if (this.forwardHistory.length > 0) this.forwardHistory.splice(0, this.forwardHistory.length);
+		} else {
+			this.wentBackOrForward = false;
+		}
+		this.canGoBack = this.backHistory.length > 0;
+		this.canGoForward = this.forwardHistory.length > 0;
+	},
+	goBack: function(inIndex) {
+		if (!this.buttonHeld && this.backHistory.length > 0) {
+			if (isNaN(inIndex)) {
+				this.forwardHistory.unshift(this.currentPage);
+				this.historyUrl = this.backHistory[0].url;
+				this.backHistory.shift();
+			} else {
+				this.forwardHistory.unshift(this.currentPage);
+				for (var i=0; i<inIndex; i++) {
+					this.forwardHistory.unshift(this.backHistory[i]);
+				}
+				this.historyUrl = this.backHistory[inIndex].url;
+				this.backHistory.splice(0,inIndex+1);
+			}
+			this.wentBackOrForward = true;
+			this.doHistorySelected();
+		}
+	},
+	goForward: function(inIndex) {
+		if (!this.buttonHeld && this.forwardHistory.length > 0) {
+			if (isNaN(inIndex)) {
+				this.backHistory.unshift(this.currentPage);
+				this.historyUrl = this.forwardHistory[0].url;
+				this.forwardHistory.shift();
+			} else {
+				this.backHistory.unshift(this.currentPage);
+				for (var i=0; i<inIndex; i++) {
+					this.backHistory.unshift(this.forwardHistory[i]);
+				}
+				this.historyUrl = this.forwardHistory[inIndex].url;
+				this.forwardHistory.splice(0,inIndex+1);
+			}
+			this.wentBackOrForward = true;
+			this.doHistorySelected();
+		}
+	},
+	populateHistoryPopups: function() {
+		var a = (this.buttonHeld == "back" ? this.backHistory : this.forwardHistory);
+		var popup = this.$[this.buttonHeld+"Popup"];
+		popup.destroyControls();
+		for(var i=0; i<a.length; i++) {
+			popup.createComponent({kind: "HistoryItem", hb: this.buttonHeld, url: a[i].url, index: i, content: a[i].title, onclick: "selectHistoryItem", owner: this});
+		}
+	},
+	openBackHistoryPopup: function() {
+		if (this.buttonHeld) {
+			this.closeHistoryPopups();
+		}
+		this.buttonHeld = "back";
+		this.$.back.setDepressed(true);
+		this.$.backPopup.openAt({left: 0, top: 53});
+		this.populateHistoryPopups();
+		this.$.backPopup.render();
+	},
+	backPopupClosed: function() {
+		this.$.back.setDepressed(false);
+		this.buttonHeld = false;
+	},
+	openForwardHistoryPopup: function() {
+		if (this.buttonHeld) {
+			this.closeHistoryPopups();
+		}
+		this.buttonHeld = "forward";
+		this.$.forward.setDepressed(true);
+		this.$.forwardPopup.openAt({left: this.$.forward.getBounds().left, top: 53});
+		this.populateHistoryPopups();
+		this.$.forwardPopup.render();
+	},
+	forwardPopupClosed: function() {
+		this.$.forward.setDepressed(false);
+		this.buttonHeld = false;
+	},
+	selectHistoryItem: function(inSender) {
+		this.closeHistoryPopups();
+		if (inSender.hb == "forward") {
+			this.goForward(inSender.index);
+		} else {
+			this.goBack(inSender.index);
+		}
+	},
 	progressChanged: function() {
 		this.$.progressBar.setPosition(this.progress);
 	},
@@ -107,3 +210,15 @@ enyo.kind({
 		}
 	},
 });
+
+enyo.kind({
+	name: "HistoryItem",
+	kind: "Item",
+	className: "history-row",
+	tapHighlight: true,
+	published: {
+		index: "",
+		title: "",
+		url: ""
+	}
+});
diff --git a/usr/palm/applications/com.palm.app.browser/source/Browser.js b/usr/palm/applications/com.palm.app.browser/source/Browser.js
index 6094e1c..5e6972b 100644
--- a/usr/palm/applications/com.palm.app.browser/source/Browser.js
+++ b/usr/palm/applications/com.palm.app.browser/source/Browser.js
@@ -34,7 +34,8 @@ enyo.kind({
 			onAddToLauncher: "doAddToLauncher",
 			onShareLink: "doShareLink",
 			onOpenBookmarks: "doOpenBookmarks",
-			onNewCard: "openNewCard"
+			onNewCard: "openNewCard",
+			onHistorySelected: "setHistoryUrl"
 		},
 		{name: "view", kind: "WebView", flex: 1, height: "100%",
 			onMousehold: "openContextMenu",
@@ -88,6 +89,8 @@ enyo.kind({
 		]},
         {name: "sslCertDialog", kind: "CertificateDialog", onCertLoad: "enableViewSSLCertificate", onClose: "closeSSLCertificate"}
     ],
+    changedUrl: false,
+    isQuickRedirect: false,
 	WebKitErrors: {
 		ERR_SYS_FILE_DOESNT_EXIST: 14,
 		ERR_WK_FLOADER_CANCELLED: 1000,
@@ -163,6 +166,12 @@ enyo.kind({
 			}
 		}
 	},
+	setHistoryUrl: function() {
+		var newUrl = this.$.actionbar.getHistoryUrl();
+		enyo.log("setHistoryUrl newUrl = " + newUrl);
+		this.url = newUrl;
+		this.urlChanged();
+ 	},
 	urlChanged: function() {
 		this.log(this.url);
 		this.$.view.setUrl(this.url);
@@ -183,7 +192,7 @@ enyo.kind({
 			this.$.actionbar.setUrl(this.url);
 			this.$.actionbar.setTitle(this.title);
 		}
-		this.gotHistoryState(inBack, inForward);
+		this.changedUrl = true;
 		this.doPageTitleChanged(this.title, this.url);
 	},
 	gotHistoryState: function(inBack, inForward) {
@@ -392,13 +401,13 @@ enyo.kind({
 	},
 	goBack: function() {
 		if (this.canGoBack) {
-			this.$.view.callBrowserAdapter("goBack");
+			this.$.actionbar.goBack(0);
 		} else {
 			this.doClose();
 		}
 	},
 	goForward: function() {
-		this.$.view.callBrowserAdapter("goForward");
+		this.$.actionbar.goForward(0);
 	},
 	reloadClick: function() {
 	if(this.isErrorLoadFailed === true) {
@@ -431,6 +440,14 @@ enyo.kind({
 			if (inProgress === 100) {
 				this._timeoutHandle = setTimeout(enyo.hitch(this, "clearProgress"), 1000);
 			}
+			if (this.changedUrl && inProgress > 10) {
+				if (!this.isQuickRedirect && this.url !== this.$.actionbar.getCurrentPage().url) {
+					this.$.actionbar.setCurrentPage({title: this.title, url: this.url});
+				}
+				if (this.isQuickRedirect) this.isQuickRedirect = false;
+				this.changedUrl = false;
+				this.gotHistoryState(this.$.actionbar.getCanGoBack(), this.$.actionbar.getCanGoForward());
+			}
 		}
 	},
 	loadStopped: function() {
@@ -438,6 +455,7 @@ enyo.kind({
 	},
 	loadCompleted: function() {
 		// note: seems to be sent spuriously
+		if (this._lastProgress <= 50) this.isQuickRedirect = true;
 	},
 	clearProgress: function() {
 		this.$.actionbar.setProgress(0);
