diff --git a/usr/palm/applications/com.palm.app.browser/source/Browser.js b/usr/palm/applications/com.palm.app.browser/source/Browser.js
index f2d5a46..d060b54 100644
--- a/usr/palm/applications/com.palm.app.browser/source/Browser.js
+++ b/usr/palm/applications/com.palm.app.browser/source/Browser.js
@@ -84,7 +84,8 @@ enyo.kind({
 				{kind: "Button", flex: 1, caption: $L("Trust Once"), response: "2", onclick: "closeSSLConfirmBox"},
 				{kind: "Button", flex: 1, caption: $L("Don't Trust"), response: "0", onclick: "closeSSLConfirmBox"}
 			]}
-		]}
+		]},
+		{kind:"PalmService", name:"getTweaks", service:"palm://org.webosinternals.tweaks.prefs/", method:"get", onSuccess:"tweaksSuccessCallback", onFailure:"tweaksFailureCallback"},
 	],
 	WebKitErrors: {
 		ERR_SYS_FILE_DOESNT_EXIST: 14,
@@ -103,6 +104,9 @@ enyo.kind({
 		if (window.PalmSystem) {
 			this.$.view.setIdentifier(enyo.windowParams.webviewId);
 		}
+		this.isBackGesture = this.isRightGesture;
+		this.isForwardGesture = this.isLeftGesture;
+		this.$.getTweaks.call({owner: "org.webosinternals.patches.browser-power-swipe", keys: ["invertHorizontalPowerSwipe"]});
 	},
 	resize: function() {
 		this.$.actionbar.resize();
@@ -186,6 +190,7 @@ enyo.kind({
 	},
 	gotHistoryState: function(inBack, inForward) {
 		this.canGoBack = inBack;
+		this.canGoForward = inForward;
 		this.$.actionbar.setCanGoBack(inBack);
 		this.$.actionbar.setCanGoForward(inForward);
 	},
@@ -467,5 +472,72 @@ enyo.kind({
 			this.log(image);
 			this.viewCall("deleteImage", [image]);
 		}
+	},
+	gesturestartHandler: function(inSender, ev) {
+		this.gestureStartX = event.centerX;
+		this.gestureStartY = event.centerY;
+	},
+	gesturechangeHandler: function(inSender, ev) {
+		if (this.canGoBack)
+		{
+			if(this.isBackGesture(ev))
+			{	
+				this.$.actionbar.$.back.setDown(true);
+			}
+			else if (this.$.actionbar.$.back.getDown())
+			{
+ 				this.$.actionbar.$.back.setDown(false);
+			}
+		}
+		
+		if (this.canGoForward)
+		{
+			if(this.isForwardGesture(ev))
+			{
+				this.$.actionbar.$.forward.setDown(true);
+			}
+			else if (this.$.actionbar.$.forward.getDown())
+			{
+				this.$.actionbar.$.forward.setDown(false);
+			}
+		}
+	},
+	gestureendHandler: function(inSender, ev) {
+		if(this.isBackGesture(ev) && this.canGoBack)
+		{	
+			this.$.actionbar.$.back.setDown(false);
+			this.goBack();
+		}
+		else if(this.isForwardGesture(ev) && this.canGoForward)
+		{
+			this.$.actionbar.$.forward.setDown(false);
+			this.goForward();
+		}
+	},
+	isLeftGesture: function (ev) {
+		return (((this.gestureStartX - event.centerX) > 200) &&
+			(Math.abs(event.centerY - this.gestureStartY) < 45));
+	},
+	isRightGesture: function (ev) {
+		return (((this.gestureStartX - event.centerX) < -200) &&
+				(Math.abs(event.centerY - this.gestureStartY) < 45));
+	},
+	tweaksSuccessCallback: function(inSender, inResponse) {
+		if(inResponse) {
+			if (inResponse.invertHorizontalPowerSwipe)
+			{
+				this.isBackGesture = this.isRightGesture;
+				this.isForwardGesture = this.isLeftGesture;
+			}
+			else
+			{
+				this.isBackGesture = this.isLeftGesture;
+				this.isForwardGesture = this.isRightGesture;
+			}
+		}
+	},
+	tweaksFailureCallback: function (inSender, inResponse) {
+	{
 	}
+  },
 })
