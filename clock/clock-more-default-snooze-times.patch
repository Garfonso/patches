diff --git a/usr/palm/applications/com.palm.app.clock/app/controllers/ring-assistant.js b/usr/palm/applications/com.palm.app.clock/app/controllers/ring-assistant.js
index 4f99313..a1ece54 100644
--- a/usr/palm/applications/com.palm.app.clock/app/controllers/ring-assistant.js
+++ b/usr/palm/applications/com.palm.app.clock/app/controllers/ring-assistant.js
@@ -5,6 +5,7 @@ var RingAssistant = Class.create({
 	initialize: function(params){
 		this.appControl = Mojo.Controller.getAppController();
 		this.appAssistant = this.appControl.assistant;
+		this.settings = this.appAssistant.settings;
 		
 		this.alarmOff = this.alarmOff.bindAsEventListener(this);
 		this.snooze = this.snooze.bindAsEventListener(this);
@@ -55,7 +56,7 @@ var RingAssistant = Class.create({
 		} else if (this.shortSnooze) {
 			this.alarm.snooze(true /* short snooze */);
 		} else {
-			this.alarm.snooze();
+			this.alarm.snooze(false /* not short snooze */, this.settings.snoozeDurationGet());
 		}
 	},
 	
diff --git a/usr/palm/applications/com.palm.app.clock/app/controllers/settings-assistant.js b/usr/palm/applications/com.palm.app.clock/app/controllers/settings-assistant.js
index 65c8202..af0a2ea 100644
--- a/usr/palm/applications/com.palm.app.clock/app/controllers/settings-assistant.js
+++ b/usr/palm/applications/com.palm.app.clock/app/controllers/settings-assistant.js
@@ -1,6 +1,26 @@
 /* Copyright 2009 Palm, Inc.  All rights reserved. */
 
 var SettingsAssistant = Class.create({
+    // values for snooze duration listselector
+    snoozeDurationChoices: [
+        {
+            label: $L("5 min."),
+            value: 5
+        },
+        {
+            label: $L("10 min."),
+            value: 10
+        },
+        {
+            label: $L("15 min."),
+            value: 15
+        },
+        {
+            label: $L("20 min."),
+            value: 20
+        },
+    ],
+
 	initialize: function(settings, themes, onThemeChange) {
 		this.appController = Mojo.Controller.getAppController();
 		
@@ -14,7 +34,7 @@ var SettingsAssistant = Class.create({
 		this.initializeSettings();
 		
 		this.onKeyPress = this.onKeyPress.bind(this);
-		
+		this.onSnoozeDurationChange = this.onSnoozeDurationChange.bind(this); // event handler for snooze duration list handler
 		this.easterString = "";
 		
 	},
@@ -22,8 +42,12 @@ var SettingsAssistant = Class.create({
 	// VERY IMPORTANT: UI for ringer switch has OPPOSITE MEANING of variable
 	// it's reversed here for display and must be reversed back when saving
 	initializeSettings: function() {
-		this.settingsModel = { };
-		this.settingsModel.ringerSwitchObeyed = !(this.settings.ringerSwitchObeyedGet());
+        this.settingsModel = {
+            ringerSwitchObeyed: !(this.settings.ringerSwitchObeyedGet()),
+            snoozeDuration: this.settings.snoozeDurationGet() // load setting for snooze duration into scene’s model
+        }
+
+
 	},
 	
 	setup: function() {
@@ -50,6 +74,15 @@ var SettingsAssistant = Class.create({
 		
 		this.controller.get('theme_set').observe(Mojo.Event.tap, this.onThemeSelect);
 		
+        this.controller.setupWidget('snoozeduration', { // setup snooze duration's listselector widget
+            label: $L('length'),
+            choices: this.snoozeDurationChoices,
+            modelProperty: 'snoozeDuration',
+            labelPlacement: Mojo.Widget.labelPlacementLeft
+        }, this.settingsModel);
+
+        this.controller.listen('snoozeduration', Mojo.Event.propertyChange, this.onSnoozeDurationChange);
+
 		this.controller.listen(this.controller.sceneElement, Mojo.Event.keypress, this.onKeyPress);
 
 	},
@@ -74,6 +107,10 @@ var SettingsAssistant = Class.create({
 		this.settings.ringerSwitchObeyedSet(!(this.settingsModel.ringerSwitchObeyed));
 	},
 	
+    onSnoozeDurationChange: function() { // respond to events on list selector widget
+        this.settings.snoozeDurationSet(this.settingsModel.snoozeDuration);
+    },
+
 	themeUpdate: function() {
 		var theme = this.themes.getCurrentTheme();
 		this.controller.get('theme_name').textContent = this.themes.getNicename(theme.name);
diff --git a/usr/palm/applications/com.palm.app.clock/app/models/alarm.js b/usr/palm/applications/com.palm.app.clock/app/models/alarm.js
index c8e1353..f43591f 100644
--- a/usr/palm/applications/com.palm.app.clock/app/models/alarm.js
+++ b/usr/palm/applications/com.palm.app.clock/app/models/alarm.js
@@ -341,12 +341,18 @@ var Alarm = Class.create({
 	},
 	
 	// snooze this alarm.  pass true to indicate that it was snoozed by another popup opening
-	snooze: function(alarmInterrupted) {
+	snooze: function(alarmInterrupted, duration) {
 		var newParams = Alarm.kAlarmLaunchParams.evalJSON();
 		newParams.params.id = this.id;
 		if (alarmInterrupted) {
 			newParams.params.alarmInterrupted = true;
 		}
+
+        if (duration) {
+            duration = "00:" + duration + ":00"
+        } else {
+            duration = Alarm.kAlarmSnoozeDuration;
+        }
 		var newParamsJSON = Object.toJSON(newParams);
 		this.schedulerSetRequest = new Mojo.Service.Request(Alarm.kAlarmSchedulerUri, {
 			method: "set",
@@ -355,7 +361,7 @@ var Alarm = Class.create({
 				"key": Alarm.kAlarmSchedulerKeySnooze+this.id,
 				"uri": Alarm.kAlarmLaunchUri,
 				"params": newParamsJSON,
-				"in": (alarmInterrupted ? Alarm.kAlarmSnoozeInterruptedDuration : Alarm.kAlarmSnoozeDuration)
+				"in": (alarmInterrupted ? Alarm.kAlarmSnoozeInterruptedDuration : duration)
 			},
 			onSuccess: function(payload) {
 				// Mojo.Log.info("Alarm: snooze succeeded");
diff --git a/usr/palm/applications/com.palm.app.clock/app/models/settings.js b/usr/palm/applications/com.palm.app.clock/app/models/settings.js
index a311fdf..0d62185 100644
--- a/usr/palm/applications/com.palm.app.clock/app/models/settings.js
+++ b/usr/palm/applications/com.palm.app.clock/app/models/settings.js
@@ -36,7 +36,8 @@ var Settings = Class.create({
 			timePickerInterval: 5,
 			dashboardHide: false,
 			ringerSwitchObeyed: false,
-			initialized: true
+			initialized: true,
+			snoozeDuration: 5
 		};
 		
 		this.save();
@@ -72,7 +73,16 @@ var Settings = Class.create({
 	
 	ringerSwitchObeyedGet: function() {
 		return this.values.ringerSwitchObeyed;
-	}
+	},
+	
+    snoozeDurationGet: function() {
+        return this.values.snoozeDuration || 5
+    },
+
+    snoozeDurationSet: function(value) {
+        this.values.snoozeDuration = value;
+        this.save();
+    },
 	
 });
 
diff --git a/usr/palm/applications/com.palm.app.clock/app/views/settings/settings-scene.html b/usr/palm/applications/com.palm.app.clock/app/views/settings/settings-scene.html
index 9daf393..32d1281 100644
--- a/usr/palm/applications/com.palm.app.clock/app/views/settings/settings-scene.html
+++ b/usr/palm/applications/com.palm.app.clock/app/views/settings/settings-scene.html
@@ -34,4 +34,14 @@
 		</div>
 	</div> 
 	   
+    <div class="palm-group">
+        <div class="palm-group-title">
+            <span x-mojo-loc=''>snooze</span>
+        </div>
+        <div class="palm-list">
+             <div class="palm-row single">
+                <div id="snoozeduration" x-mojo-element="ListSelector"></div>
+            </div>
+        </div>
+    </div>
 </div>
