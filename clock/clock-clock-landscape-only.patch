diff --git a/usr/palm/applications/com.palm.app.clock/app/controllers/clock-assistant.js b/usr/palm/applications/com.palm.app.clock/app/controllers/clock-assistant.js
index 5ae1f47..2835391 100644
--- a/usr/palm/applications/com.palm.app.clock/app/controllers/clock-assistant.js
+++ b/usr/palm/applications/com.palm.app.clock/app/controllers/clock-assistant.js
@@ -57,7 +57,7 @@ var ClockAssistant = Class.create({
 								
 		this.controller.setupWidget(Mojo.Menu.commandMenu, undefined, this.cmdMenuModel);
 		
-		this.controller.listen('clock-container', Mojo.Event.tap, this.showHide.bindAsEventListener(this));
+		this.controller.listen('clock-container', Mojo.Event.hold, this.showScene.bindAsEventListener(this));
 
 		this.changeTheme(this.currentTheme.name);
 		
@@ -101,7 +101,7 @@ var ClockAssistant = Class.create({
 		//show the command menu after 1/2 a second to prevent the change from card view to scene view from slowing down
 		this.controller.window.clearTimeout(this.stageActivationTimeout);
 		this.stageActivationTimeout = this.controller.window.setTimeout(function(){
-			if(this.stageActive)this.controller.setMenuVisible(Mojo.Menu.commandMenu,true);
+			if(this.stageActive)this.controller.setMenuVisible(Mojo.Menu.commandMenu,flase);
 		}.bind(this), 500);
 	},
 	
@@ -209,8 +209,13 @@ var ClockAssistant = Class.create({
 		// 	this.showHide();
 		// }
 		if (this.controller.stageController.setWindowOrientation) {
-			this.controller.stageController.setWindowOrientation('free');
-			this.stageActive = true;
+			this.controller.stageController.setWindowOrientation('Left');
+			{
+ 			    this.upright = false;
+				this.handleOrientationSideways();
+				this.controller.setMenuVisible(Mojo.Menu.commandMenu,false);
+			}
+
 			//console.log('clock set to free');
 			//console.log(this.controller.stageController.getWindowOrientation());
 		}
@@ -296,29 +301,7 @@ var ClockAssistant = Class.create({
 			}
 		}			
 	},
-	
-	// called when device's orientation moves to a new 90-degree position
-	// passes off to handlers for portrait or landscape orientation
-	orientationChanged: function(orientation) {  	// only virtually possible.
-		Mojo.Log.info("now swinging: " + orientation);
-		this.orientation = orientation;
-		
-		if (orientation == "up" || orientation == "down") {
-			if (!this.upright) {
-				this.upright = true;
-				this.handleOrientationUpright();
-				//this.controller.toggleMenuVisible(Mojo.Menu.commandMenu);
-				if(this.stageActive)this.controller.setMenuVisible(Mojo.Menu.commandMenu,true);
-			}
-		} else if (orientation == "left" || orientation == "right") {
-			if (this.upright) {
-				this.upright = false;
-				this.handleOrientationSideways();
-				this.controller.setMenuVisible(Mojo.Menu.commandMenu,false);
-			}
-		}
-	},
-	
+
 	// called when orientation is changed to portrait.
 	handleOrientationUpright: function() {
 		Mojo.Log.info("handleOrientationUpright");
