diff --git a/usr/palm/applications/com.palm.app.network/app/assistants/app-assistant.js b/usr/palm/applications/com.palm.app.network/app/assistants/app-assistant.js
index bc1945c..345f54a 100644
--- a/usr/palm/applications/com.palm.app.network/app/assistants/app-assistant.js
+++ b/usr/palm/applications/com.palm.app.network/app/assistants/app-assistant.js
@@ -199,12 +199,14 @@ AppAssistant.prototype.showCaptivePortalDashboard = function(params) {
 	    var stageController = appController.getStageController("captiveportal-dashboard");
 	    if (undefined===stageController) {
 	          Mojo.Log.info("Bringing up the dashboard");
+	          /* Eric Tsang Tue Feb 7th 2012; based on the original work of "thfcme"
+	          This comments out the constant notifications forced upon us when a Captive Portal is detected
 	          var dashboardBannerText = $L("Captive Portal Detected");
 	          appController.showBanner(
 	          {
-	              messageText: dashboardBannerText,
-	              icon: 'images/net_portal_sum_24.png',
-	          }, {dashboardLaunch:true},
+	          messageText: dashboardBannerText,
+	             icon: 'images/net_portal_sum_24.png',
+	          , {dashboardLaunch:true},
 	          "captivePortalDashboardNotification");
 	          
 	          // Push new banner
@@ -212,6 +214,7 @@ AppAssistant.prototype.showCaptivePortalDashboard = function(params) {
 	          appController.createStageWithCallback({name: "captiveportal-dashboard", lightweight: true}, 
 	                  this.notificationCreatedHandler, "dashboard");
 	          appController.playSoundNotification("notification");
+	          */
 	    } else {
 	        Mojo.Log.info("Updating the dashboard");
 	         stageController.delegateToSceneAssistant("updateDashboard", paramsToSendDashboard, new Date());
