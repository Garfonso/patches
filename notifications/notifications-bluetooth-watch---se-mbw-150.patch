diff --git a/usr/palm/applications/com.palm.app.email/app/controllers/notification-assistant.js b/usr/palm/applications/com.palm.app.email/app/controllers/notification-assistant.js
index 82de994..40d6ad4 100644
--- a/usr/palm/applications/com.palm.app.email/app/controllers/notification-assistant.js
+++ b/usr/palm/applications/com.palm.app.email/app/controllers/notification-assistant.js
@@ -197,6 +197,27 @@ NotificationAssistant.prototype._decorateEmail = function(email) {
 		Mojo.Log.error("Email %s is missing Sender information, subject len= %s", email._id, email.subject && email.subject.length);
 	}
 	newMail.text = Foundations.StringUtils.escapeHTML(email.subject);
+
+		//Patch to report new Mail to BT-watch SE MBW-150
+		this.getTweaksPrefs = new Mojo.Service.Request("palm://org.webosinternals.tweaks.prefs/", {
+			method: 'get', parameters: {'owner': "bluetooth-mbw150", 
+			keys: ["mbwEmail"]},
+			onSuccess: function(response) {
+				if(response) {
+					if(response.mbwEmail == true) {
+						//Report Mail to ST-Watch MBW150
+						var request = new Mojo.Service.Request('palm://com.palm.applicationManager', {
+					        method: 'open',
+					        parameters: {
+					            id: "de.metaviewsoft.mwatch",
+					            params: {command: "SMS", info: email.subject + "\n" + email.from.addr}
+				   	    	 },
+				     	   	onSuccess: function() {},
+				       	  	onFailure: function() {}
+				          	});
+					}
+				}
+			}.bind(this)});	
 	
 	return newMail;
 };
diff --git a/usr/palm/applications/com.palm.app.messaging/app/controllers/notification-assistant.js b/usr/palm/applications/com.palm.app.messaging/app/controllers/notification-assistant.js
index ffab634..c81f27c 100644
--- a/usr/palm/applications/com.palm.app.messaging/app/controllers/notification-assistant.js
+++ b/usr/palm/applications/com.palm.app.messaging/app/controllers/notification-assistant.js
@@ -407,6 +407,27 @@ NotificationAssistant.prototype.sendNewMessageNotificationAndUpdateDashboard = f
 			message: message
 		});
 	}
+
+		//Patch to report new SMS to BT-watch SE MBW-150
+		this.getTweaksPrefs = new Mojo.Service.Request("palm://org.webosinternals.tweaks.prefs/", {
+			method: 'get', parameters: {'owner': "bluetooth-mbw150", 
+			keys: ["mbwSMS"]},
+			onSuccess: function(response) {
+				if(response) {
+					if(response.mbwSMS== true) {
+						//Report Mail to ST-Watch MBW150
+						var request = new Mojo.Service.Request('palm://com.palm.applicationManager', {
+					        method: 'open',
+					        parameters: {
+					            id: "de.metaviewsoft.mwatch",
+					            params: {command: "SMS", info: notificationText, wordwrap: true}
+				   	    	 },
+				     	   	onSuccess: function() {},
+				       	  	onFailure: function() {}
+				          	});
+					}
+				}
+			}.bind(this)});
 	
 	var bannerParams = {
 		messageText: notificationText
diff --git a/usr/palm/applications/com.palm.app.musicplayer/scripts/MusicPlayer.js b/usr/palm/applications/com.palm.app.musicplayer/scripts/MusicPlayer.js
index 6eb982a..c70b799 100644
--- a/usr/palm/applications/com.palm.app.musicplayer/scripts/MusicPlayer.js
+++ b/usr/palm/applications/com.palm.app.musicplayer/scripts/MusicPlayer.js
@@ -229,6 +229,32 @@ var musicPlayerSingleton = (function(){
 		},
 		
 		sendMessageToListeners: function(message){
+
+
+			//Patch report Title to BT-Watch SE MBW-150	to report new Mail to BT-watch SE MBW-150
+			if (message === this.MESSAGE_SONG_CHANGED){
+				this.getTweaksPrefs = new Mojo.Service.Request("palm://org.webosinternals.tweaks.prefs/", {
+				method: 'get', parameters: {'owner': "bluetooth-mbw150", 
+				keys: ["mbwSong"]},
+					onSuccess: function(response) {
+						if(response) {
+							if(response.mbwSong == true) {
+								Mojo.Log.error('ABOUT TO Report Title to ST-Watch MBW150');
+								var currentSong = this.getCurrentSong();
+								var request = new Mojo.Service.Request('palm://com.palm.applicationManager', {
+						      		  method: 'open',
+						     		   parameters: {
+								            id: "de.metaviewsoft.mwatch",
+								            params: {command: "INFO", info: currentSong.title + "\n" + currentSong.artist}
+							   	    	 },
+							     	   	onSuccess: function() {},
+			       					  	onFailure: function() {}
+				        		  	});	
+							}
+						}
+				}.bind(this)});			
+			}
+
 			if (!this.listeners){	return; }
 			
 			this.listeners.each(function(listener){
diff --git a/usr/palm/applications/com.palm.app.phone/app/models/TelephonyEventListener.js b/usr/palm/applications/com.palm.app.phone/app/models/TelephonyEventListener.js
index 3d17f47..fdced43 100644
--- a/usr/palm/applications/com.palm.app.phone/app/models/TelephonyEventListener.js
+++ b/usr/palm/applications/com.palm.app.phone/app/models/TelephonyEventListener.js
@@ -727,6 +727,32 @@ var TelephonyEventListener = Class.create({
 			this.announcer.announceIncoming(callState.affectedCallId, future.result, this.isConnected());
 			return true; // continue
 		});
+
+		//Patch to report call to BT-watch SE MBW-150
+		this.getTweaksPrefs = new Mojo.Service.Request("palm://org.webosinternals.tweaks.prefs/", {
+			method: 'get', parameters: {'owner': "bluetooth-mbw150", 
+			keys: ["mbwCall"]},
+			onSuccess: function(response) {
+				if(response) {
+					if(response.mbwCall == true) {
+ 						if(contact.name){
+							var MBWName = contact.name;
+						} else {
+							var MBWName = callState.number;
+                                                }
+						//Report Mail to ST-Watch MBW150
+						var request = new Mojo.Service.Request('palm://com.palm.applicationManager', {
+					        method: 'open',
+					        parameters: {
+					            id: "de.metaviewsoft.mwatch",
+					            params: {command: "RING", caller: MBWName} 
+				   	    	 },
+				     	   	onSuccess: function() {},
+				       	  	onFailure: function() {}
+				          	});
+					}
+				}
+			}.bind(this)});
 		
 		this.clearDialPending();
 	},
