diff --git a/usr/palm/applications/com.palm.app.calendar/app/controllers/day-assistant.js b/usr/palm/applications/com.palm.app.calendar/app/controllers/day-assistant.js
index c7127f8..c57a515 100644
--- a/usr/palm/applications/com.palm.app.calendar/app/controllers/day-assistant.js
+++ b/usr/palm/applications/com.palm.app.calendar/app/controllers/day-assistant.js
@@ -1934,15 +1934,16 @@ var DayAssistant = Class.create({
 		this.menuModel = {
 			visible:true,
 			items: [
-					{},
+					{label: $L('Event'), icon: 'new-timed', command: 'newtimed'},
 						{label:$L('Views'), 
 						toggleCmd:'day', 
 						items:[
+							{label:$L('Agenda'), icon: 'menu-agenda', command:'agenda'},
 							{label:$L('Day'), icon: 'menu-day', command:'day'}, 
 							{label:$L('Week'), icon: 'menu-week', command:'week'}, 
 							{label:$L('Month'), icon: 'menu-month', command:'month'}
 					 ]},
-					{}
+					{label: $L('All day event'), icon: 'new-allday', command: 'newallday'},
 					]};
 			
 		this.controller.setupWidget(Mojo.Menu.commandMenu, undefined, this.menuModel);
@@ -2153,6 +2154,17 @@ var DayAssistant = Class.create({
 				Mojo.Event.stop (event);
 				this.maybeCommitScratchEvent(true);
 				this.syncAllCalendars();
+			} else if (event.command == 'agenda') {
+				Event.stop(event);
+				this.maybeCommitScratchEvent(true);
+				this.controller.serviceRequest('palm://com.palm.applicationManager', {
+					method: 'launch',
+					parameters: {
+						id: 'com.palm.app.agenda'
+					}
+				});
+				this.menuModel.items[1].toggleCmd = 'day';
+				this.controller.modelChanged(this.menuModel, this);				
 			}				
 		} else if(event.type == Mojo.Event.commandEnable && event.command == Mojo.Menu.prefsCmd) {
 			// Enable prefs menuitem for this scene.
diff --git a/usr/palm/applications/com.palm.app.calendar/app/controllers/edit-assistant.js b/usr/palm/applications/com.palm.app.calendar/app/controllers/edit-assistant.js
index 7b4c244..537278e 100644
--- a/usr/palm/applications/com.palm.app.calendar/app/controllers/edit-assistant.js
+++ b/usr/palm/applications/com.palm.app.calendar/app/controllers/edit-assistant.js
@@ -583,18 +583,68 @@ var EditAssistant = Class.create({
 						'-PT5M', // Do Not Localize
 						'-PT10M', //Do not localize
 						'-PT15M', // Do NOT Localize
+						 '-PT20M', // Do NOT Localize
+						 '-PT25M', // Do NOT Localize
 						'-PT30M', // Do NOT Localize
+						 '-PT35M', // Do NOT Localize
+						 '-PT45M', // Do NOT Localize						
 						'-PT1H', // Do NOT Localize
-						'-P1D' // Do NOT Localize
+						'-PT90M', // Do NOT Localize
+						 '-PT2H', // Do NOT Localize
+						 '-PT150M', // Do NOT Localize
+						 '-PT3H', // Do NOT Localize
+						 '-PT220M', // Do NOT Localize
+						 '-PT4H', // Do NOT Localize
+						 '-PT5H', // Do NOT Localize
+						 '-PT6H', // Do NOT Localize
+						 '-PT7H', // Do NOT Localize
+						 '-PT8H', // Do NOT Localize
+						 '-PT10H', // Do NOT Localize
+						 '-PT12H', // Do NOT Localize	
+						 '-PT23H', // Do NOT Localize
+						 '-P1D', // Do NOT Localize
+						'-P36H', // Do NOT Localize
+	 					'-P2D', // Do NOT Localize
+						'-P60H', // Do NOT Localize	
+	 					'-P3D', // Do NOT Localize
+						'-P84H', // Do NOT Localize
+						'-P4D', // Do NOT Localize
+						'-P5D', // Do NOT Localize
+						'-P6D', // Do NOT Localize			
+	 					'-P1W', // Do NOT Localize
+						'-P2W', // Do NOT Localize
+						'-P3W', // Do NOT Localize
+						'-P4W', // Do NOT Localize
+						'-P8W', // Do NOT Localize
+						'-P12W', // Do NOT Localize
+						'-P16W', // Do NOT Localize
+						'-P20W', // Do NOT Localize
+						'-P24W', // Do NOT Localize
+						'-P52W' // Do NOT Localize
 				]
             },
             alarmsAllday: {
                 list: [ 'none', // Do NOT Localize
 						'-PT0M',// DO NOT Localize
-						'-P1D', // Do NOT Localize
-						'-P2D', // Do NOT Localize
-						'-P3D', // Do NOT Localize
-						'-P1W'  // Do NOT Localize
+ 	 					'-P1D', // Do NOT Localize
+						'-P36H', // Do NOT Localize
+ 	 					'-P2D', // Do NOT Localize
+						'-P60H', // Do NOT Localize	
+ 	 					'-P3D', // Do NOT Localize
+						'-P84H', // Do NOT Localize
+						'-P4D', // Do NOT Localize
+						'-P5D', // Do NOT Localize
+						'-P6D', // Do NOT Localize			
+ 	 					'-P1W', // Do NOT Localize
+						'-P2W', // Do NOT Localize
+						'-P3W', // Do NOT Localize
+						'-P4W', // Do NOT Localize
+						'-P8W', // Do NOT Localize
+						'-P12W', // Do NOT Localize
+						'-P16W', // Do NOT Localize
+						'-P20W', // Do NOT Localize
+						'-P24W', // Do NOT Localize
+						'-P52W' // Do NOT Localize
 				]
             }
         };
diff --git a/usr/palm/applications/com.palm.app.calendar/app/controllers/month-assistant.js b/usr/palm/applications/com.palm.app.calendar/app/controllers/month-assistant.js
index f20a9ad..b20ca1f 100644
--- a/usr/palm/applications/com.palm.app.calendar/app/controllers/month-assistant.js
+++ b/usr/palm/applications/com.palm.app.calendar/app/controllers/month-assistant.js
@@ -758,11 +758,17 @@ var MonthAssistant = Class.create({
 		this.menuModel = 
 		{	visible	:	true
 		,	items	:
-			[	{}
+			[	{label: $L('Event'), icon: 'new-timed', command: 'newtimed'}
 			,	{	label		: $L('Views')
 				,	toggleCmd	: 'month'
 				,	items		:
-					[	{	command	: 'day'
+					[
+				{
+					label:$L('Agenda'),
+					icon: 'menu-agenda',
+					command:'agenda'
+				},						
+						{	command	: 'day'
 						,	icon	: 'menu-day'
 						,	label	: $L('Day')
 						}
@@ -776,7 +782,7 @@ var MonthAssistant = Class.create({
 						}
 					]
 				}
-			,	{}
+			,	{label: $L('All day event'), icon: 'new-allday', command: 'newallday'}
 			]
 		};
 
@@ -911,6 +917,12 @@ var MonthAssistant = Class.create({
 			} else if (event.command == Mojo.Menu.prefsCmd) {
 				Mojo.Event.stop (event);
 				this.controller.stageController.pushScene('prefs');
+			} else if(event.command =="newtimed"){
+				Event.stop(event);
+				this.controller.stageController.pushScene('edit', 0, 0, false, this.getCalId/*calendarId*/,0/*subject*/);
+			} else if(event.command=="newallday"){
+				Event.stop(event);
+				this.controller.stageController.pushScene('edit', 0, 0, true, this.getCalId,0/*subject*/);				
 			}else if(event.command == Mojo.Menu.helpCmd){
 				this.app.getAppManagerService().launchHelp (this.controller);
 			} else if (event.command == 'sync') {
@@ -925,6 +937,16 @@ var MonthAssistant = Class.create({
 			} else if (event.command == 'reminders') {
 				Mojo.Event.stop (event);
 				this.controller.stageController.pushScene('reminder-list');
+			} else if (event.command == 'agenda') {
+				Event.stop(event);
+				this.controller.serviceRequest('palm://com.palm.applicationManager', {
+					method: 'launch',
+					parameters: {
+						id: 'com.palm.app.agenda'
+					}
+				});
+				this.menuModel.items[1].toggleCmd = 'month';
+				this.controller.modelChanged(this.menuModel, this);				
 			}				
 		}
 		else if(event.type == Mojo.Event.commandEnable && event.command == Mojo.Menu.prefsCmd) {
diff --git a/usr/palm/applications/com.palm.app.calendar/app/controllers/week-assistant.js b/usr/palm/applications/com.palm.app.calendar/app/controllers/week-assistant.js
index 4fa6e78..f794ccb 100644
--- a/usr/palm/applications/com.palm.app.calendar/app/controllers/week-assistant.js
+++ b/usr/palm/applications/com.palm.app.calendar/app/controllers/week-assistant.js
@@ -797,16 +797,17 @@ var WeekAssistant = Class.create({
 		this.menuModel =
 		{	visible	:	true
 		,	items	:
-			[	{}
+			[	{label: $L('Event'), icon: 'new-timed', command: 'newtimed'}
 			,	{	label		: $L('Views')
 				,	toggleCmd	: 'week'
 				,	items		:
-					[	{	label: $L('Day')	, icon: 'menu-day'	, command: 'day'	}
+					[	{label:$L('Agenda'), icon: 'menu-agenda', command:'agenda'},
+						{	label: $L('Day')	, icon: 'menu-day'	, command: 'day'	}
 					,	{	label: $L('Week')	, icon: 'menu-week'	, command: 'week'	}
 					,	{	label: $L('Month')	, icon: 'menu-month', command: 'month'	}
 					]
 				}
-			,	{}
+			,	{label: $L('All day event'), icon: 'new-allday', command: 'newallday'},
 			]
 		};
 
@@ -840,6 +841,12 @@ var WeekAssistant = Class.create({
 			} else if (event.command == Mojo.Menu.prefsCmd) {
 				Mojo.Event.stop (event);
 				this.controller.stageController.pushScene('prefs');
+			} else if(event.command =="newtimed"){
+				Event.stop(event);
+				this.controller.stageController.pushScene('edit', 0, 0, false, this.getCalId/*calendarId*/,0/*subject*/);
+			} else if(event.command=="newallday"){
+				Event.stop(event);
+				this.controller.stageController.pushScene('edit', 0, 0, true, this.getCalId,0/*subject*/);				
 			} else if(event.command == Mojo.Menu.helpCmd){
 				this.app.getAppManagerService().launchHelp (this.controller);
 			} else if (event.command == 'sync') {
@@ -855,6 +862,16 @@ var WeekAssistant = Class.create({
 			} else if (event.command == 'reminders') {
 				Mojo.Event.stop (event);
 				this.controller.stageController.pushScene('reminder-list');
+			} else if (event.command == 'agenda') {
+				Event.stop(event);
+				this.controller.serviceRequest('palm://com.palm.applicationManager', {
+					method: 'launch',
+					parameters: {
+						id: 'com.palm.app.agenda'
+					}
+				});
+				this.menuModel.items[1].toggleCmd = 'week';
+				this.controller.modelChanged(this.menuModel, this);				
 			}				
 		}
 		else if(event.type == Mojo.Event.commandEnable && event.command == Mojo.Menu.prefsCmd) {
diff --git a/usr/palm/applications/com.palm.app.calendar/stylesheets/calendar.css b/usr/palm/applications/com.palm.app.calendar/stylesheets/calendar.css
index ad129f8..120084a 100644
--- a/usr/palm/applications/com.palm.app.calendar/stylesheets/calendar.css
+++ b/usr/palm/applications/com.palm.app.calendar/stylesheets/calendar.css
@@ -57,6 +57,18 @@ body {
 		background-image: url(../images/menu-icon-day.png);
 }
 
+.palm-menu-icon.menu-agenda {
+		background-image: url(/media/internal/scrims/ubercalendar/menu-icon-agenda.png);
+}
+
+.palm-menu-icon.new-timed{
+		background-image: url(../images/menu-icon-newevent.png);
+}
+
+.palm-menu-icon.new-allday {
+		background-image: url(../images/menu-icon-today.png);
+}
+
 .palm-menu-icon.edit {
 		background-image: url(../images/menu-icon-compose.png);
 }
