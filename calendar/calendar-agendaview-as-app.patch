diff --git a/usr/palm/applications/com.palm.app.agendaview/app/assistants/Agenda-assistant.js b/usr/palm/applications/com.palm.app.agendaview/app/assistants/Agenda-assistant.js
index f2dd6bc..591c7fe 100644
--- a/usr/palm/applications/com.palm.app.agendaview/app/assistants/Agenda-assistant.js
+++ b/usr/palm/applications/com.palm.app.agendaview/app/assistants/Agenda-assistant.js
@@ -10,7 +10,13 @@ AgendaAssistant.FOOTER_HEIGHT = 28;
 AgendaAssistant.prototype.setup = function() {
 	trace("setup");
 	
-	this.controller.enableFullScreenMode(true);
+	if (agendaModel.launchMode == AgendaModel.LaunchModes.DOCK) {
+		this.controller.enableFullScreenMode(true);
+	} else {
+		this.controller.get("header-portrait").setStyle("padding-top:25px;height:85px;");
+		this.controller.get("main").setStyle("margin-top:85px;");
+		this.controller.get("shadow").setStyle("top:84px;");
+	}
 	
 	this.landscapeMode = false;
 	
@@ -35,14 +41,13 @@ AgendaAssistant.prototype.setup = function() {
 	         });
 	
 	// Prefs scene removed, for now
-	/*
 	this.menuModel = {
 		visible: true,
 		items: [ Mojo.Menu.editItem, { label: $L("Preferences"), command: "prefs" }, Mojo.Menu.helpItem ]
 	};
 	this.controller.setupWidget(Mojo.Menu.appMenu, { omitDefaultItems: true }, this.menuModel);
-	*/
-	
+
+	Mojo.Event.listen(this.controller.get("calendarList"), Mojo.Event.listTap, this.handleListTap.bind(this));	
 	//this.controller.listen(document, 'orientationchange', this.handleOrientation.bindAsEventListener(this));
 	
 	/* This will refresh our view (a) after getEvents completes for the first time and
@@ -52,7 +57,26 @@ AgendaAssistant.prototype.setup = function() {
 	agendaModel.getEvents();
 	
 	// we also want to manuallly refresh our list intermittently
-	setInterval(this.refreshList.bind(this), 10000);
+	if (agendaModel.query == "") {
+		setInterval(this.refreshList.bind(this), 10000);
+	}
+};
+
+AgendaAssistant.prototype.handleLink = function(event) {
+	Mojo.Log.error("handleLink");
+};
+
+AgendaAssistant.prototype.handleListTap = function(event) {
+	Mojo.Log.error("handleListTap", event.originalEvent.target.id);
+	if (event.originalEvent.target.id > 0) {
+		new Mojo.Service.Request('palm://com.palm.applicationManager', {
+			method: 'launch',
+			parameters: {
+				id: 'com.palm.app.calendar',
+				params: '' + event.originalEvent.target.id
+			}
+		});
+	}
 };
 
 AgendaAssistant.prototype.databaseChanged = function(params) {
@@ -64,22 +88,44 @@ AgendaAssistant.prototype.databaseChanged = function(params) {
 AgendaAssistant.prototype.refreshList = function(listWidget, offset, limit) {
 	// wait for getEvents to finish 
 	trace('refreshing list');
-	agendaModel.getCalData(this.itemsCallback.bind(this));
+	if (agendaModel.query != "") {
+		agendaModel.findCalData(this.itemsCallback.bind(this), agendaModel.query);
+	} else {
+		agendaModel.getCalData(this.itemsCallback.bind(this));
+	}
 	this.render();
 }
 
 AgendaAssistant.prototype.itemsCallback = function(calData) {
 	var newModel = [];
 	var allDayList = "";
+	var dtAllDay = 0;
+	var dtEventDay = 0;
+	
 	for (var i=0; i<calData.length; i++)
 	{
+		Mojo.Log.error(new Date(calData[i].dtstart), calData[i].subject);
+		var date = new Date(calData[i].dtstart).clearTime();
 		// all day items go into a ul in their own list item at the top
-		if (calData[i].allDay)
+		if (calData[i].allDay && (agendaModel.query == ""))
 		{
+			if (date.getTime() > dtAllDay) {
+				allDayList += "<li style='color: silver;'>" + Mojo.Format.formatDate(date, {date: "full"}) + "</li>";
+				dtAllDay = date.getTime();
+			}
 			allDayList += "<li>" + calData[i].subject + "</li>";
 		}
 		else
 		{
+			if (date.getTime() > dtEventDay) {
+				newModel.push({ content: "<div name='Header' id='" + date.getTime() + "'>" + Mojo.Format.formatDate(date, {date: "full"}) + "</div>" });
+				dtEventDay = date.getTime();
+			}
+			// no start time and duration for all day events
+			if (calData[i].allDay) {
+				calData[i].starttime = "";
+				calData[i].duration = "";
+			}
 			var content = Mojo.View.render({ object: calData[i], template: "List/list-item-short"});
 			newModel.push({ content: content });
 		}
@@ -98,7 +144,7 @@ AgendaAssistant.prototype.itemsCallback = function(calData) {
 	// update the list
 	this.listModel.items = newModel;
 	this.controller.get("calendarList").mojo.noticeUpdatedItems(0, this.listModel.items);
-	
+
 	// alt method, for ref just in case
 	// this.controller.modelChanged(this.listModel, this);
 	// this.controller.get("calendarList").mojo.setLength(calData.length);
@@ -114,7 +160,11 @@ AgendaAssistant.prototype.renderHeaders = function()
 {
 	var headerData = {};
 	var today = new Date();
-	headerData.day = Mojo.Format.formatDate(today,"EEEE");
+	if (agendaModel.query != "") {
+		headerData.day = agendaModel.query;
+	} else {
+		headerData.day = Mojo.Format.formatDate(today,"EEEE");
+	}
 	headerData.month = Mojo.Format.formatDate(today,"MMMM");
 	//headerData.day = Util.formatDay(today);
 	//headerData.month = Util.formatMonth(today);
@@ -185,7 +235,11 @@ AgendaAssistant.prototype.setPortraitView = function(event)
 	this.controller.get("calendarContainer").style.display = "none";
 	this.controller.get("header-portrait").style.display = "block";
 	this.controller.get("shadow").style.display = "block";
-	this.controller.get("main").addClassName("palm-hasheader");
+	if (agendaModel.launchMode == AgendaModel.LaunchModes.DOCK) {
+		this.controller.get("main").addClassName("palm-hasheader");
+	} else {
+		this.controller.get("main").setStyle("margin-top:85px;");
+	}
 	this.controller.get("listScroller").removeClassName("scroller-landscape");
 	this.controller.get("listScroller").addClassName("scroller-portrait");
 	//document.body.style["background-size"] = "320px 480px";
@@ -194,7 +248,11 @@ AgendaAssistant.prototype.setPortraitView = function(event)
 AgendaAssistant.prototype.setLandscapeView = function(event)
 {
 	trace('setting landscape view');
-	this.controller.get("main").removeClassName("palm-hasheader");
+	if (agendaModel.launchMode == AgendaModel.LaunchModes.DOCK) {
+		this.controller.get("main").removeClassName("palm-hasheader");
+	} else {
+		this.controller.get("main").setStyle("margin-top:0px;");
+	}
 	this.controller.get("calendarContainer").style.display = "block";
 	this.controller.get("header-portrait").style.display = "none";
 	this.controller.get("shadow").style.display = "none";
@@ -209,6 +267,69 @@ AgendaAssistant.prototype.updateBG = function()
 	agendaModel.getBackgroundImage(this.setBackgroundImage.bind(this), this.landscapeMode);
 }
 
+AgendaAssistant.prototype.isEmpty = function(val) {
+	if (val) {
+		return ((val===null) || val.length==0 || /^\s+$/.test(val));
+	} else {
+		return true;
+	}
+};
+
+// Function to loop through an array swaping each item with the value from another array e.g swap HTML entities with Numericals
+AgendaAssistant.prototype.swapArrayVals = function(s, arr1, arr2) {
+	if (this.isEmpty(s)) return "";
+	var re;
+	if (arr1 && arr2) {
+		//ShowDebug("in swapArrayVals arr1.length = " + arr1.length + " arr2.length = " + arr2.length)
+		// array lengths must match
+		if (arr1.length == arr2.length) {
+			for (var x=0,i=arr1.length; x<i; x++){
+				re = new RegExp(arr1[x], 'g');
+				s = s.replace(re, arr2[x]); //swap arr1 item with matching item from arr2	
+			}
+		}
+	}
+	return s;
+};
+
+// Convert HTML entities into numerical entities
+AgendaAssistant.prototype.HTML2Numerical = function(s) {
+	var arr1 = new Array('&nbsp;','&iexcl;','&cent;','&pound;','&curren;','&yen;','&brvbar;','&sect;','&uml;','&copy;','&ordf;','&laquo;','&not;','&shy;','&reg;','&macr;','&deg;','&plusmn;','&sup2;','&sup3;','&acute;','&micro;','&para;','&middot;','&cedil;','&sup1;','&ordm;','&raquo;','&frac14;','&frac12;','&frac34;','&iquest;','&agrave;','&aacute;','&acirc;','&atilde;','&Auml;','&aring;','&aelig;','&ccedil;','&egrave;','&eacute;','&ecirc;','&euml;','&igrave;','&iacute;','&icirc;','&iuml;','&eth;','&ntilde;','&ograve;','&oacute;','&ocirc;','&otilde;','&Ouml;','&times;','&oslash;','&ugrave;','&uacute;','&ucirc;','&Uuml;','&yacute;','&thorn;','&szlig;','&agrave;','&aacute;','&acirc;','&atilde;','&auml;','&aring;','&aelig;','&ccedil;','&egrave;','&eacute;','&ecirc;','&euml;','&igrave;','&iacute;','&icirc;','&iuml;','&eth;','&ntilde;','&ograve;','&oacute;','&ocirc;','&otilde;','&ouml;','&divide;','&Oslash;','&ugrave;','&uacute;','&ucirc;','&uuml;','&yacute;','&thorn;','&yuml;','&quot;','&amp;','&lt;','&gt;','&oelig;','&oelig;','&scaron;','&scaron;','&yuml;','&circ;','&tilde;','&ensp;','&emsp;','&thinsp;','&zwnj;','&zwj;','&lrm;','&rlm;','&ndash;','&mdash;','&lsquo;','&rsquo;','&sbquo;','&ldquo;','&rdquo;','&bdquo;','&dagger;','&dagger;','&permil;','&lsaquo;','&rsaquo;','&euro;','&fnof;','&alpha;','&beta;','&gamma;','&delta;','&epsilon;','&zeta;','&eta;','&theta;','&iota;','&kappa;','&lambda;','&mu;','&nu;','&xi;','&omicron;','&pi;','&rho;','&sigma;','&tau;','&upsilon;','&phi;','&chi;','&psi;','&omega;','&alpha;','&beta;','&gamma;','&delta;','&epsilon;','&zeta;','&eta;','&theta;','&iota;','&kappa;','&lambda;','&mu;','&nu;','&xi;','&omicron;','&pi;','&rho;','&sigmaf;','&sigma;','&tau;','&upsilon;','&phi;','&chi;','&psi;','&omega;','&thetasym;','&upsih;','&piv;','&bull;','&hellip;','&prime;','&prime;','&oline;','&frasl;','&weierp;','&image;','&real;','&trade;','&alefsym;','&larr;','&uarr;','&rarr;','&darr;','&harr;','&crarr;','&larr;','&uarr;','&rarr;','&darr;','&harr;','&forall;','&part;','&exist;','&empty;','&nabla;','&isin;','&notin;','&ni;','&prod;','&sum;','&minus;','&lowast;','&radic;','&prop;','&infin;','&ang;','&and;','&or;','&cap;','&cup;','&int;','&there4;','&sim;','&cong;','&asymp;','&ne;','&equiv;','&le;','&ge;','&sub;','&sup;','&nsub;','&sube;','&supe;','&oplus;','&otimes;','&perp;','&sdot;','&lceil;','&rceil;','&lfloor;','&rfloor;','&lang;','&rang;','&loz;','&spades;','&clubs;','&hearts;','&diams;');
+	var arr2 = new Array('&#160;','&#161;','&#162;','&#163;','&#164;','&#165;','&#166;','&#167;','&#168;','&#169;','&#170;','&#171;','&#172;','&#173;','&#174;','&#175;','&#176;','&#177;','&#178;','&#179;','&#180;','&#181;','&#182;','&#183;','&#184;','&#185;','&#186;','&#187;','&#188;','&#189;','&#190;','&#191;','&#192;','&#193;','&#194;','&#195;','&#196;','&#197;','&#198;','&#199;','&#200;','&#201;','&#202;','&#203;','&#204;','&#205;','&#206;','&#207;','&#208;','&#209;','&#210;','&#211;','&#212;','&#213;','&#214;','&#215;','&#216;','&#217;','&#218;','&#219;','&#220;','&#221;','&#222;','&#223;','&#224;','&#225;','&#226;','&#227;','&#228;','&#229;','&#230;','&#231;','&#232;','&#233;','&#234;','&#235;','&#236;','&#237;','&#238;','&#239;','&#240;','&#241;','&#242;','&#243;','&#244;','&#245;','&#246;','&#247;','&#248;','&#249;','&#250;','&#251;','&#252;','&#253;','&#254;','&#255;','&#34;','&#38;','&#60;','&#62;','&#338;','&#339;','&#352;','&#353;','&#376;','&#710;','&#732;','&#8194;','&#8195;','&#8201;','&#8204;','&#8205;','&#8206;','&#8207;','&#8211;','&#8212;','&#8216;','&#8217;','&#8218;','&#8220;','&#8221;','&#8222;','&#8224;','&#8225;','&#8240;','&#8249;','&#8250;','&#8364;','&#402;','&#913;','&#914;','&#915;','&#916;','&#917;','&#918;','&#919;','&#920;','&#921;','&#922;','&#923;','&#924;','&#925;','&#926;','&#927;','&#928;','&#929;','&#931;','&#932;','&#933;','&#934;','&#935;','&#936;','&#937;','&#945;','&#946;','&#947;','&#948;','&#949;','&#950;','&#951;','&#952;','&#953;','&#954;','&#955;','&#956;','&#957;','&#958;','&#959;','&#960;','&#961;','&#962;','&#963;','&#964;','&#965;','&#966;','&#967;','&#968;','&#969;','&#977;','&#978;','&#982;','&#8226;','&#8230;','&#8242;','&#8243;','&#8254;','&#8260;','&#8472;','&#8465;','&#8476;','&#8482;','&#8501;','&#8592;','&#8593;','&#8594;','&#8595;','&#8596;','&#8629;','&#8656;','&#8657;','&#8658;','&#8659;','&#8660;','&#8704;','&#8706;','&#8707;','&#8709;','&#8711;','&#8712;','&#8713;','&#8715;','&#8719;','&#8721;','&#8722;','&#8727;','&#8730;','&#8733;','&#8734;','&#8736;','&#8743;','&#8744;','&#8745;','&#8746;','&#8747;','&#8756;','&#8764;','&#8773;','&#8776;','&#8800;','&#8801;','&#8804;','&#8805;','&#8834;','&#8835;','&#8836;','&#8838;','&#8839;','&#8853;','&#8855;','&#8869;','&#8901;','&#8968;','&#8969;','&#8970;','&#8971;','&#9001;','&#9002;','&#9674;','&#9824;','&#9827;','&#9829;','&#9830;');
+	return this.swapArrayVals(s, arr1, arr2);
+};
+
+// HTML Decode numerical and HTML entities back to original values
+AgendaAssistant.prototype.htmlDecode = function(s) {
+
+	var c,m,d = s;
+	
+	if(this.isEmpty(d)) return "";
+
+	// convert HTML entites back to numerical entites first
+	d = this.HTML2Numerical(d);
+
+	// look for numerical entities &#34;
+	arr=d.match(/&#[0-9]{1,5};/g);
+	
+	// if no matches found in string then skip
+	if (arr!=null) {
+		for (var x=0; x<arr.length; x++) {
+			m = arr[x];
+			c = m.substring(2, m.length-1); //get numeric part which is refernce to unicode character
+			// if its a valid number we can decode
+			if (c >= -32768 && c <= 65535){
+				// decode every single match within string
+				d = d.replace(m, String.fromCharCode(c));
+			} else {
+				d = d.replace(m, ""); //invalid so replace with nada
+			}
+		}			
+	}
+
+	return d;
+};
+
 AgendaAssistant.prototype.handleCommand = function(event) {
 	if (event.type == Mojo.Event.command) {
 		if (event.command == "prefs") {
@@ -239,4 +360,5 @@ AgendaAssistant.prototype.cleanup = function(event) {
 	/* this function should do any cleanup needed before the scene is destroyed as 
 	   a result of being popped off the scene stack */
 	agendaModel.stopObservingDB("Agenda");
-};
\ No newline at end of file
+};
+
diff --git a/usr/palm/applications/com.palm.app.agendaview/app/assistants/app-assistant.js b/usr/palm/applications/com.palm.app.agendaview/app/assistants/app-assistant.js
index 603babf..364bcba 100644
--- a/usr/palm/applications/com.palm.app.agendaview/app/assistants/app-assistant.js
+++ b/usr/palm/applications/com.palm.app.agendaview/app/assistants/app-assistant.js
@@ -13,7 +13,7 @@ AppAssistant.prototype.handleLaunch = function(params) {
 	trace('handle launch');
 	if (params) 
 	{
-		if(params.dockMode)
+		if (params.dockMode)
 		{ 
 			agendaModel.launchMode = AgendaModel.LaunchModes.DOCK;
 		}
@@ -21,6 +21,11 @@ AppAssistant.prototype.handleLaunch = function(params) {
 		{
 			agendaModel.launchMode = AgendaModel.LaunchModes.PREFS;
 		}
+		else if (params.query)
+		{
+			agendaModel.query = params.query;
+			Mojo.Log.error("%j", params);
+		}
 	}
 
 };
\ No newline at end of file
diff --git a/usr/palm/applications/com.palm.app.agendaview/app/assistants/stage-assistant.js b/usr/palm/applications/com.palm.app.agendaview/app/assistants/stage-assistant.js
index eb13656..9e16aa0 100644
--- a/usr/palm/applications/com.palm.app.agendaview/app/assistants/stage-assistant.js
+++ b/usr/palm/applications/com.palm.app.agendaview/app/assistants/stage-assistant.js
@@ -7,6 +7,7 @@ StageAssistant.prototype.setup = function() {
 	
 	var alias = this;
 	trace('stage setup');
+	Mojo.Log.error('stage setup');
 	
 	agendaModel.init(function() {
 		if (agendaModel.launchMode == AgendaModel.LaunchModes.PREFS)
diff --git a/usr/palm/applications/com.palm.app.agendaview/app/model/AgendaModel.js b/usr/palm/applications/com.palm.app.agendaview/app/model/AgendaModel.js
index 6db82b8..46675d8 100644
--- a/usr/palm/applications/com.palm.app.agendaview/app/model/AgendaModel.js
+++ b/usr/palm/applications/com.palm.app.agendaview/app/model/AgendaModel.js
@@ -18,6 +18,7 @@ function AgendaModel()
 	this.systemWallpaper = null;
 	this.launchMode = AgendaModel.LaunchModes.NORM;
 	this.bgType = AgendaModel.BgTypes.FLOWERS;
+	this.query = "";
 	
 	// indicates that there is new data. set to true after the initial getEvents call completes,
 	// as well as any time the db notifies us of changes
@@ -67,7 +68,7 @@ AgendaModel.prototype.init = function(callback)
 		},
 	    onFailure: function(resp) {}
 	});
-
+	
 	return;
 	
 	// get the system wallpaper
@@ -110,7 +111,7 @@ AgendaModel.prototype.getCalData = function(callback)
 	if (!this.dbChanged) return;
 	
 	var startTime = new Date().clearTime().getTime();
-	var endTime = new Date().addDays(1).clearTime().getTime();
+	var endTime = new Date().addDays(14).clearTime().getTime();
 	
 	trace("dateStart: " + startTime + "(" + new Date().addDays(1).clearTime() + ")");
 	trace("dateEnd: " + endTime + "(" + new Date().addDays(2).clearTime() + ")");
@@ -127,7 +128,7 @@ AgendaModel.prototype.getCalData = function(callback)
 
 	var retrieveEvents = function() {
 		that.eventManager.getEventsInRange(range, function(params) { 
-			trace('days: ' + params.days.length); 
+			trace('days: ' + params.days.length);
 		
 			function addEvent(ev) {
 				events.push({ 
@@ -142,6 +143,10 @@ AgendaModel.prototype.getCalData = function(callback)
 			}
 		
 			var evs = params.days[0].events.concat(params.days[0].allDayEvents);
+			for (var i=1; i<params.days.length; i++) {
+				evs = evs.concat(params.days[i].events);
+				evs = evs.concat(params.days[i].allDayEvents);
+			}
 			trace("events: " + evs.length);
 			trace(new Date());
 			for (var i=0; i<evs.length; i++) {
@@ -183,6 +188,114 @@ AgendaModel.prototype.getCalData = function(callback)
 
 };
 
+// may want to implement the 'paging' supported by the list widget (only retrieving needed rows)
+AgendaModel.prototype.findCalData = function(callback, query)
+{
+	if (DEBUG_OLD_VERSION) {
+		// this.calData = AgendaModel.getDummyData();
+		this.calData = [];
+		callback(this.calData);
+		return;
+	}
+	
+    /*
+	var dateEnd = new Date();
+	trace("now: " + dateEnd);
+    var dateStart = new Date(dateEnd.getFullYear(),dateEnd.getMonth(),dateEnd.getDate(), 0, 0, 0, 0);
+
+	var startTime = dateStart.getTime();
+    dateEnd.setTime(startTime+86399999);
+	var endTime = dateEnd.getTime();
+	*/
+	
+	if (!this.dbChanged) return;
+	
+	var startTime = new Date().addYears(-2).clearTime().getTime();
+	var endTime = new Date().addYears(1).clearTime().getTime();
+	
+	trace("dateStart: " + startTime + "(" + new Date().addDays(1).clearTime() + ")");
+	trace("dateEnd: " + endTime + "(" + new Date().addDays(2).clearTime() + ")");
+	
+	var that = this;
+	var events = [];
+	
+	var	range =
+	{ 
+		start	: startTime,
+		end		: endTime,
+		tzId	: this.timezone
+	};
+	
+	query = query.toUpperCase();
+
+	var retrieveEvents = function() {
+		that.eventManager.getEventsInRange(range, function(params) { 
+			trace('days: ' + params.days.length);
+		
+			function addEvent(ev) {
+				events.push({ 
+					subject: ev.subject, 
+					location: ev.location, 
+					starttime: Mojo.Format.formatDate(new Date(ev.renderStartTime), { time: 'short' }),
+					dtstart: ev.renderStartTime,
+					dtend: ev.renderEndTime,
+					duration: Util.formatDuration(ev.dtend - ev.dtstart), 
+					allDay: ev.allDay 
+				});
+			}
+		
+			var evs = params.days[0].events.concat(params.days[0].allDayEvents);
+			for (var i=1; i<params.days.length; i++) {
+				evs = evs.concat(params.days[i].events);
+				evs = evs.concat(params.days[i].allDayEvents);
+			}
+			trace("events: " + evs.length);
+			trace(new Date());
+			for (var i=0; i<evs.length; i++) {
+				var ev = evs[i];
+				//trace(ev.subject);
+				//Mojo.Log.error("%j", ev);
+				
+				if (((ev.subject !== undefined) && (ev.subject.toUpperCase().indexOf(query) > -1)) ||
+					((ev.location !== undefined) && (ev.location.toUpperCase().indexOf(query) > -1)) ||
+					((ev.note !== undefined) && (ev.note.toUpperCase().indexOf(query) > -1))) {
+					Mojo.Log.error(new Date(ev.dtstart), ev.subject);
+					addEvent(ev);
+				}
+			}
+		
+			// sort the calendar events by date
+			events.sort(function(a,b) {
+				if (a.dtstart > b.dtstart)
+				{
+					return 1;
+				}
+				else if (a.dtstart == b.dtstart) 
+				{
+					if (a.dtend > b.dtend)
+					{
+						return -1;
+					}
+					else
+					{
+						return 1;
+					}
+				} 
+				else {
+					return 0;
+				}
+			});
+
+			that.calData = events;
+			callback(that.calData);
+		
+		});
+	};
+	
+	retrieveEvents();
+
+};
+
 AgendaModel.prototype.observeDB = function(sceneName, sceneController) {
 	if (!DEBUG_OLD_VERSION) {
 		this.eventManager.observeDatabaseChanges("Agenda", sceneController);
@@ -213,6 +326,7 @@ AgendaModel.prototype.getBackgroundImage = function(callback, isLandscape)
 			break;
 		case AgendaModel.BgTypes.NONE:
 			callback("");
+			break;
 		case AgendaModel.BgTypes.FLOWERS:
 			var url = FLOWERS_URL;
 			if (isLandscape) 
diff --git a/usr/palm/applications/com.palm.app.agendaview/app/views/Preferences/Preferences-scene.html b/usr/palm/applications/com.palm.app.agendaview/app/views/Preferences/Preferences-scene.html
index 0759cbc..cb41040 100644
--- a/usr/palm/applications/com.palm.app.agendaview/app/views/Preferences/Preferences-scene.html
+++ b/usr/palm/applications/com.palm.app.agendaview/app/views/Preferences/Preferences-scene.html
@@ -16,7 +16,6 @@
 		</div>
 	</div>
 	
-	
 	<div id="saveButton" x-mojo-element="Button"></div>
 	<div id="cancelButton" x-mojo-element="Button"></div>
 	
diff --git a/usr/palm/applications/com.palm.app.agendaview/appinfo.json b/usr/palm/applications/com.palm.app.agendaview/appinfo.json
index d97de90..65420f6 100644
--- a/usr/palm/applications/com.palm.app.agendaview/appinfo.json
+++ b/usr/palm/applications/com.palm.app.agendaview/appinfo.json
@@ -8,5 +8,12 @@
        "icon": "icon-64x64.png",
        "splashicon": "icon-256x256.png",
        "dockMode":true,
-       "visible":"false"
+       "visible":"true",
+    "universalSearch": {
+        "search": {
+            "displayName": "Agenda",
+            "url": "com.palm.app.agendaview",
+            "launchParam": "query"
+        }
+    }
 }
\ No newline at end of file
diff --git a/usr/palm/applications/com.palm.app.agendaview/resources/de/appinfo.json b/usr/palm/applications/com.palm.app.agendaview/resources/de/appinfo.json
index df6477c..b8124d5 100644
--- a/usr/palm/applications/com.palm.app.agendaview/resources/de/appinfo.json
+++ b/usr/palm/applications/com.palm.app.agendaview/resources/de/appinfo.json
@@ -8,5 +8,12 @@
 	"type": "web",
 	"vendor": "Palm",
 	"version": "0.2.20101214",
-	"visible": "false"
+	"visible": "true",
+    "universalSearch": {
+        "search": {
+            "displayName": "Agenda",
+            "url": "com.palm.app.agendaview",
+            "launchParam": "query"
+        }
+    }
 }
diff --git a/usr/palm/applications/com.palm.app.agendaview/resources/en/ca/appinfo.json b/usr/palm/applications/com.palm.app.agendaview/resources/en/ca/appinfo.json
index 091d1ce..058fe74 100644
--- a/usr/palm/applications/com.palm.app.agendaview/resources/en/ca/appinfo.json
+++ b/usr/palm/applications/com.palm.app.agendaview/resources/en/ca/appinfo.json
@@ -8,5 +8,12 @@
 	"type": "web",
 	"vendor": "Palm",
 	"version": "0.2.20101214",
-	"visible": "false"
+	"visible": "true",
+    "universalSearch": {
+        "search": {
+            "displayName": "Agenda",
+            "url": "com.palm.app.agendaview",
+            "launchParam": "query"
+        }
+    }
 }
diff --git a/usr/palm/applications/com.palm.app.agendaview/resources/en/gb/appinfo.json b/usr/palm/applications/com.palm.app.agendaview/resources/en/gb/appinfo.json
index 091d1ce..058fe74 100644
--- a/usr/palm/applications/com.palm.app.agendaview/resources/en/gb/appinfo.json
+++ b/usr/palm/applications/com.palm.app.agendaview/resources/en/gb/appinfo.json
@@ -8,5 +8,12 @@
 	"type": "web",
 	"vendor": "Palm",
 	"version": "0.2.20101214",
-	"visible": "false"
+	"visible": "true",
+    "universalSearch": {
+        "search": {
+            "displayName": "Agenda",
+            "url": "com.palm.app.agendaview",
+            "launchParam": "query"
+        }
+    }
 }
diff --git a/usr/palm/applications/com.palm.app.agendaview/resources/es/appinfo.json b/usr/palm/applications/com.palm.app.agendaview/resources/es/appinfo.json
index df6477c..b8124d5 100644
--- a/usr/palm/applications/com.palm.app.agendaview/resources/es/appinfo.json
+++ b/usr/palm/applications/com.palm.app.agendaview/resources/es/appinfo.json
@@ -8,5 +8,12 @@
 	"type": "web",
 	"vendor": "Palm",
 	"version": "0.2.20101214",
-	"visible": "false"
+	"visible": "true",
+    "universalSearch": {
+        "search": {
+            "displayName": "Agenda",
+            "url": "com.palm.app.agendaview",
+            "launchParam": "query"
+        }
+    }
 }
diff --git a/usr/palm/applications/com.palm.app.agendaview/resources/es/es/appinfo.json b/usr/palm/applications/com.palm.app.agendaview/resources/es/es/appinfo.json
index 091d1ce..058fe74 100644
--- a/usr/palm/applications/com.palm.app.agendaview/resources/es/es/appinfo.json
+++ b/usr/palm/applications/com.palm.app.agendaview/resources/es/es/appinfo.json
@@ -8,5 +8,12 @@
 	"type": "web",
 	"vendor": "Palm",
 	"version": "0.2.20101214",
-	"visible": "false"
+	"visible": "true",
+    "universalSearch": {
+        "search": {
+            "displayName": "Agenda",
+            "url": "com.palm.app.agendaview",
+            "launchParam": "query"
+        }
+    }
 }
diff --git a/usr/palm/applications/com.palm.app.agendaview/resources/fr/appinfo.json b/usr/palm/applications/com.palm.app.agendaview/resources/fr/appinfo.json
index df6477c..b8124d5 100644
--- a/usr/palm/applications/com.palm.app.agendaview/resources/fr/appinfo.json
+++ b/usr/palm/applications/com.palm.app.agendaview/resources/fr/appinfo.json
@@ -8,5 +8,12 @@
 	"type": "web",
 	"vendor": "Palm",
 	"version": "0.2.20101214",
-	"visible": "false"
+	"visible": "true",
+    "universalSearch": {
+        "search": {
+            "displayName": "Agenda",
+            "url": "com.palm.app.agendaview",
+            "launchParam": "query"
+        }
+    }
 }
diff --git a/usr/palm/applications/com.palm.app.agendaview/resources/fr/ca/appinfo.json b/usr/palm/applications/com.palm.app.agendaview/resources/fr/ca/appinfo.json
index 091d1ce..058fe74 100644
--- a/usr/palm/applications/com.palm.app.agendaview/resources/fr/ca/appinfo.json
+++ b/usr/palm/applications/com.palm.app.agendaview/resources/fr/ca/appinfo.json
@@ -8,5 +8,12 @@
 	"type": "web",
 	"vendor": "Palm",
 	"version": "0.2.20101214",
-	"visible": "false"
+	"visible": "true",
+    "universalSearch": {
+        "search": {
+            "displayName": "Agenda",
+            "url": "com.palm.app.agendaview",
+            "launchParam": "query"
+        }
+    }
 }
diff --git a/usr/palm/applications/com.palm.app.agendaview/resources/it/appinfo.json b/usr/palm/applications/com.palm.app.agendaview/resources/it/appinfo.json
index df6477c..b8124d5 100644
--- a/usr/palm/applications/com.palm.app.agendaview/resources/it/appinfo.json
+++ b/usr/palm/applications/com.palm.app.agendaview/resources/it/appinfo.json
@@ -8,5 +8,12 @@
 	"type": "web",
 	"vendor": "Palm",
 	"version": "0.2.20101214",
-	"visible": "false"
+	"visible": "true",
+    "universalSearch": {
+        "search": {
+            "displayName": "Agenda",
+            "url": "com.palm.app.agendaview",
+            "launchParam": "query"
+        }
+    }
 }
