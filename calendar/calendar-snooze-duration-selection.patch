diff --git a/usr/palm/applications/com.palm.app.calendar/app/controllers/app-assistant.js b/usr/palm/applications/com.palm.app.calendar/app/controllers/app-assistant.js
index 5375929..3509e2a 100644
--- a/usr/palm/applications/com.palm.app.calendar/app/controllers/app-assistant.js
+++ b/usr/palm/applications/com.palm.app.calendar/app/controllers/app-assistant.js
@@ -399,9 +399,9 @@ var AppAssistant = Class.create({
 		var reminder = getReminderManager().getReminder(eventId);
 		reminder.userClosed = false;
 		if (reminder.attendees.length > 1 /*now we include the organizer in attendee list*/)
-			height = 203;
+			height = 280; //203 orig; 74 + a couple to get more choices
 		else
-		  	height = 149;
+		  	height = 226; //149 orig;
 		
 		var needThrobbing =(hasNewContent || !isSnoozedReminder) ? true:false;
 		Mojo.Log.info("$$$$$$$$ AppAssistant doAlarm:createStageWithCallback for stage: "+this.createAlarmStageName(eventId)+", stage height is: "+height);
diff --git a/usr/palm/applications/com.palm.app.calendar/app/controllers/reminder-assistant.js b/usr/palm/applications/com.palm.app.calendar/app/controllers/reminder-assistant.js
index d190fd1..a02bf7c 100644
--- a/usr/palm/applications/com.palm.app.calendar/app/controllers/reminder-assistant.js
+++ b/usr/palm/applications/com.palm.app.calendar/app/controllers/reminder-assistant.js
@@ -4,7 +4,7 @@
 var ReminderAssistant = Class.create({
 	initialize: function(eventId,needThrobbing) {
 		Mojo.Log.info("$$$$$$$$ Reminder-assistant initialize: start: "+eventId);
-		this.DEFAULT_SNOOZE = 5;
+		this.DEFAULT_SNOOZE = -15;
 		this.reminders = getReminderManager();
 		getAppAssistant().openReminderAlert = this;
 		this.requests = [];
@@ -26,7 +26,49 @@ var ReminderAssistant = Class.create({
 		Mojo.Log.info("$$$$$$$$ Reminder-assistant activate:end");
 	},
 	
+	snoozeOptions: [
+		{label:$L('5 Minutes before start'), value:'-5'},
+		{label:$L('10 Minutes before start'), value:'-10'},
+		{label:$L('15 Minutes before start'), value:'-15'},
+		{label:$L('30 Minutes before start'), value:'-30'},
+		{label:$L('5 Minutes'), value:'5'},
+		{label:$L('10 Minutes'), value:'10'},
+		{label:$L('15 Minutes'), value:'15'},
+		{label:$L('30 Minutes'), value:'30'},
+		{label:$L('1 Hour'), value:'60'},
+		{label:$L('2 Hours'), value:'120'},
+		{label:$L('4 Hours'), value:'240'},
+		{label:$L('8 Hours'), value:'480'},
+		{label:$L('10 Hours'), value:'600'},
+		{label:$L('12 Hours'), value:'720'},
+		{label:$L('1 Day'), value:'1440'},
+		{label:$L('2 Days'), value:'2880'},
+		{label:$L('3 Days'), value:'4320'},
+		{label:$L('4 Days'), value:'5760'},
+		{label:$L('5 Days'), value:'7200'},
+		{label:$L('6 Days'), value:'8640'},
+		{label:$L('1 Week'), value:'10080'},
+		{label:$L('2 Weeks'), value:'20160'}
+	],
+
 	setup: function() {
+		this.controller.setupWidget('myscroller',
+		{
+			mode:'vertical'
+		});
+
+		//setup the snooze duration selector list
+		this.selectorChoices = this.snoozeOptions;
+		this.selectorAttributes = { label: "Snooze Duration", labelPlacement: "left", choices: this.selectorChoices, modelProperty:'value' };
+
+		//Need to figure out how to remember previous selected snooze value.
+		//set the default duration to match the default snooze value
+		this.selectorModel = {value:'-15'};
+		this.selectorModel.value = '-15'; 
+		this.controller.setupWidget('snoozeSelector', this.selectorAttributes, this.selectorModel);
+
+		this.onSnoozeDurationChangedHandler = this.onSnoozeDurationChanged.bindAsEventListener(this);
+
 		Mojo.Log.info("$$$$$$$$ Reminder-assistant setup:start");
 		this.service = getCalendarService();
 
@@ -150,6 +192,9 @@ var ReminderAssistant = Class.create({
 		
 		this.controller.get('reminder-dismiss').addEventListener(Mojo.Event.tap, this.onDismissHandler);
 		this.controller.get('reminder-snooze').addEventListener(Mojo.Event.tap, this.onSnoozeHandler);
+
+		//add snoozeDuration event listners
+		this.controller.get('snoozeSelector').addEventListener(Mojo.Event.propertyChange, this.onSnoozeDurationChangedHandler);
 	},
 
 	removeListeners: function() {
@@ -167,6 +212,10 @@ var ReminderAssistant = Class.create({
 		if (email) email.removeEventListener(Mojo.Event.tap, this.onEmailHandler);
 		var snooze = this.controller.get('reminder-snooze');
 		if (snooze) snooze.removeEventListener(Mojo.Event.tap, this.onSnoozeHandler);
+
+		//remove snoozeDuration event listners
+		var snoozeDuration = this.controller.get('snoozeSelector');
+		if (snoozeDuration) snoozeDuration.removeEventListener(Mojo.Event.propertyChange, this.onSnoozeDurationChangedHandler);
 	},
 	
 	
@@ -307,6 +356,16 @@ var ReminderAssistant = Class.create({
 		Mojo.Log.info("$$$$$$$$ Reminder-assistant onSnooze: end: " + this.reminder.id);
 	},
 	
+	/* handle the change event for the snooze duration.
+	 * set the default snooze value to the selection value
+	 * need to figure out how to save this value for reuse when the snooze duration
+	 * expires so that we can set the selection to the same value prevously selected
+	 */
+	onSnoozeDurationChanged: function(value) {
+		this.DEFAULT_SNOOZE = this.selectorModel.value;
+		this.closeAlert();
+	},
+
 	removeReminder: function() {
 		Mojo.Log.info("$$$$$$$$ Reminder-assistant removeReminder: start: " + this.reminder.id);
 		this.reminders.removeReminder(this.reminder.id);
@@ -342,7 +401,17 @@ var ReminderAssistant = Class.create({
 			return;
 		}	
 		
-		var snooze = new Date().addMinutes(minutes);
+		var snooze;
+		
+		if( minutes >=0 )
+		{
+			snooze = new Date().addMinutes(minutes);
+		}
+		else
+		{
+			snooze = new Date(this.reminder.time).addMinutes(minutes);
+		}
+		
 		Mojo.Log.info("$$$$$$$$ Reminder-assistant snooze: updateTask: calendar-snooze-" + this.reminder.id + "   date = " + snooze.toUTCString());
 		
 		this.controller.serviceRequest('palm://com.palm.taskScheduler', {
diff --git a/usr/palm/applications/com.palm.app.calendar/app/views/reminder/reminder-scene.html b/usr/palm/applications/com.palm.app.calendar/app/views/reminder/reminder-scene.html
index c3ca688..eb9904d 100644
--- a/usr/palm/applications/com.palm.app.calendar/app/views/reminder/reminder-scene.html
+++ b/usr/palm/applications/com.palm.app.calendar/app/views/reminder/reminder-scene.html
@@ -1,3 +1,9 @@
+<style type="text/css">
+	.palm-popup-content {
+        	color: black;
+	}
+</style>
+
 <div class="palm-scene notification-panel reminder">
 	<div class="dashboard-notification-module single" x-mojo-touch-feedback="immediate"  x-palm-popup-content="">
 		<div class="palm-dashboard-icon-container">
@@ -9,6 +15,15 @@
 			<div id="reminder-event"  class="palm-dashboard-text-wrapper"></div>
 		</div>
 	</div>
+	<div class="palm-dashboard-text-container" style="width:auto;max-width:none">
+		<div class="palm-row" x-mojo-tap-highlight="momentary">
+			<div class="palm-row-wrapper">
+				<div id="myscroller" class="snoozeScroller" style="width:100%;height:100%" x-mojo-element="Scroller">
+					<div id="snoozeSelector" class="dashboard-event-snooze-duration" x-mojo-element="ListSelector"></div>
+				</div>
+			</div>
+		</div>
+	</div>
 	<div id="reminder-email" style="display:none"><div x-mojo-loc="" class="button-wrapper">Contact meeting attendees</div></div>
 	<div id="reminder-dismiss"><div x-mojo-loc="" class="button-wrapper">Dismiss</div></div>
 	<div id="reminder-snooze"><div x-mojo-loc="" class="button-wrapper">Snooze</div></div>
diff --git a/usr/palm/applications/com.palm.app.calendar/stylesheets/notification.css b/usr/palm/applications/com.palm.app.calendar/stylesheets/notification.css
index 4a84218..51b5e59 100644
--- a/usr/palm/applications/com.palm.app.calendar/stylesheets/notification.css
+++ b/usr/palm/applications/com.palm.app.calendar/stylesheets/notification.css
@@ -2,6 +2,10 @@
  * Copyright 2008 Palm Inc. Confidential until public release.
  */
 
+/*@import url(global.css);*/
+/*Note the version needs to be updated to match the latest mojo framework on your device.*/
+@import url(/usr/palm/frameworks/mojo/submissions/330/stylesheets/global.css);
+
 .notification-panel	{
     background: #000;
     color: #fff;
