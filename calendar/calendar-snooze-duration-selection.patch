This patch adds a snooze duration selection to the reminder notification. 
Currently i cannot get the snooze duration list to scroll so the snooze duration options are limited to 4 options.

11-15-09:
Updated for 1.3.1
Index: /usr/palm/applications/com.palm.app.calendar/app/controllers/app-assistant.js
===================================================================
--- .orig/usr/palm/applications/com.palm.app.calendar/app/controllers/app-assistant.js
+++ /usr/palm/applications/com.palm.app.calendar/app/controllers/app-assistant.js
@@ -343,9 +343,9 @@ var AppAssistant = Class.create({
 		var height;
 		var reminder = getReminderManager().getReminder(eventId);
 		if (reminder.attendees.length > 1 /*now we include the organizer in attendee list*/)
-			height = 203;
+			height = 280;//203 orig; 74 + a couple to get more choices
 		else
-		  	height = 149;
+		  	height = 226;//149 orig;
 		
 		var needThrobbing =(hasNewContent || !isSnoozedReminder) ? true:false;
 		//console.error("$$$$$$$$ AppAssistant doAlarm:createStageWithCallback for stage: "+this.createAlarmStageName(eventId));
Index: /usr/palm/applications/com.palm.app.calendar/app/controllers/reminder-assistant.js
===================================================================
--- .orig/usr/palm/applications/com.palm.app.calendar/app/controllers/reminder-assistant.js
+++ /usr/palm/applications/com.palm.app.calendar/app/controllers/reminder-assistant.js
@@ -4,7 +4,7 @@
 var ReminderAssistant = Class.create({
 	initialize: function(needThrobbing) {
 		//console.error("$$$$$$$$ Reminder-assistant initialize:start");
-		this.DEFAULT_SNOOZE = 5;
+		this.DEFAULT_SNOOZE = 30;
 		this.reminders = getReminderManager();
 		getAppAssistant().openReminderAlert = this;
 		this.requests = [];
@@ -23,7 +23,54 @@ var ReminderAssistant = Class.create({
 		}
 		//console.error("$$$$$$$$ Reminder-assistant activate:end");
 	},
+	
+	//Until i figure out (or someone) how to get the scrolling of the list selection to work reduce this
+		//list to your favorite three
+			//Make sure you update the default snooze value to respectively
+				//The options set in these instructions will give you a 30 min default value and the options for 1hr,
+					//2hrs and 1day. 
+						//Note that the 30min option is added to the top so we can use it as a default but is left in the
+							//correct location commented out for when the scrolling is working.
+	snoozeOptions: [
+		{label:$L('30 Minutes'), value:'30'},
+		//{label:$L('5 Minutes'), value:'5'},
+		//{label:$L('10 Minutes'), value:'10'},
+		{label:$L('15 Minutes'), value:'15'},
+		//{label:$L('30 Minutes'), value:'30'},
+		{label:$L('1 Hour'), value:'60'},
+		{label:$L('2 Hours'), value:'120'},
+		//{label:$L('4 Hours'), value:'240'},
+		//{label:$L('8 Hours'), value:'480'},
+		//{label:$L('10 Hours'), value:'600'},
+		//{label:$L('12 Hours'), value:'720'},
+		{label:$L('1 Day'), value:'1440'},
+		{label:$L('2 Days'), value:'2880'},
+		//{label:$L('3 Days'), value:'4320'},
+		//{label:$L('4 Days'), value:'5760'},
+		//{label:$L('5 Days'), value:'7200'},
+		//{label:$L('6 Days'), value:'8640'},
+		//{label:$L('1 Week'), value:'10080'},
+		//{label:$L('2 Weeks'), value:'20160'}
+	],
+	
 	setup: function() {
+		this.controller.setupWidget('myscroller',
+		{
+			mode:'vertical'
+		});
+
+		//setup the snooze duration selector list
+		this.selectorChoices = this.snoozeOptions;
+		this.selectorAttributes = { label: "Snooze Duration", labelPlacement: "left", choices: this.selectorChoices, modelProperty:'value' };
+
+		//Need to figure out how to remember previous selected snooze value.
+		//set the default duration to match the default snooze value
+		this.selectorModel = {value:'30'};
+		this.selectorModel.value = '30'; 
+		this.controller.setupWidget('snoozeSelector', this.selectorAttributes, this.selectorModel);
+
+		this.onSnoozeDurationChangedHandler = this.onSnoozeDurationChanged.bindAsEventListener(this);
+		
 		//console.error("$$$$$$$$ Reminder-assistant setup:start");
 		this.service = getCalendarService();
 
@@ -145,6 +192,9 @@ var ReminderAssistant = Class.create({
 		
 		this.controller.get('reminder-dismiss').addEventListener(Mojo.Event.tap, this.onDismissHandler);
 		this.controller.get('reminder-snooze').addEventListener(Mojo.Event.tap, this.onSnoozeHandler);
+		
+		//add snoozeDuration event listners
+		this.controller.get('snoozeSelector').addEventListener(Mojo.Event.propertyChange, this.onSnoozeDurationChangedHandler);
 	},
 
 	removeListeners: function() {
@@ -162,6 +212,10 @@ var ReminderAssistant = Class.create({
 		if (email) email.removeEventListener(Mojo.Event.tap, this.onEmailHandler);
 		var snooze = this.controller.get('reminder-snooze');
 		if (snooze) snooze.removeEventListener(Mojo.Event.tap, this.onSnoozeHandler);
+		
+		//remove snoozeDuration event listners
+		var snoozeDuration = this.controller.get('snoozeSelector');
+		if (snoozeDuration) snoozeDuration.removeEventListener(Mojo.Event.propertyChange, this.onSnoozeDurationChangedHandler);
 	},
 	
 	
@@ -260,7 +314,15 @@ var ReminderAssistant = Class.create({
 		this.closeAlert();
 		//console.error("$$$$$$$$ Reminder-assistant onSnooze: end: " + this.reminder.id);
 	},
-	
+
+	//handle the change event for the snooze duration.
+	//set the default snooze value to the selection value
+	//need to figure out how to save this value for reuse when the snooze duration expires so that we can set the selection to the same value prevously selected
+	onSnoozeDurationChanged: function(value) {
+		this.DEFAULT_SNOOZE = this.selectorModel.value;
+		this.closeAlert();
+	},
+		
 	removeReminder: function() {
 		//console.error("$$$$$$$$ Reminder-assistant removeReminder: start: " + this.reminder.id);
 		this.reminders.removeReminder(this.reminder.id);
Index: /usr/palm/applications/com.palm.app.calendar/app/views/reminder/reminder-scene.html
===================================================================
--- .orig/usr/palm/applications/com.palm.app.calendar/app/views/reminder/reminder-scene.html
+++ /usr/palm/applications/com.palm.app.calendar/app/views/reminder/reminder-scene.html
@@ -9,6 +9,15 @@
 			<div id="reminder-event"  class="palm-dashboard-text-wrapper"></div>
 		</div>
 	</div>
+	<div class="palm-dashboard-text-container">
+		<div class="palm-row" x-mojo-tap-highlight="momentary">
+			<div class="palm-row-wrapper">
+				<div id="myscroller" class="snoozeScroller" x-mojo-element="Scroller">
+					<div id="snoozeSelector" class="dashboard-event-snooze-duration" x-mojo-element="ListSelector"></div>
+				</div>
+			</div>
+		</div>
+	</div>
 	<div id="reminder-email" style="display:none" ><div class="button-wrapper" x-mojo-loc="">Contact meeting attendees</div></div>
 	<div id="reminder-dismiss" ><div class="button-wrapper" x-mojo-loc="">Dismiss</div></div>
 	<div id="reminder-snooze" ><div class="button-wrapper" x-mojo-loc="">Snooze</div></div>
Index: /usr/palm/applications/com.palm.app.calendar/stylesheets/notification.css
===================================================================
--- .orig/usr/palm/applications/com.palm.app.calendar/stylesheets/notification.css
+++ /usr/palm/applications/com.palm.app.calendar/stylesheets/notification.css
@@ -2,6 +2,10 @@
  * Copyright 2008 Palm Inc. Confidential until public release.
  */
 
+/*@import url(global.css);*/
+/*Note the version needs to be updated to match the latest mojo framework on your device.*/
+@import url(/usr/palm/frameworks/mojo/submissions/200.72/stylesheets/global.css);
+
 .notification-panel	{
     background: #000;
     color: #fff;
