diff --git a/usr/palm/applications/com.palm.app.camera/app/controllers/capture-assistant.js b/usr/palm/applications/com.palm.app.camera/app/controllers/capture-assistant.js
index 52ad9da..c7dccb4 100644
--- a/usr/palm/applications/com.palm.app.camera/app/controllers/capture-assistant.js
+++ b/usr/palm/applications/com.palm.app.camera/app/controllers/capture-assistant.js
@@ -76,6 +76,7 @@ CaptureAssistant = Class.create({
 
 		
 		this.controller.enableFullScreenMode(true);
+		this.mediaVolMuted(true);
 
 
 		this.controller.sceneElement.addClassName('preview-off');
@@ -325,6 +326,8 @@ CaptureAssistant = Class.create({
 
 		Mojo.stopListening(this.controller.sceneElement, Mojo.Event.keypress, this.onKeyPressHandler);
 		
+		this.mediaVolMuted(false);
+		
 		this.stopIdleCheck();
 		if (this._powerServiceEventRef) {
 			this._powerServiceEventRef.cancel();
@@ -1121,6 +1124,7 @@ CaptureAssistant = Class.create({
 			try{
 				if (!this.isFocused()){
 					this.cameraControl.freezePreview();
+					this.mediaVolMuted(false);
 	
 					GeoControl.stopTracking();
 				}
@@ -1162,6 +1166,7 @@ CaptureAssistant = Class.create({
 			
 			if (this.isFocused()) {
 				this.cameraControl.resumePreview();
+				this.mediaVolMuted(true);
 			}
 		}.bind(this), 350);
 	},
@@ -1215,6 +1220,13 @@ CaptureAssistant = Class.create({
 		return (this.controller.stageController.active && (this.controller.stageController.topScene().sceneName === 'capture'));
 	},
 
+	mediaVolMuted: function(mute){
+		this.controller.serviceRequest('palm://com.palm.audio/system', {
+			method:'setMuted',
+			parameters:{muted:mute}
+		});
+	},
+
 	setPhotorollUpdating: function(busy){
 		llog("setPhotorollUpdating: ", busy?"busy":"no busy");
 		
